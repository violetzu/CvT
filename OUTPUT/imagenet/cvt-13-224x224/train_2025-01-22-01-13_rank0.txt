2025-01-22 01:13:22,505:[P:5447]:Rank[0/1] => collecting env info (might take some time)
2025-01-22 01:13:27,775:[P:5447]:Rank[0/1] 
PyTorch version: 1.7.1+cu110
Is debug build: False
CUDA used to build PyTorch: 11.0
ROCM used to build PyTorch: N/A

OS: Ubuntu 20.04.6 LTS (x86_64)
GCC version: (Ubuntu 9.4.0-1ubuntu1~20.04.1) 9.4.0
Clang version: Could not collect
CMake version: Could not collect

Python version: 3.9 (64-bit runtime)
Is CUDA available: True
CUDA runtime version: 10.1.243
GPU models and configuration: GPU 0: NVIDIA GeForce RTX 2070
Nvidia driver version: 536.23
cuDNN version: Could not collect
HIP runtime version: N/A
MIOpen runtime version: N/A

Versions of relevant libraries:
[pip3] numpy==1.19.3
[pip3] torch==1.7.1+cu110
[pip3] torchvision==0.8.2+cu110
[conda] _pytorch_select           0.1                       cpu_0  
[conda] blas                      1.0                         mkl  
[conda] cpuonly                   2.0                           0    pytorch
[conda] libmklml                  2019.0.5             h06a4308_0  
[conda] mkl                       2020.2                      256  
[conda] mkl-service               2.3.0            py39he8ac12f_0  
[conda] mkl_fft                   1.3.0            py39h54f3939_0  
[conda] mkl_random                1.0.2            py39h63df603_0  
[conda] numpy                     1.19.3                   pypi_0    pypi
[conda] pytorch-mutex             1.0                         cpu    pytorch
[conda] torch                     1.7.1+cu110              pypi_0    pypi
[conda] torchvision               0.8.2+cu110              pypi_0    pypi
2025-01-22 01:13:27,775:[P:5447]:Rank[0/1] Namespace(cfg='experiments/imagenet/cvt/cvt-13-224x224.yaml', local_rank=0, port=9000, opts=[], num_gpus=1, distributed=False)
2025-01-22 01:13:27,775:[P:5447]:Rank[0/1] AMP:
  ENABLED: True
  MEMORY_FORMAT: nchw
AUG:
  COLOR_JITTER: [0.4, 0.4, 0.4, 0.1, 0.0]
  DROPBLOCK_BLOCK_SIZE: 7
  DROPBLOCK_KEEP_PROB: 1.0
  DROPBLOCK_LAYERS: [3, 4]
  GAUSSIAN_BLUR: 0.0
  GRAY_SCALE: 0.0
  INTERPOLATION: 2
  MIXCUT: 1.0
  MIXCUT_AND_MIXUP: False
  MIXCUT_MINMAX: []
  MIXUP: 0.8
  MIXUP_MODE: batch
  MIXUP_PROB: 1.0
  MIXUP_SWITCH_PROB: 0.5
  RATIO: (0.75, 1.3333333333333333)
  SCALE: (0.08, 1.0)
  TIMM_AUG:
    AUTO_AUGMENT: rand-m9-mstd0.5-inc1
    COLOR_JITTER: 0.4
    HFLIP: 0.5
    INTERPOLATION: bicubic
    RE_COUNT: 1
    RE_MODE: pixel
    RE_PROB: 0.25
    RE_SPLIT: False
    USE_LOADER: True
    USE_TRANSFORM: False
    VFLIP: 0.0
BASE: ['']
CUDNN:
  BENCHMARK: True
  DETERMINISTIC: False
  ENABLED: True
DATASET:
  DATASET: imagenet
  DATA_FORMAT: jpg
  LABELMAP: 
  ROOT: DATASET/imagenet/
  SAMPLER: default
  TARGET_SIZE: -1
  TEST_SET: val
  TEST_TSV_LIST: []
  TRAIN_SET: train
  TRAIN_TSV_LIST: []
DATA_DIR: 
DEBUG:
  DEBUG: False
DIST_BACKEND: nccl
FINETUNE:
  BASE_LR: 0.003
  BATCH_SIZE: 512
  EVAL_EVERY: 3000
  FINETUNE: False
  FROZEN_LAYERS: []
  LR_SCHEDULER:
    DECAY_TYPE: step
  TRAIN_MODE: True
  USE_TRAIN_AUG: False
GPUS: (0,)
INPUT:
  MEAN: [0.485, 0.456, 0.406]
  STD: [0.229, 0.224, 0.225]
LOSS:
  LABEL_SMOOTHING: 0.1
  LOSS: softmax
MODEL:
  INIT_WEIGHTS: True
  NAME: cls_cvt
  NUM_CLASSES: 1000
  PRETRAINED: 
  PRETRAINED_LAYERS: ['*']
  SPEC:
    ATTN_DROP_RATE: [0.0, 0.0, 0.0]
    CLS_TOKEN: [False, False, True]
    DEPTH: [1, 2, 10]
    DIM_EMBED: [64, 192, 384]
    DROP_PATH_RATE: [0.0, 0.0, 0.1]
    DROP_RATE: [0.0, 0.0, 0.0]
    INIT: trunc_norm
    KERNEL_QKV: [3, 3, 3]
    MLP_RATIO: [4.0, 4.0, 4.0]
    NUM_HEADS: [1, 3, 6]
    NUM_STAGES: 3
    PADDING_KV: [1, 1, 1]
    PADDING_Q: [1, 1, 1]
    PATCH_PADDING: [2, 1, 1]
    PATCH_SIZE: [7, 3, 3]
    PATCH_STRIDE: [4, 2, 2]
    POS_EMBED: [False, False, False]
    QKV_BIAS: [True, True, True]
    QKV_PROJ_METHOD: ['dw_bn', 'dw_bn', 'dw_bn']
    STRIDE_KV: [2, 2, 2]
    STRIDE_Q: [1, 1, 1]
MODEL_SUMMARY: False
MULTIPROCESSING_DISTRIBUTED: True
NAME: cvt-13-224x224
OUTPUT_DIR: OUTPUT/
PIN_MEMORY: True
PRINT_FREQ: 500
RANK: 0
TEST:
  BATCH_SIZE_PER_GPU: 32
  CENTER_CROP: True
  IMAGE_SIZE: [224, 224]
  INTERPOLATION: 3
  MODEL_FILE: 
  REAL_LABELS: False
  VALID_LABELS: 
TRAIN:
  AUTO_RESUME: True
  BATCH_SIZE_PER_GPU: 64
  BEGIN_EPOCH: 0
  CHECKPOINT: 
  CLIP_GRAD_NORM: 0.0
  DETECT_ANOMALY: False
  END_EPOCH: 2
  EVAL_BEGIN_EPOCH: 0
  GAMMA1: 0.99
  GAMMA2: 0.0
  IMAGE_SIZE: [224, 224]
  LR: 0.00025
  LR_SCHEDULER:
    ARGS:
      cooldown_epochs: 10
      decay_rate: 0.1
      epochs: 2
      min_lr: 1e-05
      sched: cosine
      warmup_epochs: 5
      warmup_lr: 1e-06
    METHOD: timm
  MOMENTUM: 0.9
  NESTEROV: True
  OPTIMIZER: adamW
  OPTIMIZER_ARGS:
    
  SAVE_ALL_MODELS: False
  SCALE_LR: True
  SHUFFLE: True
  WD: 0.05
  WITHOUT_WD_LIST: ['bn', 'bias', 'ln']
VERBOSE: True
WORKERS: 6
2025-01-22 01:13:27,776:[P:5447]:Rank[0/1] => using 1 GPUs
2025-01-22 01:13:27,776:[P:5447]:Rank[0/1] => saving config into: OUTPUT/imagenet/cvt-13-224x224/config.yaml
2025-01-22 01:13:27,810:[P:5447]:Rank[0/1] => init weight of Linear from trunc norm
2025-01-22 01:13:27,823:[P:5447]:Rank[0/1] => init bias of Linear to zeros
2025-01-22 01:13:27,823:[P:5447]:Rank[0/1] => init weight of Linear from trunc norm
2025-01-22 01:13:27,823:[P:5447]:Rank[0/1] => init bias of Linear to zeros
2025-01-22 01:13:27,823:[P:5447]:Rank[0/1] => init weight of Linear from trunc norm
2025-01-22 01:13:27,823:[P:5447]:Rank[0/1] => init bias of Linear to zeros
2025-01-22 01:13:27,824:[P:5447]:Rank[0/1] => init weight of Linear from trunc norm
2025-01-22 01:13:27,824:[P:5447]:Rank[0/1] => init bias of Linear to zeros
2025-01-22 01:13:27,824:[P:5447]:Rank[0/1] => init weight of Linear from trunc norm
2025-01-22 01:13:27,824:[P:5447]:Rank[0/1] => init bias of Linear to zeros
2025-01-22 01:13:27,824:[P:5447]:Rank[0/1] => init weight of Linear from trunc norm
2025-01-22 01:13:27,824:[P:5447]:Rank[0/1] => init bias of Linear to zeros
2025-01-22 01:13:27,835:[P:5447]:Rank[0/1] => init weight of Linear from trunc norm
2025-01-22 01:13:27,836:[P:5447]:Rank[0/1] => init bias of Linear to zeros
2025-01-22 01:13:27,836:[P:5447]:Rank[0/1] => init weight of Linear from trunc norm
2025-01-22 01:13:27,836:[P:5447]:Rank[0/1] => init bias of Linear to zeros
2025-01-22 01:13:27,836:[P:5447]:Rank[0/1] => init weight of Linear from trunc norm
2025-01-22 01:13:27,837:[P:5447]:Rank[0/1] => init bias of Linear to zeros
2025-01-22 01:13:27,837:[P:5447]:Rank[0/1] => init weight of Linear from trunc norm
2025-01-22 01:13:27,837:[P:5447]:Rank[0/1] => init bias of Linear to zeros
2025-01-22 01:13:27,837:[P:5447]:Rank[0/1] => init weight of Linear from trunc norm
2025-01-22 01:13:27,838:[P:5447]:Rank[0/1] => init bias of Linear to zeros
2025-01-22 01:13:27,838:[P:5447]:Rank[0/1] => init weight of Linear from trunc norm
2025-01-22 01:13:27,839:[P:5447]:Rank[0/1] => init bias of Linear to zeros
2025-01-22 01:13:27,839:[P:5447]:Rank[0/1] => init weight of Linear from trunc norm
2025-01-22 01:13:27,840:[P:5447]:Rank[0/1] => init bias of Linear to zeros
2025-01-22 01:13:27,840:[P:5447]:Rank[0/1] => init weight of Linear from trunc norm
2025-01-22 01:13:27,840:[P:5447]:Rank[0/1] => init bias of Linear to zeros
2025-01-22 01:13:27,840:[P:5447]:Rank[0/1] => init weight of Linear from trunc norm
2025-01-22 01:13:27,841:[P:5447]:Rank[0/1] => init bias of Linear to zeros
2025-01-22 01:13:27,841:[P:5447]:Rank[0/1] => init weight of Linear from trunc norm
2025-01-22 01:13:27,841:[P:5447]:Rank[0/1] => init bias of Linear to zeros
2025-01-22 01:13:27,841:[P:5447]:Rank[0/1] => init weight of Linear from trunc norm
2025-01-22 01:13:27,843:[P:5447]:Rank[0/1] => init bias of Linear to zeros
2025-01-22 01:13:27,843:[P:5447]:Rank[0/1] => init weight of Linear from trunc norm
2025-01-22 01:13:27,843:[P:5447]:Rank[0/1] => init bias of Linear to zeros
2025-01-22 01:13:27,960:[P:5447]:Rank[0/1] => init weight of Linear from trunc norm
2025-01-22 01:13:27,961:[P:5447]:Rank[0/1] => init bias of Linear to zeros
2025-01-22 01:13:27,961:[P:5447]:Rank[0/1] => init weight of Linear from trunc norm
2025-01-22 01:13:27,962:[P:5447]:Rank[0/1] => init bias of Linear to zeros
2025-01-22 01:13:27,962:[P:5447]:Rank[0/1] => init weight of Linear from trunc norm
2025-01-22 01:13:27,963:[P:5447]:Rank[0/1] => init bias of Linear to zeros
2025-01-22 01:13:27,963:[P:5447]:Rank[0/1] => init weight of Linear from trunc norm
2025-01-22 01:13:27,964:[P:5447]:Rank[0/1] => init bias of Linear to zeros
2025-01-22 01:13:27,964:[P:5447]:Rank[0/1] => init weight of Linear from trunc norm
2025-01-22 01:13:27,967:[P:5447]:Rank[0/1] => init bias of Linear to zeros
2025-01-22 01:13:27,967:[P:5447]:Rank[0/1] => init weight of Linear from trunc norm
2025-01-22 01:13:27,970:[P:5447]:Rank[0/1] => init bias of Linear to zeros
2025-01-22 01:13:27,971:[P:5447]:Rank[0/1] => init weight of Linear from trunc norm
2025-01-22 01:13:27,972:[P:5447]:Rank[0/1] => init bias of Linear to zeros
2025-01-22 01:13:27,972:[P:5447]:Rank[0/1] => init weight of Linear from trunc norm
2025-01-22 01:13:27,973:[P:5447]:Rank[0/1] => init bias of Linear to zeros
2025-01-22 01:13:27,973:[P:5447]:Rank[0/1] => init weight of Linear from trunc norm
2025-01-22 01:13:27,974:[P:5447]:Rank[0/1] => init bias of Linear to zeros
2025-01-22 01:13:27,974:[P:5447]:Rank[0/1] => init weight of Linear from trunc norm
2025-01-22 01:13:27,976:[P:5447]:Rank[0/1] => init bias of Linear to zeros
2025-01-22 01:13:27,976:[P:5447]:Rank[0/1] => init weight of Linear from trunc norm
2025-01-22 01:13:27,980:[P:5447]:Rank[0/1] => init bias of Linear to zeros
2025-01-22 01:13:27,980:[P:5447]:Rank[0/1] => init weight of Linear from trunc norm
2025-01-22 01:13:27,984:[P:5447]:Rank[0/1] => init bias of Linear to zeros
2025-01-22 01:13:27,984:[P:5447]:Rank[0/1] => init weight of Linear from trunc norm
2025-01-22 01:13:27,985:[P:5447]:Rank[0/1] => init bias of Linear to zeros
2025-01-22 01:13:27,985:[P:5447]:Rank[0/1] => init weight of Linear from trunc norm
2025-01-22 01:13:27,987:[P:5447]:Rank[0/1] => init bias of Linear to zeros
2025-01-22 01:13:27,987:[P:5447]:Rank[0/1] => init weight of Linear from trunc norm
2025-01-22 01:13:27,988:[P:5447]:Rank[0/1] => init bias of Linear to zeros
2025-01-22 01:13:27,988:[P:5447]:Rank[0/1] => init weight of Linear from trunc norm
2025-01-22 01:13:27,989:[P:5447]:Rank[0/1] => init bias of Linear to zeros
2025-01-22 01:13:27,990:[P:5447]:Rank[0/1] => init weight of Linear from trunc norm
2025-01-22 01:13:27,993:[P:5447]:Rank[0/1] => init bias of Linear to zeros
2025-01-22 01:13:27,994:[P:5447]:Rank[0/1] => init weight of Linear from trunc norm
2025-01-22 01:13:27,997:[P:5447]:Rank[0/1] => init bias of Linear to zeros
2025-01-22 01:13:27,997:[P:5447]:Rank[0/1] => init weight of Linear from trunc norm
2025-01-22 01:13:27,998:[P:5447]:Rank[0/1] => init bias of Linear to zeros
2025-01-22 01:13:27,998:[P:5447]:Rank[0/1] => init weight of Linear from trunc norm
2025-01-22 01:13:27,999:[P:5447]:Rank[0/1] => init bias of Linear to zeros
2025-01-22 01:13:27,999:[P:5447]:Rank[0/1] => init weight of Linear from trunc norm
2025-01-22 01:13:28,000:[P:5447]:Rank[0/1] => init bias of Linear to zeros
2025-01-22 01:13:28,000:[P:5447]:Rank[0/1] => init weight of Linear from trunc norm
2025-01-22 01:13:28,001:[P:5447]:Rank[0/1] => init bias of Linear to zeros
2025-01-22 01:13:28,001:[P:5447]:Rank[0/1] => init weight of Linear from trunc norm
2025-01-22 01:13:28,006:[P:5447]:Rank[0/1] => init bias of Linear to zeros
2025-01-22 01:13:28,006:[P:5447]:Rank[0/1] => init weight of Linear from trunc norm
2025-01-22 01:13:28,010:[P:5447]:Rank[0/1] => init bias of Linear to zeros
2025-01-22 01:13:28,010:[P:5447]:Rank[0/1] => init weight of Linear from trunc norm
2025-01-22 01:13:28,011:[P:5447]:Rank[0/1] => init bias of Linear to zeros
2025-01-22 01:13:28,011:[P:5447]:Rank[0/1] => init weight of Linear from trunc norm
2025-01-22 01:13:28,012:[P:5447]:Rank[0/1] => init bias of Linear to zeros
2025-01-22 01:13:28,012:[P:5447]:Rank[0/1] => init weight of Linear from trunc norm
2025-01-22 01:13:28,014:[P:5447]:Rank[0/1] => init bias of Linear to zeros
2025-01-22 01:13:28,014:[P:5447]:Rank[0/1] => init weight of Linear from trunc norm
2025-01-22 01:13:28,015:[P:5447]:Rank[0/1] => init bias of Linear to zeros
2025-01-22 01:13:28,015:[P:5447]:Rank[0/1] => init weight of Linear from trunc norm
2025-01-22 01:13:28,019:[P:5447]:Rank[0/1] => init bias of Linear to zeros
2025-01-22 01:13:28,019:[P:5447]:Rank[0/1] => init weight of Linear from trunc norm
2025-01-22 01:13:28,023:[P:5447]:Rank[0/1] => init bias of Linear to zeros
2025-01-22 01:13:28,023:[P:5447]:Rank[0/1] => init weight of Linear from trunc norm
2025-01-22 01:13:28,024:[P:5447]:Rank[0/1] => init bias of Linear to zeros
2025-01-22 01:13:28,024:[P:5447]:Rank[0/1] => init weight of Linear from trunc norm
2025-01-22 01:13:28,025:[P:5447]:Rank[0/1] => init bias of Linear to zeros
2025-01-22 01:13:28,025:[P:5447]:Rank[0/1] => init weight of Linear from trunc norm
2025-01-22 01:13:28,026:[P:5447]:Rank[0/1] => init bias of Linear to zeros
2025-01-22 01:13:28,026:[P:5447]:Rank[0/1] => init weight of Linear from trunc norm
2025-01-22 01:13:28,027:[P:5447]:Rank[0/1] => init bias of Linear to zeros
2025-01-22 01:13:28,027:[P:5447]:Rank[0/1] => init weight of Linear from trunc norm
2025-01-22 01:13:28,030:[P:5447]:Rank[0/1] => init bias of Linear to zeros
2025-01-22 01:13:28,030:[P:5447]:Rank[0/1] => init weight of Linear from trunc norm
2025-01-22 01:13:28,034:[P:5447]:Rank[0/1] => init bias of Linear to zeros
2025-01-22 01:13:28,034:[P:5447]:Rank[0/1] => init weight of Linear from trunc norm
2025-01-22 01:13:28,036:[P:5447]:Rank[0/1] => init bias of Linear to zeros
2025-01-22 01:13:28,036:[P:5447]:Rank[0/1] => init weight of Linear from trunc norm
2025-01-22 01:13:28,037:[P:5447]:Rank[0/1] => init bias of Linear to zeros
2025-01-22 01:13:28,037:[P:5447]:Rank[0/1] => init weight of Linear from trunc norm
2025-01-22 01:13:28,038:[P:5447]:Rank[0/1] => init bias of Linear to zeros
2025-01-22 01:13:28,038:[P:5447]:Rank[0/1] => init weight of Linear from trunc norm
2025-01-22 01:13:28,039:[P:5447]:Rank[0/1] => init bias of Linear to zeros
2025-01-22 01:13:28,040:[P:5447]:Rank[0/1] => init weight of Linear from trunc norm
2025-01-22 01:13:28,043:[P:5447]:Rank[0/1] => init bias of Linear to zeros
2025-01-22 01:13:28,043:[P:5447]:Rank[0/1] => init weight of Linear from trunc norm
2025-01-22 01:13:28,047:[P:5447]:Rank[0/1] => init bias of Linear to zeros
2025-01-22 01:13:28,047:[P:5447]:Rank[0/1] => init weight of Linear from trunc norm
2025-01-22 01:13:28,049:[P:5447]:Rank[0/1] => init bias of Linear to zeros
2025-01-22 01:13:28,049:[P:5447]:Rank[0/1] => init weight of Linear from trunc norm
2025-01-22 01:13:28,050:[P:5447]:Rank[0/1] => init bias of Linear to zeros
2025-01-22 01:13:28,050:[P:5447]:Rank[0/1] => init weight of Linear from trunc norm
2025-01-22 01:13:28,051:[P:5447]:Rank[0/1] => init bias of Linear to zeros
2025-01-22 01:13:28,051:[P:5447]:Rank[0/1] => init weight of Linear from trunc norm
2025-01-22 01:13:28,052:[P:5447]:Rank[0/1] => init bias of Linear to zeros
2025-01-22 01:13:28,052:[P:5447]:Rank[0/1] => init weight of Linear from trunc norm
2025-01-22 01:13:28,055:[P:5447]:Rank[0/1] => init bias of Linear to zeros
2025-01-22 01:13:28,055:[P:5447]:Rank[0/1] => init weight of Linear from trunc norm
2025-01-22 01:13:28,060:[P:5447]:Rank[0/1] => init bias of Linear to zeros
2025-01-22 01:13:28,060:[P:5447]:Rank[0/1] => init weight of Linear from trunc norm
2025-01-22 01:13:28,061:[P:5447]:Rank[0/1] => init bias of Linear to zeros
2025-01-22 01:13:28,061:[P:5447]:Rank[0/1] => init weight of Linear from trunc norm
2025-01-22 01:13:28,063:[P:5447]:Rank[0/1] => init bias of Linear to zeros
2025-01-22 01:13:28,063:[P:5447]:Rank[0/1] => init weight of Linear from trunc norm
2025-01-22 01:13:28,064:[P:5447]:Rank[0/1] => init bias of Linear to zeros
2025-01-22 01:13:28,064:[P:5447]:Rank[0/1] => init weight of Linear from trunc norm
2025-01-22 01:13:28,065:[P:5447]:Rank[0/1] => init bias of Linear to zeros
2025-01-22 01:13:28,065:[P:5447]:Rank[0/1] => init weight of Linear from trunc norm
2025-01-22 01:13:28,069:[P:5447]:Rank[0/1] => init bias of Linear to zeros
2025-01-22 01:13:28,069:[P:5447]:Rank[0/1] => init weight of Linear from trunc norm
2025-01-22 01:13:28,073:[P:5447]:Rank[0/1] => init bias of Linear to zeros
2025-01-22 01:13:28,073:[P:5447]:Rank[0/1] => init weight of Linear from trunc norm
2025-01-22 01:13:28,074:[P:5447]:Rank[0/1] => init bias of Linear to zeros
2025-01-22 01:13:28,074:[P:5447]:Rank[0/1] => init weight of Linear from trunc norm
2025-01-22 01:13:28,075:[P:5447]:Rank[0/1] => init bias of Linear to zeros
2025-01-22 01:13:28,075:[P:5447]:Rank[0/1] => init weight of Linear from trunc norm
2025-01-22 01:13:28,076:[P:5447]:Rank[0/1] => init bias of Linear to zeros
2025-01-22 01:13:28,076:[P:5447]:Rank[0/1] => init weight of Linear from trunc norm
2025-01-22 01:13:28,077:[P:5447]:Rank[0/1] => init bias of Linear to zeros
2025-01-22 01:13:28,077:[P:5447]:Rank[0/1] => init weight of Linear from trunc norm
2025-01-22 01:13:28,080:[P:5447]:Rank[0/1] => init bias of Linear to zeros
2025-01-22 01:13:28,080:[P:5447]:Rank[0/1] => init weight of Linear from trunc norm
2025-01-22 01:13:28,083:[P:5447]:Rank[0/1] => init bias of Linear to zeros
2025-01-22 01:13:56,105:[P:5447]:Rank[0/1] => ConvolutionalVisionTransformer(
  (stage0): VisionTransformer(
    (patch_embed): ConvEmbed(
      (proj): Conv2d(3, 64, kernel_size=(7, 7), stride=(4, 4), padding=(2, 2))
      (norm): LayerNorm((64,), eps=1e-05, elementwise_affine=True)
    )
    (pos_drop): Dropout(p=0.0, inplace=False)
    (blocks): ModuleList(
      (0): Block(
        (norm1): LayerNorm((64,), eps=1e-05, elementwise_affine=True)
        (attn): Attention(
          (conv_proj_q): Sequential(
            (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64, bias=False)
            (bn): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (rearrage): Rearrange('b c h w -> b (h w) c')
          )
          (conv_proj_k): Sequential(
            (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=64, bias=False)
            (bn): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (rearrage): Rearrange('b c h w -> b (h w) c')
          )
          (conv_proj_v): Sequential(
            (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=64, bias=False)
            (bn): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (rearrage): Rearrange('b c h w -> b (h w) c')
          )
          (proj_q): Linear(in_features=64, out_features=64, bias=True)
          (proj_k): Linear(in_features=64, out_features=64, bias=True)
          (proj_v): Linear(in_features=64, out_features=64, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=64, out_features=64, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
        )
        (drop_path): Identity()
        (norm2): LayerNorm((64,), eps=1e-05, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=64, out_features=256, bias=True)
          (act): QuickGELU()
          (fc2): Linear(in_features=256, out_features=64, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
        )
      )
    )
  )
  (stage1): VisionTransformer(
    (patch_embed): ConvEmbed(
      (proj): Conv2d(64, 192, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
      (norm): LayerNorm((192,), eps=1e-05, elementwise_affine=True)
    )
    (pos_drop): Dropout(p=0.0, inplace=False)
    (blocks): ModuleList(
      (0): Block(
        (norm1): LayerNorm((192,), eps=1e-05, elementwise_affine=True)
        (attn): Attention(
          (conv_proj_q): Sequential(
            (conv): Conv2d(192, 192, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=192, bias=False)
            (bn): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (rearrage): Rearrange('b c h w -> b (h w) c')
          )
          (conv_proj_k): Sequential(
            (conv): Conv2d(192, 192, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=192, bias=False)
            (bn): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (rearrage): Rearrange('b c h w -> b (h w) c')
          )
          (conv_proj_v): Sequential(
            (conv): Conv2d(192, 192, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=192, bias=False)
            (bn): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (rearrage): Rearrange('b c h w -> b (h w) c')
          )
          (proj_q): Linear(in_features=192, out_features=192, bias=True)
          (proj_k): Linear(in_features=192, out_features=192, bias=True)
          (proj_v): Linear(in_features=192, out_features=192, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=192, out_features=192, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
        )
        (drop_path): Identity()
        (norm2): LayerNorm((192,), eps=1e-05, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=192, out_features=768, bias=True)
          (act): QuickGELU()
          (fc2): Linear(in_features=768, out_features=192, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
        )
      )
      (1): Block(
        (norm1): LayerNorm((192,), eps=1e-05, elementwise_affine=True)
        (attn): Attention(
          (conv_proj_q): Sequential(
            (conv): Conv2d(192, 192, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=192, bias=False)
            (bn): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (rearrage): Rearrange('b c h w -> b (h w) c')
          )
          (conv_proj_k): Sequential(
            (conv): Conv2d(192, 192, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=192, bias=False)
            (bn): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (rearrage): Rearrange('b c h w -> b (h w) c')
          )
          (conv_proj_v): Sequential(
            (conv): Conv2d(192, 192, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=192, bias=False)
            (bn): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (rearrage): Rearrange('b c h w -> b (h w) c')
          )
          (proj_q): Linear(in_features=192, out_features=192, bias=True)
          (proj_k): Linear(in_features=192, out_features=192, bias=True)
          (proj_v): Linear(in_features=192, out_features=192, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=192, out_features=192, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
        )
        (drop_path): Identity()
        (norm2): LayerNorm((192,), eps=1e-05, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=192, out_features=768, bias=True)
          (act): QuickGELU()
          (fc2): Linear(in_features=768, out_features=192, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
        )
      )
    )
  )
  (stage2): VisionTransformer(
    (patch_embed): ConvEmbed(
      (proj): Conv2d(192, 384, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
      (norm): LayerNorm((384,), eps=1e-05, elementwise_affine=True)
    )
    (pos_drop): Dropout(p=0.0, inplace=False)
    (blocks): ModuleList(
      (0): Block(
        (norm1): LayerNorm((384,), eps=1e-05, elementwise_affine=True)
        (attn): Attention(
          (conv_proj_q): Sequential(
            (conv): Conv2d(384, 384, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=384, bias=False)
            (bn): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (rearrage): Rearrange('b c h w -> b (h w) c')
          )
          (conv_proj_k): Sequential(
            (conv): Conv2d(384, 384, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=384, bias=False)
            (bn): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (rearrage): Rearrange('b c h w -> b (h w) c')
          )
          (conv_proj_v): Sequential(
            (conv): Conv2d(384, 384, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=384, bias=False)
            (bn): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (rearrage): Rearrange('b c h w -> b (h w) c')
          )
          (proj_q): Linear(in_features=384, out_features=384, bias=True)
          (proj_k): Linear(in_features=384, out_features=384, bias=True)
          (proj_v): Linear(in_features=384, out_features=384, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=384, out_features=384, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
        )
        (drop_path): Identity()
        (norm2): LayerNorm((384,), eps=1e-05, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=384, out_features=1536, bias=True)
          (act): QuickGELU()
          (fc2): Linear(in_features=1536, out_features=384, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
        )
      )
      (1): Block(
        (norm1): LayerNorm((384,), eps=1e-05, elementwise_affine=True)
        (attn): Attention(
          (conv_proj_q): Sequential(
            (conv): Conv2d(384, 384, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=384, bias=False)
            (bn): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (rearrage): Rearrange('b c h w -> b (h w) c')
          )
          (conv_proj_k): Sequential(
            (conv): Conv2d(384, 384, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=384, bias=False)
            (bn): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (rearrage): Rearrange('b c h w -> b (h w) c')
          )
          (conv_proj_v): Sequential(
            (conv): Conv2d(384, 384, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=384, bias=False)
            (bn): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (rearrage): Rearrange('b c h w -> b (h w) c')
          )
          (proj_q): Linear(in_features=384, out_features=384, bias=True)
          (proj_k): Linear(in_features=384, out_features=384, bias=True)
          (proj_v): Linear(in_features=384, out_features=384, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=384, out_features=384, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
        )
        (drop_path): DropPath()
        (norm2): LayerNorm((384,), eps=1e-05, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=384, out_features=1536, bias=True)
          (act): QuickGELU()
          (fc2): Linear(in_features=1536, out_features=384, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
        )
      )
      (2): Block(
        (norm1): LayerNorm((384,), eps=1e-05, elementwise_affine=True)
        (attn): Attention(
          (conv_proj_q): Sequential(
            (conv): Conv2d(384, 384, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=384, bias=False)
            (bn): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (rearrage): Rearrange('b c h w -> b (h w) c')
          )
          (conv_proj_k): Sequential(
            (conv): Conv2d(384, 384, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=384, bias=False)
            (bn): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (rearrage): Rearrange('b c h w -> b (h w) c')
          )
          (conv_proj_v): Sequential(
            (conv): Conv2d(384, 384, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=384, bias=False)
            (bn): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (rearrage): Rearrange('b c h w -> b (h w) c')
          )
          (proj_q): Linear(in_features=384, out_features=384, bias=True)
          (proj_k): Linear(in_features=384, out_features=384, bias=True)
          (proj_v): Linear(in_features=384, out_features=384, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=384, out_features=384, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
        )
        (drop_path): DropPath()
        (norm2): LayerNorm((384,), eps=1e-05, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=384, out_features=1536, bias=True)
          (act): QuickGELU()
          (fc2): Linear(in_features=1536, out_features=384, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
        )
      )
      (3): Block(
        (norm1): LayerNorm((384,), eps=1e-05, elementwise_affine=True)
        (attn): Attention(
          (conv_proj_q): Sequential(
            (conv): Conv2d(384, 384, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=384, bias=False)
            (bn): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (rearrage): Rearrange('b c h w -> b (h w) c')
          )
          (conv_proj_k): Sequential(
            (conv): Conv2d(384, 384, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=384, bias=False)
            (bn): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (rearrage): Rearrange('b c h w -> b (h w) c')
          )
          (conv_proj_v): Sequential(
            (conv): Conv2d(384, 384, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=384, bias=False)
            (bn): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (rearrage): Rearrange('b c h w -> b (h w) c')
          )
          (proj_q): Linear(in_features=384, out_features=384, bias=True)
          (proj_k): Linear(in_features=384, out_features=384, bias=True)
          (proj_v): Linear(in_features=384, out_features=384, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=384, out_features=384, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
        )
        (drop_path): DropPath()
        (norm2): LayerNorm((384,), eps=1e-05, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=384, out_features=1536, bias=True)
          (act): QuickGELU()
          (fc2): Linear(in_features=1536, out_features=384, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
        )
      )
      (4): Block(
        (norm1): LayerNorm((384,), eps=1e-05, elementwise_affine=True)
        (attn): Attention(
          (conv_proj_q): Sequential(
            (conv): Conv2d(384, 384, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=384, bias=False)
            (bn): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (rearrage): Rearrange('b c h w -> b (h w) c')
          )
          (conv_proj_k): Sequential(
            (conv): Conv2d(384, 384, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=384, bias=False)
            (bn): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (rearrage): Rearrange('b c h w -> b (h w) c')
          )
          (conv_proj_v): Sequential(
            (conv): Conv2d(384, 384, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=384, bias=False)
            (bn): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (rearrage): Rearrange('b c h w -> b (h w) c')
          )
          (proj_q): Linear(in_features=384, out_features=384, bias=True)
          (proj_k): Linear(in_features=384, out_features=384, bias=True)
          (proj_v): Linear(in_features=384, out_features=384, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=384, out_features=384, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
        )
        (drop_path): DropPath()
        (norm2): LayerNorm((384,), eps=1e-05, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=384, out_features=1536, bias=True)
          (act): QuickGELU()
          (fc2): Linear(in_features=1536, out_features=384, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
        )
      )
      (5): Block(
        (norm1): LayerNorm((384,), eps=1e-05, elementwise_affine=True)
        (attn): Attention(
          (conv_proj_q): Sequential(
            (conv): Conv2d(384, 384, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=384, bias=False)
            (bn): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (rearrage): Rearrange('b c h w -> b (h w) c')
          )
          (conv_proj_k): Sequential(
            (conv): Conv2d(384, 384, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=384, bias=False)
            (bn): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (rearrage): Rearrange('b c h w -> b (h w) c')
          )
          (conv_proj_v): Sequential(
            (conv): Conv2d(384, 384, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=384, bias=False)
            (bn): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (rearrage): Rearrange('b c h w -> b (h w) c')
          )
          (proj_q): Linear(in_features=384, out_features=384, bias=True)
          (proj_k): Linear(in_features=384, out_features=384, bias=True)
          (proj_v): Linear(in_features=384, out_features=384, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=384, out_features=384, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
        )
        (drop_path): DropPath()
        (norm2): LayerNorm((384,), eps=1e-05, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=384, out_features=1536, bias=True)
          (act): QuickGELU()
          (fc2): Linear(in_features=1536, out_features=384, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
        )
      )
      (6): Block(
        (norm1): LayerNorm((384,), eps=1e-05, elementwise_affine=True)
        (attn): Attention(
          (conv_proj_q): Sequential(
            (conv): Conv2d(384, 384, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=384, bias=False)
            (bn): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (rearrage): Rearrange('b c h w -> b (h w) c')
          )
          (conv_proj_k): Sequential(
            (conv): Conv2d(384, 384, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=384, bias=False)
            (bn): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (rearrage): Rearrange('b c h w -> b (h w) c')
          )
          (conv_proj_v): Sequential(
            (conv): Conv2d(384, 384, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=384, bias=False)
            (bn): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (rearrage): Rearrange('b c h w -> b (h w) c')
          )
          (proj_q): Linear(in_features=384, out_features=384, bias=True)
          (proj_k): Linear(in_features=384, out_features=384, bias=True)
          (proj_v): Linear(in_features=384, out_features=384, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=384, out_features=384, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
        )
        (drop_path): DropPath()
        (norm2): LayerNorm((384,), eps=1e-05, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=384, out_features=1536, bias=True)
          (act): QuickGELU()
          (fc2): Linear(in_features=1536, out_features=384, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
        )
      )
      (7): Block(
        (norm1): LayerNorm((384,), eps=1e-05, elementwise_affine=True)
        (attn): Attention(
          (conv_proj_q): Sequential(
            (conv): Conv2d(384, 384, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=384, bias=False)
            (bn): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (rearrage): Rearrange('b c h w -> b (h w) c')
          )
          (conv_proj_k): Sequential(
            (conv): Conv2d(384, 384, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=384, bias=False)
            (bn): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (rearrage): Rearrange('b c h w -> b (h w) c')
          )
          (conv_proj_v): Sequential(
            (conv): Conv2d(384, 384, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=384, bias=False)
            (bn): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (rearrage): Rearrange('b c h w -> b (h w) c')
          )
          (proj_q): Linear(in_features=384, out_features=384, bias=True)
          (proj_k): Linear(in_features=384, out_features=384, bias=True)
          (proj_v): Linear(in_features=384, out_features=384, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=384, out_features=384, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
        )
        (drop_path): DropPath()
        (norm2): LayerNorm((384,), eps=1e-05, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=384, out_features=1536, bias=True)
          (act): QuickGELU()
          (fc2): Linear(in_features=1536, out_features=384, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
        )
      )
      (8): Block(
        (norm1): LayerNorm((384,), eps=1e-05, elementwise_affine=True)
        (attn): Attention(
          (conv_proj_q): Sequential(
            (conv): Conv2d(384, 384, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=384, bias=False)
            (bn): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (rearrage): Rearrange('b c h w -> b (h w) c')
          )
          (conv_proj_k): Sequential(
            (conv): Conv2d(384, 384, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=384, bias=False)
            (bn): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (rearrage): Rearrange('b c h w -> b (h w) c')
          )
          (conv_proj_v): Sequential(
            (conv): Conv2d(384, 384, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=384, bias=False)
            (bn): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (rearrage): Rearrange('b c h w -> b (h w) c')
          )
          (proj_q): Linear(in_features=384, out_features=384, bias=True)
          (proj_k): Linear(in_features=384, out_features=384, bias=True)
          (proj_v): Linear(in_features=384, out_features=384, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=384, out_features=384, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
        )
        (drop_path): DropPath()
        (norm2): LayerNorm((384,), eps=1e-05, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=384, out_features=1536, bias=True)
          (act): QuickGELU()
          (fc2): Linear(in_features=1536, out_features=384, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
        )
      )
      (9): Block(
        (norm1): LayerNorm((384,), eps=1e-05, elementwise_affine=True)
        (attn): Attention(
          (conv_proj_q): Sequential(
            (conv): Conv2d(384, 384, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=384, bias=False)
            (bn): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (rearrage): Rearrange('b c h w -> b (h w) c')
          )
          (conv_proj_k): Sequential(
            (conv): Conv2d(384, 384, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=384, bias=False)
            (bn): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (rearrage): Rearrange('b c h w -> b (h w) c')
          )
          (conv_proj_v): Sequential(
            (conv): Conv2d(384, 384, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=384, bias=False)
            (bn): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (rearrage): Rearrange('b c h w -> b (h w) c')
          )
          (proj_q): Linear(in_features=384, out_features=384, bias=True)
          (proj_k): Linear(in_features=384, out_features=384, bias=True)
          (proj_v): Linear(in_features=384, out_features=384, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=384, out_features=384, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
        )
        (drop_path): DropPath()
        (norm2): LayerNorm((384,), eps=1e-05, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=384, out_features=1536, bias=True)
          (act): QuickGELU()
          (fc2): Linear(in_features=1536, out_features=384, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
        )
      )
    )
  )
  (norm): LayerNorm((384,), eps=1e-05, elementwise_affine=True)
  (head): Linear(in_features=384, out_features=1000, bias=True)
)
2025-01-22 01:13:56,107:[P:5447]:Rank[0/1] Trainable Model Total Parameter: 	20.0M
2025-01-22 01:13:56,123:[P:5447]:Rank[0/1] => use timm loader for training
2025-01-22 01:13:56,230:[P:5447]:Rank[0/1] => start training
2025-01-22 01:13:56,231:[P:5447]:Rank[0/1] => Epoch[0]: epoch start
2025-01-22 01:13:56,231:[P:5447]:Rank[0/1] => Epoch[0]: train start
2025-01-22 01:13:56,231:[P:5447]:Rank[0/1] => switch to train mode
2025-01-22 01:13:56,862:[P:5447]:Rank[0/1] Module: ConvEmbed, Input[0] Shape: torch.Size([64, 3, 224, 224])
2025-01-22 01:13:56,862:[P:5447]:Rank[0/1] Module: ConvEmbed, Output Shape: torch.Size([64, 64, 56, 56])
2025-01-22 01:13:57,057:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 3136, 64])
2025-01-22 01:13:57,057:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:13:57,057:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:13:57,057:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 3136, 64])
2025-01-22 01:13:57,143:[P:5447]:Rank[0/1] Module: ConvEmbed, Input[0] Shape: torch.Size([64, 64, 56, 56])
2025-01-22 01:13:57,143:[P:5447]:Rank[0/1] Module: ConvEmbed, Output Shape: torch.Size([64, 192, 28, 28])
2025-01-22 01:13:57,280:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 784, 192])
2025-01-22 01:13:57,280:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:13:57,280:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:13:57,280:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 784, 192])
2025-01-22 01:13:57,308:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 784, 192])
2025-01-22 01:13:57,308:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:13:57,308:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:13:57,308:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 784, 192])
2025-01-22 01:13:57,794:[P:5447]:Rank[0/1] Module: ConvEmbed, Input[0] Shape: torch.Size([64, 192, 28, 28])
2025-01-22 01:13:57,794:[P:5447]:Rank[0/1] Module: ConvEmbed, Output Shape: torch.Size([64, 384, 14, 14])
2025-01-22 01:13:57,975:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 01:13:57,975:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:13:57,975:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:13:57,975:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 01:13:57,996:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 01:13:57,996:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:13:57,996:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:13:57,996:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 01:13:58,017:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 01:13:58,017:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:13:58,017:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:13:58,017:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 01:13:58,039:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 01:13:58,040:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:13:58,040:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:13:58,040:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 01:13:58,063:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 01:13:58,063:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:13:58,063:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:13:58,063:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 01:13:58,082:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 01:13:58,082:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:13:58,082:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:13:58,083:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 01:13:58,100:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 01:13:58,100:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:13:58,100:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:13:58,100:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 01:13:58,121:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 01:13:58,122:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:13:58,122:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:13:58,122:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 01:13:58,144:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 01:13:58,144:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:13:58,144:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:13:58,144:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 01:13:58,164:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 01:13:58,164:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:13:58,164:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:13:58,164:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 01:14:19,771:[P:5447]:Rank[0/1] => Epoch[0][0/13]: Time 23.539s (23.539s)	Speed 2.7 samples/s	Data 0.505s (0.505s)	Loss 7.10528 (7.10528)	Accuracy@1 0.000 (0.000)	Accuracy@5 0.000 (0.000)	
2025-01-22 01:14:19,775:[P:5447]:Rank[0/1] Module: ConvEmbed, Input[0] Shape: torch.Size([64, 3, 224, 224])
2025-01-22 01:14:19,775:[P:5447]:Rank[0/1] Module: ConvEmbed, Output Shape: torch.Size([64, 64, 56, 56])
2025-01-22 01:14:19,796:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 3136, 64])
2025-01-22 01:14:19,796:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:14:19,796:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:14:19,796:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 3136, 64])
2025-01-22 01:14:19,797:[P:5447]:Rank[0/1] Module: ConvEmbed, Input[0] Shape: torch.Size([64, 64, 56, 56])
2025-01-22 01:14:19,797:[P:5447]:Rank[0/1] Module: ConvEmbed, Output Shape: torch.Size([64, 192, 28, 28])
2025-01-22 01:14:19,808:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 784, 192])
2025-01-22 01:14:19,808:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:14:19,808:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:14:19,808:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 784, 192])
2025-01-22 01:14:19,818:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 784, 192])
2025-01-22 01:14:19,819:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:14:19,819:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:14:19,819:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 784, 192])
2025-01-22 01:14:19,819:[P:5447]:Rank[0/1] Module: ConvEmbed, Input[0] Shape: torch.Size([64, 192, 28, 28])
2025-01-22 01:14:19,820:[P:5447]:Rank[0/1] Module: ConvEmbed, Output Shape: torch.Size([64, 384, 14, 14])
2025-01-22 01:14:19,835:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 01:14:19,835:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:14:19,836:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:14:19,836:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 01:14:19,868:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 01:14:19,868:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:14:19,868:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:14:19,869:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 01:14:19,890:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 01:14:19,890:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:14:19,890:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:14:19,890:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 01:14:19,907:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 01:14:19,907:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:14:19,907:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:14:19,907:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 01:14:19,926:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 01:14:19,926:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:14:19,926:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:14:19,926:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 01:14:19,945:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 01:14:19,945:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:14:19,945:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:14:19,945:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 01:14:19,969:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 01:14:19,969:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:14:19,969:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:14:19,969:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 01:14:19,987:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 01:14:19,987:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:14:19,988:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:14:19,988:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 01:14:20,008:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 01:14:20,008:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:14:20,008:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:14:20,009:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 01:14:20,032:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 01:14:20,032:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:14:20,032:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:14:20,032:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 01:14:26,762:[P:5447]:Rank[0/1] Module: ConvEmbed, Input[0] Shape: torch.Size([64, 3, 224, 224])
2025-01-22 01:14:26,763:[P:5447]:Rank[0/1] Module: ConvEmbed, Output Shape: torch.Size([64, 64, 56, 56])
2025-01-22 01:14:26,765:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 3136, 64])
2025-01-22 01:14:26,765:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:14:26,765:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:14:26,765:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 3136, 64])
2025-01-22 01:14:26,765:[P:5447]:Rank[0/1] Module: ConvEmbed, Input[0] Shape: torch.Size([64, 64, 56, 56])
2025-01-22 01:14:26,766:[P:5447]:Rank[0/1] Module: ConvEmbed, Output Shape: torch.Size([64, 192, 28, 28])
2025-01-22 01:14:26,768:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 784, 192])
2025-01-22 01:14:26,768:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:14:26,768:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:14:26,768:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 784, 192])
2025-01-22 01:14:26,770:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 784, 192])
2025-01-22 01:14:26,770:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:14:26,770:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:14:26,770:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 784, 192])
2025-01-22 01:14:26,771:[P:5447]:Rank[0/1] Module: ConvEmbed, Input[0] Shape: torch.Size([64, 192, 28, 28])
2025-01-22 01:14:26,771:[P:5447]:Rank[0/1] Module: ConvEmbed, Output Shape: torch.Size([64, 384, 14, 14])
2025-01-22 01:14:26,774:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 01:14:26,774:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:14:26,774:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:14:26,774:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 01:14:26,777:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 01:14:26,777:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:14:26,777:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:14:26,777:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 01:14:26,780:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 01:14:26,781:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:14:26,781:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:14:26,781:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 01:14:26,783:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 01:14:26,784:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:14:26,784:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:14:26,784:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 01:14:26,786:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 01:14:26,787:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:14:26,787:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:14:26,787:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 01:14:26,790:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 01:14:26,790:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:14:26,790:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:14:26,790:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 01:14:26,794:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 01:14:26,794:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:14:26,794:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:14:26,794:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 01:14:26,798:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 01:14:26,798:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:14:26,798:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:14:26,798:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 01:14:26,802:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 01:14:26,802:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:14:26,802:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:14:26,802:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 01:14:26,805:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 01:14:26,806:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:14:26,806:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:14:26,806:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 01:14:33,219:[P:5447]:Rank[0/1] Module: ConvEmbed, Input[0] Shape: torch.Size([64, 3, 224, 224])
2025-01-22 01:14:33,219:[P:5447]:Rank[0/1] Module: ConvEmbed, Output Shape: torch.Size([64, 64, 56, 56])
2025-01-22 01:14:33,221:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 3136, 64])
2025-01-22 01:14:33,221:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:14:33,221:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:14:33,221:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 3136, 64])
2025-01-22 01:14:33,222:[P:5447]:Rank[0/1] Module: ConvEmbed, Input[0] Shape: torch.Size([64, 64, 56, 56])
2025-01-22 01:14:33,222:[P:5447]:Rank[0/1] Module: ConvEmbed, Output Shape: torch.Size([64, 192, 28, 28])
2025-01-22 01:14:33,224:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 784, 192])
2025-01-22 01:14:33,224:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:14:33,224:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:14:33,224:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 784, 192])
2025-01-22 01:14:33,226:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 784, 192])
2025-01-22 01:14:33,227:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:14:33,227:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:14:33,227:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 784, 192])
2025-01-22 01:14:33,227:[P:5447]:Rank[0/1] Module: ConvEmbed, Input[0] Shape: torch.Size([64, 192, 28, 28])
2025-01-22 01:14:33,227:[P:5447]:Rank[0/1] Module: ConvEmbed, Output Shape: torch.Size([64, 384, 14, 14])
2025-01-22 01:14:33,230:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 01:14:33,230:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:14:33,230:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:14:33,230:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 01:14:33,233:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 01:14:33,233:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:14:33,233:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:14:33,233:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 01:14:33,236:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 01:14:33,236:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:14:33,236:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:14:33,236:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 01:14:33,239:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 01:14:33,239:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:14:33,240:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:14:33,240:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 01:14:33,243:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 01:14:33,243:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:14:33,243:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:14:33,243:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 01:14:33,246:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 01:14:33,246:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:14:33,246:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:14:33,246:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 01:14:33,249:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 01:14:33,249:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:14:33,249:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:14:33,249:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 01:14:33,253:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 01:14:33,253:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:14:33,253:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:14:33,253:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 01:14:33,258:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 01:14:33,258:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:14:33,258:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:14:33,258:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 01:14:33,261:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 01:14:33,262:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:14:33,262:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:14:33,262:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 01:14:39,629:[P:5447]:Rank[0/1] Module: ConvEmbed, Input[0] Shape: torch.Size([64, 3, 224, 224])
2025-01-22 01:14:39,630:[P:5447]:Rank[0/1] Module: ConvEmbed, Output Shape: torch.Size([64, 64, 56, 56])
2025-01-22 01:14:39,632:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 3136, 64])
2025-01-22 01:14:39,632:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:14:39,632:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:14:39,632:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 3136, 64])
2025-01-22 01:14:39,633:[P:5447]:Rank[0/1] Module: ConvEmbed, Input[0] Shape: torch.Size([64, 64, 56, 56])
2025-01-22 01:14:39,633:[P:5447]:Rank[0/1] Module: ConvEmbed, Output Shape: torch.Size([64, 192, 28, 28])
2025-01-22 01:14:39,635:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 784, 192])
2025-01-22 01:14:39,635:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:14:39,635:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:14:39,636:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 784, 192])
2025-01-22 01:14:39,640:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 784, 192])
2025-01-22 01:14:39,640:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:14:39,640:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:14:39,640:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 784, 192])
2025-01-22 01:14:39,641:[P:5447]:Rank[0/1] Module: ConvEmbed, Input[0] Shape: torch.Size([64, 192, 28, 28])
2025-01-22 01:14:39,641:[P:5447]:Rank[0/1] Module: ConvEmbed, Output Shape: torch.Size([64, 384, 14, 14])
2025-01-22 01:14:39,645:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 01:14:39,646:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:14:39,646:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:14:39,646:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 01:14:39,649:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 01:14:39,649:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:14:39,649:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:14:39,650:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 01:14:39,653:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 01:14:39,653:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:14:39,653:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:14:39,653:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 01:14:39,657:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 01:14:39,657:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:14:39,657:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:14:39,657:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 01:14:39,660:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 01:14:39,660:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:14:39,660:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:14:39,660:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 01:14:39,664:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 01:14:39,664:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:14:39,664:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:14:39,664:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 01:14:39,668:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 01:14:39,669:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:14:39,669:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:14:39,669:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 01:14:39,672:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 01:14:39,672:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:14:39,672:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:14:39,672:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 01:14:39,675:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 01:14:39,675:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:14:39,675:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:14:39,675:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 01:14:39,679:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 01:14:39,680:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:14:39,680:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:14:39,680:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 01:14:46,171:[P:5447]:Rank[0/1] Module: ConvEmbed, Input[0] Shape: torch.Size([64, 3, 224, 224])
2025-01-22 01:14:46,171:[P:5447]:Rank[0/1] Module: ConvEmbed, Output Shape: torch.Size([64, 64, 56, 56])
2025-01-22 01:14:46,174:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 3136, 64])
2025-01-22 01:14:46,174:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:14:46,174:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:14:46,174:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 3136, 64])
2025-01-22 01:14:46,175:[P:5447]:Rank[0/1] Module: ConvEmbed, Input[0] Shape: torch.Size([64, 64, 56, 56])
2025-01-22 01:14:46,175:[P:5447]:Rank[0/1] Module: ConvEmbed, Output Shape: torch.Size([64, 192, 28, 28])
2025-01-22 01:14:46,178:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 784, 192])
2025-01-22 01:14:46,178:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:14:46,178:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:14:46,178:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 784, 192])
2025-01-22 01:14:46,181:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 784, 192])
2025-01-22 01:14:46,181:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:14:46,181:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:14:46,181:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 784, 192])
2025-01-22 01:14:46,182:[P:5447]:Rank[0/1] Module: ConvEmbed, Input[0] Shape: torch.Size([64, 192, 28, 28])
2025-01-22 01:14:46,182:[P:5447]:Rank[0/1] Module: ConvEmbed, Output Shape: torch.Size([64, 384, 14, 14])
2025-01-22 01:14:46,186:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 01:14:46,186:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:14:46,187:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:14:46,187:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 01:14:46,191:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 01:14:46,191:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:14:46,191:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:14:46,191:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 01:14:46,195:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 01:14:46,195:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:14:46,195:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:14:46,195:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 01:14:46,199:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 01:14:46,199:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:14:46,199:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:14:46,199:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 01:14:46,203:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 01:14:46,203:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:14:46,203:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:14:46,203:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 01:14:46,206:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 01:14:46,206:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:14:46,206:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:14:46,206:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 01:14:46,210:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 01:14:46,210:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:14:46,210:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:14:46,210:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 01:14:46,213:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 01:14:46,213:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:14:46,214:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:14:46,214:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 01:14:46,217:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 01:14:46,217:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:14:46,217:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:14:46,217:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 01:14:46,220:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 01:14:46,220:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:14:46,220:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:14:46,220:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 01:14:53,295:[P:5447]:Rank[0/1] Module: ConvEmbed, Input[0] Shape: torch.Size([64, 3, 224, 224])
2025-01-22 01:14:53,295:[P:5447]:Rank[0/1] Module: ConvEmbed, Output Shape: torch.Size([64, 64, 56, 56])
2025-01-22 01:14:53,298:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 3136, 64])
2025-01-22 01:14:53,298:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:14:53,298:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:14:53,298:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 3136, 64])
2025-01-22 01:14:53,298:[P:5447]:Rank[0/1] Module: ConvEmbed, Input[0] Shape: torch.Size([64, 64, 56, 56])
2025-01-22 01:14:53,298:[P:5447]:Rank[0/1] Module: ConvEmbed, Output Shape: torch.Size([64, 192, 28, 28])
2025-01-22 01:14:53,300:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 784, 192])
2025-01-22 01:14:53,301:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:14:53,301:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:14:53,301:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 784, 192])
2025-01-22 01:14:53,303:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 784, 192])
2025-01-22 01:14:53,303:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:14:53,303:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:14:53,303:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 784, 192])
2025-01-22 01:14:53,304:[P:5447]:Rank[0/1] Module: ConvEmbed, Input[0] Shape: torch.Size([64, 192, 28, 28])
2025-01-22 01:14:53,304:[P:5447]:Rank[0/1] Module: ConvEmbed, Output Shape: torch.Size([64, 384, 14, 14])
2025-01-22 01:14:53,306:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 01:14:53,307:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:14:53,307:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:14:53,307:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 01:14:53,310:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 01:14:53,310:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:14:53,310:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:14:53,310:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 01:14:53,313:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 01:14:53,313:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:14:53,313:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:14:53,313:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 01:14:53,316:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 01:14:53,316:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:14:53,316:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:14:53,316:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 01:14:53,319:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 01:14:53,319:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:14:53,319:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:14:53,319:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 01:14:53,322:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 01:14:53,322:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:14:53,322:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:14:53,322:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 01:14:53,325:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 01:14:53,325:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:14:53,325:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:14:53,325:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 01:14:53,329:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 01:14:53,329:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:14:53,329:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:14:53,329:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 01:14:53,334:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 01:14:53,334:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:14:53,334:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:14:53,334:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 01:14:53,339:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 01:14:53,340:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:14:53,340:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:14:53,340:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 01:15:00,010:[P:5447]:Rank[0/1] Module: ConvEmbed, Input[0] Shape: torch.Size([64, 3, 224, 224])
2025-01-22 01:15:00,011:[P:5447]:Rank[0/1] Module: ConvEmbed, Output Shape: torch.Size([64, 64, 56, 56])
2025-01-22 01:15:00,013:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 3136, 64])
2025-01-22 01:15:00,013:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:15:00,013:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:15:00,013:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 3136, 64])
2025-01-22 01:15:00,014:[P:5447]:Rank[0/1] Module: ConvEmbed, Input[0] Shape: torch.Size([64, 64, 56, 56])
2025-01-22 01:15:00,014:[P:5447]:Rank[0/1] Module: ConvEmbed, Output Shape: torch.Size([64, 192, 28, 28])
2025-01-22 01:15:00,016:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 784, 192])
2025-01-22 01:15:00,016:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:15:00,016:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:15:00,016:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 784, 192])
2025-01-22 01:15:00,019:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 784, 192])
2025-01-22 01:15:00,019:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:15:00,019:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:15:00,019:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 784, 192])
2025-01-22 01:15:00,020:[P:5447]:Rank[0/1] Module: ConvEmbed, Input[0] Shape: torch.Size([64, 192, 28, 28])
2025-01-22 01:15:00,020:[P:5447]:Rank[0/1] Module: ConvEmbed, Output Shape: torch.Size([64, 384, 14, 14])
2025-01-22 01:15:00,023:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 01:15:00,023:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:15:00,023:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:15:00,023:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 01:15:00,026:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 01:15:00,026:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:15:00,026:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:15:00,026:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 01:15:00,029:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 01:15:00,029:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:15:00,029:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:15:00,029:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 01:15:00,032:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 01:15:00,032:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:15:00,032:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:15:00,032:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 01:15:00,035:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 01:15:00,035:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:15:00,035:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:15:00,035:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 01:15:00,039:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 01:15:00,039:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:15:00,039:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:15:00,039:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 01:15:00,043:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 01:15:00,043:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:15:00,043:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:15:00,043:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 01:15:00,047:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 01:15:00,047:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:15:00,047:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:15:00,047:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 01:15:00,050:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 01:15:00,050:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:15:00,050:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:15:00,051:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 01:15:00,053:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 01:15:00,053:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:15:00,053:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:15:00,054:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 01:15:06,751:[P:5447]:Rank[0/1] Module: ConvEmbed, Input[0] Shape: torch.Size([64, 3, 224, 224])
2025-01-22 01:15:06,751:[P:5447]:Rank[0/1] Module: ConvEmbed, Output Shape: torch.Size([64, 64, 56, 56])
2025-01-22 01:15:06,753:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 3136, 64])
2025-01-22 01:15:06,754:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:15:06,754:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:15:06,754:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 3136, 64])
2025-01-22 01:15:06,754:[P:5447]:Rank[0/1] Module: ConvEmbed, Input[0] Shape: torch.Size([64, 64, 56, 56])
2025-01-22 01:15:06,754:[P:5447]:Rank[0/1] Module: ConvEmbed, Output Shape: torch.Size([64, 192, 28, 28])
2025-01-22 01:15:06,757:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 784, 192])
2025-01-22 01:15:06,757:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:15:06,757:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:15:06,757:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 784, 192])
2025-01-22 01:15:06,759:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 784, 192])
2025-01-22 01:15:06,759:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:15:06,759:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:15:06,759:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 784, 192])
2025-01-22 01:15:06,760:[P:5447]:Rank[0/1] Module: ConvEmbed, Input[0] Shape: torch.Size([64, 192, 28, 28])
2025-01-22 01:15:06,760:[P:5447]:Rank[0/1] Module: ConvEmbed, Output Shape: torch.Size([64, 384, 14, 14])
2025-01-22 01:15:06,763:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 01:15:06,763:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:15:06,763:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:15:06,763:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 01:15:06,766:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 01:15:06,767:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:15:06,767:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:15:06,767:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 01:15:06,770:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 01:15:06,770:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:15:06,770:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:15:06,770:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 01:15:06,774:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 01:15:06,774:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:15:06,774:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:15:06,774:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 01:15:06,777:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 01:15:06,778:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:15:06,778:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:15:06,778:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 01:15:06,781:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 01:15:06,781:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:15:06,782:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:15:06,782:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 01:15:06,785:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 01:15:06,785:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:15:06,785:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:15:06,785:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 01:15:06,789:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 01:15:06,789:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:15:06,789:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:15:06,789:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 01:15:06,793:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 01:15:06,793:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:15:06,793:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:15:06,793:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 01:15:06,796:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 01:15:06,796:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:15:06,796:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:15:06,796:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 01:15:13,343:[P:5447]:Rank[0/1] Module: ConvEmbed, Input[0] Shape: torch.Size([64, 3, 224, 224])
2025-01-22 01:15:13,343:[P:5447]:Rank[0/1] Module: ConvEmbed, Output Shape: torch.Size([64, 64, 56, 56])
2025-01-22 01:15:13,345:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 3136, 64])
2025-01-22 01:15:13,345:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:15:13,345:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:15:13,345:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 3136, 64])
2025-01-22 01:15:13,346:[P:5447]:Rank[0/1] Module: ConvEmbed, Input[0] Shape: torch.Size([64, 64, 56, 56])
2025-01-22 01:15:13,346:[P:5447]:Rank[0/1] Module: ConvEmbed, Output Shape: torch.Size([64, 192, 28, 28])
2025-01-22 01:15:13,348:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 784, 192])
2025-01-22 01:15:13,348:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:15:13,348:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:15:13,348:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 784, 192])
2025-01-22 01:15:13,350:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 784, 192])
2025-01-22 01:15:13,350:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:15:13,350:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:15:13,351:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 784, 192])
2025-01-22 01:15:13,351:[P:5447]:Rank[0/1] Module: ConvEmbed, Input[0] Shape: torch.Size([64, 192, 28, 28])
2025-01-22 01:15:13,351:[P:5447]:Rank[0/1] Module: ConvEmbed, Output Shape: torch.Size([64, 384, 14, 14])
2025-01-22 01:15:13,354:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 01:15:13,354:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:15:13,354:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:15:13,354:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 01:15:13,357:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 01:15:13,357:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:15:13,357:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:15:13,357:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 01:15:13,360:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 01:15:13,360:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:15:13,360:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:15:13,360:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 01:15:13,364:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 01:15:13,364:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:15:13,364:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:15:13,364:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 01:15:13,367:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 01:15:13,367:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:15:13,367:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:15:13,367:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 01:15:13,370:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 01:15:13,370:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:15:13,370:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:15:13,370:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 01:15:13,373:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 01:15:13,373:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:15:13,373:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:15:13,373:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 01:15:13,376:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 01:15:13,376:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:15:13,376:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:15:13,376:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 01:15:13,379:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 01:15:13,379:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:15:13,379:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:15:13,379:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 01:15:13,382:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 01:15:13,382:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:15:13,382:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:15:13,382:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 01:15:19,970:[P:5447]:Rank[0/1] Module: ConvEmbed, Input[0] Shape: torch.Size([64, 3, 224, 224])
2025-01-22 01:15:19,970:[P:5447]:Rank[0/1] Module: ConvEmbed, Output Shape: torch.Size([64, 64, 56, 56])
2025-01-22 01:15:19,973:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 3136, 64])
2025-01-22 01:15:19,973:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:15:19,973:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:15:19,973:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 3136, 64])
2025-01-22 01:15:19,973:[P:5447]:Rank[0/1] Module: ConvEmbed, Input[0] Shape: torch.Size([64, 64, 56, 56])
2025-01-22 01:15:19,973:[P:5447]:Rank[0/1] Module: ConvEmbed, Output Shape: torch.Size([64, 192, 28, 28])
2025-01-22 01:15:19,975:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 784, 192])
2025-01-22 01:15:19,976:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:15:19,976:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:15:19,976:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 784, 192])
2025-01-22 01:15:19,978:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 784, 192])
2025-01-22 01:15:19,978:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:15:19,978:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:15:19,978:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 784, 192])
2025-01-22 01:15:19,978:[P:5447]:Rank[0/1] Module: ConvEmbed, Input[0] Shape: torch.Size([64, 192, 28, 28])
2025-01-22 01:15:19,979:[P:5447]:Rank[0/1] Module: ConvEmbed, Output Shape: torch.Size([64, 384, 14, 14])
2025-01-22 01:15:19,981:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 01:15:19,981:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:15:19,981:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:15:19,981:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 01:15:19,984:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 01:15:19,984:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:15:19,984:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:15:19,985:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 01:15:19,987:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 01:15:19,988:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:15:19,988:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:15:19,988:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 01:15:19,990:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 01:15:19,991:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:15:19,991:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:15:19,991:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 01:15:19,994:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 01:15:19,994:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:15:19,994:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:15:19,994:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 01:15:19,996:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 01:15:19,997:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:15:19,997:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:15:19,997:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 01:15:19,999:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 01:15:20,000:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:15:20,000:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:15:20,000:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 01:15:20,003:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 01:15:20,003:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:15:20,003:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:15:20,003:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 01:15:20,006:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 01:15:20,006:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:15:20,006:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:15:20,006:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 01:15:20,009:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 01:15:20,009:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:15:20,009:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:15:20,009:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 01:15:26,967:[P:5447]:Rank[0/1] Module: ConvEmbed, Input[0] Shape: torch.Size([64, 3, 224, 224])
2025-01-22 01:15:26,967:[P:5447]:Rank[0/1] Module: ConvEmbed, Output Shape: torch.Size([64, 64, 56, 56])
2025-01-22 01:15:26,969:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 3136, 64])
2025-01-22 01:15:26,970:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:15:26,970:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:15:26,970:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 3136, 64])
2025-01-22 01:15:26,970:[P:5447]:Rank[0/1] Module: ConvEmbed, Input[0] Shape: torch.Size([64, 64, 56, 56])
2025-01-22 01:15:26,970:[P:5447]:Rank[0/1] Module: ConvEmbed, Output Shape: torch.Size([64, 192, 28, 28])
2025-01-22 01:15:26,972:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 784, 192])
2025-01-22 01:15:26,973:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:15:26,973:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:15:26,973:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 784, 192])
2025-01-22 01:15:26,975:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 784, 192])
2025-01-22 01:15:26,975:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:15:26,975:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:15:26,975:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 784, 192])
2025-01-22 01:15:26,976:[P:5447]:Rank[0/1] Module: ConvEmbed, Input[0] Shape: torch.Size([64, 192, 28, 28])
2025-01-22 01:15:26,976:[P:5447]:Rank[0/1] Module: ConvEmbed, Output Shape: torch.Size([64, 384, 14, 14])
2025-01-22 01:15:26,978:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 01:15:26,978:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:15:26,978:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:15:26,979:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 01:15:26,982:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 01:15:26,982:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:15:26,982:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:15:26,982:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 01:15:26,985:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 01:15:26,985:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:15:26,985:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:15:26,985:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 01:15:26,989:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 01:15:26,989:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:15:26,989:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:15:26,989:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 01:15:26,992:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 01:15:26,992:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:15:26,992:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:15:26,992:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 01:15:26,995:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 01:15:26,995:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:15:26,995:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:15:26,995:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 01:15:26,998:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 01:15:26,998:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:15:26,998:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:15:26,998:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 01:15:27,002:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 01:15:27,002:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:15:27,002:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:15:27,002:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 01:15:27,005:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 01:15:27,005:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:15:27,005:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:15:27,005:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 01:15:27,007:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 01:15:27,008:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:15:27,008:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:15:27,008:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 01:15:33,814:[P:5447]:Rank[0/1] Module: ConvEmbed, Input[0] Shape: torch.Size([64, 3, 224, 224])
2025-01-22 01:15:33,815:[P:5447]:Rank[0/1] Module: ConvEmbed, Output Shape: torch.Size([64, 64, 56, 56])
2025-01-22 01:15:33,817:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 3136, 64])
2025-01-22 01:15:33,817:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:15:33,817:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:15:33,817:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 3136, 64])
2025-01-22 01:15:33,817:[P:5447]:Rank[0/1] Module: ConvEmbed, Input[0] Shape: torch.Size([64, 64, 56, 56])
2025-01-22 01:15:33,818:[P:5447]:Rank[0/1] Module: ConvEmbed, Output Shape: torch.Size([64, 192, 28, 28])
2025-01-22 01:15:33,820:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 784, 192])
2025-01-22 01:15:33,820:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:15:33,820:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:15:33,820:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 784, 192])
2025-01-22 01:15:33,823:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 784, 192])
2025-01-22 01:15:33,823:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:15:33,823:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:15:33,823:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 784, 192])
2025-01-22 01:15:33,824:[P:5447]:Rank[0/1] Module: ConvEmbed, Input[0] Shape: torch.Size([64, 192, 28, 28])
2025-01-22 01:15:33,824:[P:5447]:Rank[0/1] Module: ConvEmbed, Output Shape: torch.Size([64, 384, 14, 14])
2025-01-22 01:15:33,827:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 01:15:33,827:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:15:33,827:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:15:33,827:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 01:15:33,830:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 01:15:33,830:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:15:33,830:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:15:33,830:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 01:15:33,833:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 01:15:33,833:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:15:33,833:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:15:33,834:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 01:15:33,837:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 01:15:33,837:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:15:33,837:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:15:33,837:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 01:15:33,841:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 01:15:33,841:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:15:33,841:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:15:33,841:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 01:15:33,844:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 01:15:33,844:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:15:33,844:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:15:33,844:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 01:15:33,847:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 01:15:33,847:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:15:33,847:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:15:33,847:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 01:15:33,850:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 01:15:33,851:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:15:33,851:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:15:33,851:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 01:15:33,854:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 01:15:33,855:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:15:33,855:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:15:33,855:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 01:15:33,857:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 01:15:33,858:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:15:33,858:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:15:33,858:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 01:15:40,669:[P:5447]:Rank[0/1] => Epoch[0]: train end, duration: 104.44s
2025-01-22 01:15:40,669:[P:5447]:Rank[0/1] => Epoch[0]: validate start
2025-01-22 01:15:40,670:[P:5447]:Rank[0/1] => switch to eval mode
2025-01-22 01:15:41,784:[P:5447]:Rank[0/1] Module: ConvEmbed, Input[0] Shape: torch.Size([32, 3, 224, 224])
2025-01-22 01:15:41,784:[P:5447]:Rank[0/1] Module: ConvEmbed, Output Shape: torch.Size([32, 64, 56, 56])
2025-01-22 01:15:41,885:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([32, 3136, 64])
2025-01-22 01:15:41,885:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:15:41,885:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:15:41,885:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([32, 3136, 64])
2025-01-22 01:15:42,006:[P:5447]:Rank[0/1] Module: ConvEmbed, Input[0] Shape: torch.Size([32, 64, 56, 56])
2025-01-22 01:15:42,006:[P:5447]:Rank[0/1] Module: ConvEmbed, Output Shape: torch.Size([32, 192, 28, 28])
2025-01-22 01:15:42,081:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([32, 784, 192])
2025-01-22 01:15:42,081:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:15:42,081:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:15:42,081:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([32, 784, 192])
2025-01-22 01:15:42,083:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([32, 784, 192])
2025-01-22 01:15:42,083:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:15:42,083:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:15:42,083:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([32, 784, 192])
2025-01-22 01:15:42,161:[P:5447]:Rank[0/1] Module: ConvEmbed, Input[0] Shape: torch.Size([32, 192, 28, 28])
2025-01-22 01:15:42,162:[P:5447]:Rank[0/1] Module: ConvEmbed, Output Shape: torch.Size([32, 384, 14, 14])
2025-01-22 01:15:42,331:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([32, 197, 384])
2025-01-22 01:15:42,331:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:15:42,331:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:15:42,331:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([32, 197, 384])
2025-01-22 01:15:42,333:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([32, 197, 384])
2025-01-22 01:15:42,333:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:15:42,333:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:15:42,334:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([32, 197, 384])
2025-01-22 01:15:42,335:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([32, 197, 384])
2025-01-22 01:15:42,336:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:15:42,336:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:15:42,336:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([32, 197, 384])
2025-01-22 01:15:42,338:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([32, 197, 384])
2025-01-22 01:15:42,338:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:15:42,338:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:15:42,338:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([32, 197, 384])
2025-01-22 01:15:42,340:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([32, 197, 384])
2025-01-22 01:15:42,340:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:15:42,340:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:15:42,341:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([32, 197, 384])
2025-01-22 01:15:42,343:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([32, 197, 384])
2025-01-22 01:15:42,343:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:15:42,343:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:15:42,343:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([32, 197, 384])
2025-01-22 01:15:42,345:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([32, 197, 384])
2025-01-22 01:15:42,346:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:15:42,346:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:15:42,346:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([32, 197, 384])
2025-01-22 01:15:42,348:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([32, 197, 384])
2025-01-22 01:15:42,348:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:15:42,348:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:15:42,348:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([32, 197, 384])
2025-01-22 01:15:42,350:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([32, 197, 384])
2025-01-22 01:15:42,350:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:15:42,350:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:15:42,350:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([32, 197, 384])
2025-01-22 01:15:42,352:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([32, 197, 384])
2025-01-22 01:15:42,352:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:15:42,352:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:15:42,352:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([32, 197, 384])
2025-01-22 01:15:43,153:[P:5447]:Rank[0/1] Module: ConvEmbed, Input[0] Shape: torch.Size([32, 3, 224, 224])
2025-01-22 01:15:43,153:[P:5447]:Rank[0/1] Module: ConvEmbed, Output Shape: torch.Size([32, 64, 56, 56])
2025-01-22 01:15:43,161:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([32, 3136, 64])
2025-01-22 01:15:43,161:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:15:43,162:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:15:43,162:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([32, 3136, 64])
2025-01-22 01:15:43,162:[P:5447]:Rank[0/1] Module: ConvEmbed, Input[0] Shape: torch.Size([32, 64, 56, 56])
2025-01-22 01:15:43,162:[P:5447]:Rank[0/1] Module: ConvEmbed, Output Shape: torch.Size([32, 192, 28, 28])
2025-01-22 01:15:43,164:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([32, 784, 192])
2025-01-22 01:15:43,164:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:15:43,164:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:15:43,164:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([32, 784, 192])
2025-01-22 01:15:43,165:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([32, 784, 192])
2025-01-22 01:15:43,165:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:15:43,165:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:15:43,166:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([32, 784, 192])
2025-01-22 01:15:43,166:[P:5447]:Rank[0/1] Module: ConvEmbed, Input[0] Shape: torch.Size([32, 192, 28, 28])
2025-01-22 01:15:43,166:[P:5447]:Rank[0/1] Module: ConvEmbed, Output Shape: torch.Size([32, 384, 14, 14])
2025-01-22 01:15:43,168:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([32, 197, 384])
2025-01-22 01:15:43,168:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:15:43,168:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:15:43,168:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([32, 197, 384])
2025-01-22 01:15:43,171:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([32, 197, 384])
2025-01-22 01:15:43,171:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:15:43,171:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:15:43,171:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([32, 197, 384])
2025-01-22 01:15:43,173:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([32, 197, 384])
2025-01-22 01:15:43,173:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:15:43,173:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:15:43,173:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([32, 197, 384])
2025-01-22 01:15:43,175:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([32, 197, 384])
2025-01-22 01:15:43,175:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:15:43,175:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:15:43,175:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([32, 197, 384])
2025-01-22 01:15:43,176:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([32, 197, 384])
2025-01-22 01:15:43,177:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:15:43,177:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:15:43,177:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([32, 197, 384])
2025-01-22 01:15:43,178:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([32, 197, 384])
2025-01-22 01:15:43,178:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:15:43,178:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:15:43,179:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([32, 197, 384])
2025-01-22 01:15:43,180:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([32, 197, 384])
2025-01-22 01:15:43,181:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:15:43,181:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:15:43,181:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([32, 197, 384])
2025-01-22 01:15:43,182:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([32, 197, 384])
2025-01-22 01:15:43,183:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:15:43,183:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:15:43,183:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([32, 197, 384])
2025-01-22 01:15:43,185:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([32, 197, 384])
2025-01-22 01:15:43,185:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:15:43,185:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:15:43,185:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([32, 197, 384])
2025-01-22 01:15:43,187:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([32, 197, 384])
2025-01-22 01:15:43,187:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:15:43,187:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:15:43,187:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([32, 197, 384])
2025-01-22 01:15:44,242:[P:5447]:Rank[0/1] Module: ConvEmbed, Input[0] Shape: torch.Size([29, 3, 224, 224])
2025-01-22 01:15:44,242:[P:5447]:Rank[0/1] Module: ConvEmbed, Output Shape: torch.Size([29, 64, 56, 56])
2025-01-22 01:15:44,322:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([29, 3136, 64])
2025-01-22 01:15:44,323:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:15:44,323:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:15:44,323:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([29, 3136, 64])
2025-01-22 01:15:44,679:[P:5447]:Rank[0/1] Module: ConvEmbed, Input[0] Shape: torch.Size([29, 64, 56, 56])
2025-01-22 01:15:44,679:[P:5447]:Rank[0/1] Module: ConvEmbed, Output Shape: torch.Size([29, 192, 28, 28])
2025-01-22 01:15:44,808:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([29, 784, 192])
2025-01-22 01:15:44,809:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:15:44,809:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:15:44,809:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([29, 784, 192])
2025-01-22 01:15:44,810:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([29, 784, 192])
2025-01-22 01:15:44,810:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:15:44,810:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:15:44,810:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([29, 784, 192])
2025-01-22 01:15:44,932:[P:5447]:Rank[0/1] Module: ConvEmbed, Input[0] Shape: torch.Size([29, 192, 28, 28])
2025-01-22 01:15:44,932:[P:5447]:Rank[0/1] Module: ConvEmbed, Output Shape: torch.Size([29, 384, 14, 14])
2025-01-22 01:15:45,041:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([29, 197, 384])
2025-01-22 01:15:45,041:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:15:45,041:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:15:45,041:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([29, 197, 384])
2025-01-22 01:15:45,043:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([29, 197, 384])
2025-01-22 01:15:45,043:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:15:45,043:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:15:45,043:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([29, 197, 384])
2025-01-22 01:15:45,045:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([29, 197, 384])
2025-01-22 01:15:45,045:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:15:45,045:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:15:45,045:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([29, 197, 384])
2025-01-22 01:15:45,046:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([29, 197, 384])
2025-01-22 01:15:45,046:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:15:45,046:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:15:45,046:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([29, 197, 384])
2025-01-22 01:15:45,048:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([29, 197, 384])
2025-01-22 01:15:45,048:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:15:45,048:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:15:45,048:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([29, 197, 384])
2025-01-22 01:15:45,050:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([29, 197, 384])
2025-01-22 01:15:45,050:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:15:45,050:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:15:45,050:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([29, 197, 384])
2025-01-22 01:15:45,052:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([29, 197, 384])
2025-01-22 01:15:45,052:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:15:45,052:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:15:45,052:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([29, 197, 384])
2025-01-22 01:15:45,054:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([29, 197, 384])
2025-01-22 01:15:45,054:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:15:45,054:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:15:45,054:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([29, 197, 384])
2025-01-22 01:15:45,055:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([29, 197, 384])
2025-01-22 01:15:45,056:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:15:45,056:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:15:45,056:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([29, 197, 384])
2025-01-22 01:15:45,057:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([29, 197, 384])
2025-01-22 01:15:45,057:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:15:45,057:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:15:45,057:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([29, 197, 384])
2025-01-22 01:15:45,827:[P:5447]:Rank[0/1] => synchronize...
2025-01-22 01:15:45,827:[P:5447]:Rank[0/1] => TEST:	Loss 6.8277	Error@1 100.000%	Error@5 100.000%	Accuracy@1 0.000%	Accuracy@5 0.000%	
2025-01-22 01:15:45,827:[P:5447]:Rank[0/1] => switch to train mode
2025-01-22 01:15:45,828:[P:5447]:Rank[0/1] => Epoch[0]: validate end, duration: 5.16s
2025-01-22 01:15:45,828:[P:5447]:Rank[0/1] => lr: 5.0799999999999995e-05
2025-01-22 01:15:45,831:[P:5447]:Rank[0/1] => saving checkpoint to OUTPUT/imagenet/cvt-13-224x224
2025-01-22 01:15:46,197:[P:5447]:Rank[0/1] => Epoch[0]: epoch end, duration : 109.97s
2025-01-22 01:15:46,197:[P:5447]:Rank[0/1] => Epoch[1]: epoch start
2025-01-22 01:15:46,198:[P:5447]:Rank[0/1] => Epoch[1]: train start
2025-01-22 01:15:46,198:[P:5447]:Rank[0/1] => switch to train mode
2025-01-22 01:15:46,206:[P:5447]:Rank[0/1] Module: ConvEmbed, Input[0] Shape: torch.Size([64, 3, 224, 224])
2025-01-22 01:15:46,206:[P:5447]:Rank[0/1] Module: ConvEmbed, Output Shape: torch.Size([64, 64, 56, 56])
2025-01-22 01:15:46,228:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 3136, 64])
2025-01-22 01:15:46,228:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:15:46,228:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:15:46,228:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 3136, 64])
2025-01-22 01:15:46,230:[P:5447]:Rank[0/1] Module: ConvEmbed, Input[0] Shape: torch.Size([64, 64, 56, 56])
2025-01-22 01:15:46,230:[P:5447]:Rank[0/1] Module: ConvEmbed, Output Shape: torch.Size([64, 192, 28, 28])
2025-01-22 01:15:46,240:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 784, 192])
2025-01-22 01:15:46,241:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:15:46,241:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:15:46,241:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 784, 192])
2025-01-22 01:15:46,254:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 784, 192])
2025-01-22 01:15:46,254:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:15:46,255:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:15:46,255:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 784, 192])
2025-01-22 01:15:46,255:[P:5447]:Rank[0/1] Module: ConvEmbed, Input[0] Shape: torch.Size([64, 192, 28, 28])
2025-01-22 01:15:46,255:[P:5447]:Rank[0/1] Module: ConvEmbed, Output Shape: torch.Size([64, 384, 14, 14])
2025-01-22 01:15:46,287:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 01:15:46,287:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:15:46,287:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:15:46,287:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 01:15:46,316:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 01:15:46,316:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:15:46,316:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:15:46,316:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 01:15:46,340:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 01:15:46,340:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:15:46,340:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:15:46,340:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 01:15:46,361:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 01:15:46,361:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:15:46,361:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:15:46,361:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 01:15:46,378:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 01:15:46,378:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:15:46,378:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:15:46,379:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 01:15:46,400:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 01:15:46,400:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:15:46,400:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:15:46,400:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 01:15:46,425:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 01:15:46,425:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:15:46,425:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:15:46,425:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 01:15:46,445:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 01:15:46,445:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:15:46,445:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:15:46,445:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 01:15:46,468:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 01:15:46,468:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:15:46,468:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:15:46,468:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 01:15:46,485:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 01:15:46,485:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:15:46,485:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:15:46,485:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 01:15:53,120:[P:5447]:Rank[0/1] => Epoch[1][0/13]: Time 6.921s (6.921s)	Speed 9.2 samples/s	Data 0.006s (0.006s)	Loss 6.78553 (6.78553)	Accuracy@1 0.000 (0.000)	Accuracy@5 0.000 (0.000)	
2025-01-22 01:15:53,123:[P:5447]:Rank[0/1] Module: ConvEmbed, Input[0] Shape: torch.Size([64, 3, 224, 224])
2025-01-22 01:15:53,123:[P:5447]:Rank[0/1] Module: ConvEmbed, Output Shape: torch.Size([64, 64, 56, 56])
2025-01-22 01:15:53,126:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 3136, 64])
2025-01-22 01:15:53,126:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:15:53,126:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:15:53,126:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 3136, 64])
2025-01-22 01:15:53,126:[P:5447]:Rank[0/1] Module: ConvEmbed, Input[0] Shape: torch.Size([64, 64, 56, 56])
2025-01-22 01:15:53,126:[P:5447]:Rank[0/1] Module: ConvEmbed, Output Shape: torch.Size([64, 192, 28, 28])
2025-01-22 01:15:53,129:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 784, 192])
2025-01-22 01:15:53,129:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:15:53,129:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:15:53,129:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 784, 192])
2025-01-22 01:15:53,132:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 784, 192])
2025-01-22 01:15:53,132:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:15:53,132:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:15:53,132:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 784, 192])
2025-01-22 01:15:53,133:[P:5447]:Rank[0/1] Module: ConvEmbed, Input[0] Shape: torch.Size([64, 192, 28, 28])
2025-01-22 01:15:53,133:[P:5447]:Rank[0/1] Module: ConvEmbed, Output Shape: torch.Size([64, 384, 14, 14])
2025-01-22 01:15:53,135:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 01:15:53,136:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:15:53,136:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:15:53,136:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 01:15:53,139:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 01:15:53,139:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:15:53,139:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:15:53,139:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 01:15:53,143:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 01:15:53,143:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:15:53,143:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:15:53,143:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 01:15:53,146:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 01:15:53,147:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:15:53,147:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:15:53,147:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 01:15:53,150:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 01:15:53,150:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:15:53,150:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:15:53,150:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 01:15:53,153:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 01:15:53,154:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:15:53,154:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:15:53,154:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 01:15:53,157:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 01:15:53,157:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:15:53,157:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:15:53,157:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 01:15:53,160:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 01:15:53,160:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:15:53,160:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:15:53,160:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 01:15:53,163:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 01:15:53,163:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:15:53,163:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:15:53,163:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 01:15:53,166:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 01:15:53,166:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:15:53,166:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:15:53,166:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 01:15:59,906:[P:5447]:Rank[0/1] Module: ConvEmbed, Input[0] Shape: torch.Size([64, 3, 224, 224])
2025-01-22 01:15:59,906:[P:5447]:Rank[0/1] Module: ConvEmbed, Output Shape: torch.Size([64, 64, 56, 56])
2025-01-22 01:15:59,908:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 3136, 64])
2025-01-22 01:15:59,909:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:15:59,909:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:15:59,909:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 3136, 64])
2025-01-22 01:15:59,909:[P:5447]:Rank[0/1] Module: ConvEmbed, Input[0] Shape: torch.Size([64, 64, 56, 56])
2025-01-22 01:15:59,909:[P:5447]:Rank[0/1] Module: ConvEmbed, Output Shape: torch.Size([64, 192, 28, 28])
2025-01-22 01:15:59,912:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 784, 192])
2025-01-22 01:15:59,912:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:15:59,912:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:15:59,912:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 784, 192])
2025-01-22 01:15:59,915:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 784, 192])
2025-01-22 01:15:59,915:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:15:59,915:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:15:59,915:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 784, 192])
2025-01-22 01:15:59,915:[P:5447]:Rank[0/1] Module: ConvEmbed, Input[0] Shape: torch.Size([64, 192, 28, 28])
2025-01-22 01:15:59,916:[P:5447]:Rank[0/1] Module: ConvEmbed, Output Shape: torch.Size([64, 384, 14, 14])
2025-01-22 01:15:59,918:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 01:15:59,919:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:15:59,919:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:15:59,919:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 01:15:59,923:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 01:15:59,923:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:15:59,923:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:15:59,923:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 01:15:59,927:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 01:15:59,927:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:15:59,927:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:15:59,927:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 01:15:59,931:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 01:15:59,932:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:15:59,932:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:15:59,932:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 01:15:59,935:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 01:15:59,935:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:15:59,935:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:15:59,935:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 01:15:59,939:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 01:15:59,939:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:15:59,939:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:15:59,939:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 01:15:59,942:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 01:15:59,942:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:15:59,942:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:15:59,942:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 01:15:59,945:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 01:15:59,945:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:15:59,945:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:15:59,945:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 01:15:59,948:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 01:15:59,948:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:15:59,948:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:15:59,948:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 01:15:59,952:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 01:15:59,952:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:15:59,952:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:15:59,952:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 01:16:06,351:[P:5447]:Rank[0/1] Module: ConvEmbed, Input[0] Shape: torch.Size([64, 3, 224, 224])
2025-01-22 01:16:06,351:[P:5447]:Rank[0/1] Module: ConvEmbed, Output Shape: torch.Size([64, 64, 56, 56])
2025-01-22 01:16:06,353:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 3136, 64])
2025-01-22 01:16:06,353:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:16:06,354:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:16:06,354:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 3136, 64])
2025-01-22 01:16:06,354:[P:5447]:Rank[0/1] Module: ConvEmbed, Input[0] Shape: torch.Size([64, 64, 56, 56])
2025-01-22 01:16:06,354:[P:5447]:Rank[0/1] Module: ConvEmbed, Output Shape: torch.Size([64, 192, 28, 28])
2025-01-22 01:16:06,356:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 784, 192])
2025-01-22 01:16:06,356:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:16:06,356:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:16:06,356:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 784, 192])
2025-01-22 01:16:06,359:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 784, 192])
2025-01-22 01:16:06,359:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:16:06,359:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:16:06,359:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 784, 192])
2025-01-22 01:16:06,359:[P:5447]:Rank[0/1] Module: ConvEmbed, Input[0] Shape: torch.Size([64, 192, 28, 28])
2025-01-22 01:16:06,360:[P:5447]:Rank[0/1] Module: ConvEmbed, Output Shape: torch.Size([64, 384, 14, 14])
2025-01-22 01:16:06,362:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 01:16:06,363:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:16:06,363:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:16:06,363:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 01:16:06,365:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 01:16:06,366:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:16:06,366:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:16:06,366:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 01:16:06,369:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 01:16:06,369:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:16:06,369:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:16:06,369:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 01:16:06,372:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 01:16:06,372:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:16:06,372:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:16:06,372:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 01:16:06,375:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 01:16:06,375:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:16:06,375:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:16:06,375:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 01:16:06,378:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 01:16:06,378:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:16:06,378:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:16:06,378:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 01:16:06,381:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 01:16:06,381:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:16:06,381:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:16:06,381:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 01:16:06,384:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 01:16:06,384:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:16:06,384:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:16:06,384:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 01:16:06,387:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 01:16:06,387:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:16:06,387:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:16:06,387:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 01:16:06,390:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 01:16:06,390:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:16:06,390:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:16:06,390:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 01:16:12,801:[P:5447]:Rank[0/1] Module: ConvEmbed, Input[0] Shape: torch.Size([64, 3, 224, 224])
2025-01-22 01:16:12,802:[P:5447]:Rank[0/1] Module: ConvEmbed, Output Shape: torch.Size([64, 64, 56, 56])
2025-01-22 01:16:12,804:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 3136, 64])
2025-01-22 01:16:12,804:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:16:12,804:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:16:12,804:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 3136, 64])
2025-01-22 01:16:12,805:[P:5447]:Rank[0/1] Module: ConvEmbed, Input[0] Shape: torch.Size([64, 64, 56, 56])
2025-01-22 01:16:12,805:[P:5447]:Rank[0/1] Module: ConvEmbed, Output Shape: torch.Size([64, 192, 28, 28])
2025-01-22 01:16:12,808:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 784, 192])
2025-01-22 01:16:12,808:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:16:12,808:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:16:12,808:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 784, 192])
2025-01-22 01:16:12,810:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 784, 192])
2025-01-22 01:16:12,811:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:16:12,811:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:16:12,811:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 784, 192])
2025-01-22 01:16:12,811:[P:5447]:Rank[0/1] Module: ConvEmbed, Input[0] Shape: torch.Size([64, 192, 28, 28])
2025-01-22 01:16:12,811:[P:5447]:Rank[0/1] Module: ConvEmbed, Output Shape: torch.Size([64, 384, 14, 14])
2025-01-22 01:16:12,814:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 01:16:12,815:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:16:12,815:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:16:12,815:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 01:16:12,818:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 01:16:12,818:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:16:12,818:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:16:12,818:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 01:16:12,821:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 01:16:12,821:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:16:12,821:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:16:12,821:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 01:16:12,824:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 01:16:12,825:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:16:12,825:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:16:12,825:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 01:16:12,829:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 01:16:12,829:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:16:12,829:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:16:12,829:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 01:16:12,833:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 01:16:12,833:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:16:12,833:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:16:12,833:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 01:16:12,835:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 01:16:12,836:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:16:12,836:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:16:12,836:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 01:16:12,839:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 01:16:12,840:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:16:12,840:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:16:12,840:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 01:16:12,845:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 01:16:12,845:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:16:12,845:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:16:12,845:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 01:16:12,848:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 01:16:12,848:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:16:12,848:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:16:12,848:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 01:16:19,067:[P:5447]:Rank[0/1] Module: ConvEmbed, Input[0] Shape: torch.Size([64, 3, 224, 224])
2025-01-22 01:16:19,068:[P:5447]:Rank[0/1] Module: ConvEmbed, Output Shape: torch.Size([64, 64, 56, 56])
2025-01-22 01:16:19,070:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 3136, 64])
2025-01-22 01:16:19,070:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:16:19,070:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:16:19,070:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 3136, 64])
2025-01-22 01:16:19,070:[P:5447]:Rank[0/1] Module: ConvEmbed, Input[0] Shape: torch.Size([64, 64, 56, 56])
2025-01-22 01:16:19,071:[P:5447]:Rank[0/1] Module: ConvEmbed, Output Shape: torch.Size([64, 192, 28, 28])
2025-01-22 01:16:19,073:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 784, 192])
2025-01-22 01:16:19,073:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:16:19,073:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:16:19,073:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 784, 192])
2025-01-22 01:16:19,075:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 784, 192])
2025-01-22 01:16:19,075:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:16:19,075:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:16:19,075:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 784, 192])
2025-01-22 01:16:19,076:[P:5447]:Rank[0/1] Module: ConvEmbed, Input[0] Shape: torch.Size([64, 192, 28, 28])
2025-01-22 01:16:19,076:[P:5447]:Rank[0/1] Module: ConvEmbed, Output Shape: torch.Size([64, 384, 14, 14])
2025-01-22 01:16:19,079:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 01:16:19,079:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:16:19,079:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:16:19,079:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 01:16:19,082:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 01:16:19,082:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:16:19,082:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:16:19,082:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 01:16:19,085:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 01:16:19,085:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:16:19,085:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:16:19,085:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 01:16:19,087:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 01:16:19,088:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:16:19,088:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:16:19,088:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 01:16:19,090:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 01:16:19,091:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:16:19,091:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:16:19,091:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 01:16:19,094:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 01:16:19,094:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:16:19,094:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:16:19,094:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 01:16:19,097:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 01:16:19,097:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:16:19,098:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:16:19,098:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 01:16:19,101:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 01:16:19,101:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:16:19,101:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:16:19,101:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 01:16:19,104:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 01:16:19,104:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:16:19,104:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:16:19,104:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 01:16:19,108:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 01:16:19,108:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:16:19,108:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:16:19,108:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 01:16:25,273:[P:5447]:Rank[0/1] Module: ConvEmbed, Input[0] Shape: torch.Size([64, 3, 224, 224])
2025-01-22 01:16:25,274:[P:5447]:Rank[0/1] Module: ConvEmbed, Output Shape: torch.Size([64, 64, 56, 56])
2025-01-22 01:16:25,276:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 3136, 64])
2025-01-22 01:16:25,276:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:16:25,276:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:16:25,276:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 3136, 64])
2025-01-22 01:16:25,277:[P:5447]:Rank[0/1] Module: ConvEmbed, Input[0] Shape: torch.Size([64, 64, 56, 56])
2025-01-22 01:16:25,277:[P:5447]:Rank[0/1] Module: ConvEmbed, Output Shape: torch.Size([64, 192, 28, 28])
2025-01-22 01:16:25,279:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 784, 192])
2025-01-22 01:16:25,279:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:16:25,279:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:16:25,279:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 784, 192])
2025-01-22 01:16:25,282:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 784, 192])
2025-01-22 01:16:25,282:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:16:25,282:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:16:25,282:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 784, 192])
2025-01-22 01:16:25,282:[P:5447]:Rank[0/1] Module: ConvEmbed, Input[0] Shape: torch.Size([64, 192, 28, 28])
2025-01-22 01:16:25,282:[P:5447]:Rank[0/1] Module: ConvEmbed, Output Shape: torch.Size([64, 384, 14, 14])
2025-01-22 01:16:25,285:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 01:16:25,285:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:16:25,285:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:16:25,286:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 01:16:25,289:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 01:16:25,289:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:16:25,289:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:16:25,289:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 01:16:25,292:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 01:16:25,292:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:16:25,292:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:16:25,293:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 01:16:25,295:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 01:16:25,295:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:16:25,295:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:16:25,296:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 01:16:25,298:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 01:16:25,298:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:16:25,298:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:16:25,298:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 01:16:25,301:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 01:16:25,301:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:16:25,301:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:16:25,302:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 01:16:25,305:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 01:16:25,305:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:16:25,305:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:16:25,305:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 01:16:25,308:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 01:16:25,308:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:16:25,308:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:16:25,308:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 01:16:25,311:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 01:16:25,311:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:16:25,311:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:16:25,311:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 01:16:25,314:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 01:16:25,314:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:16:25,314:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:16:25,315:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 01:16:31,432:[P:5447]:Rank[0/1] Module: ConvEmbed, Input[0] Shape: torch.Size([64, 3, 224, 224])
2025-01-22 01:16:31,432:[P:5447]:Rank[0/1] Module: ConvEmbed, Output Shape: torch.Size([64, 64, 56, 56])
2025-01-22 01:16:31,434:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 3136, 64])
2025-01-22 01:16:31,435:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:16:31,435:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:16:31,435:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 3136, 64])
2025-01-22 01:16:31,435:[P:5447]:Rank[0/1] Module: ConvEmbed, Input[0] Shape: torch.Size([64, 64, 56, 56])
2025-01-22 01:16:31,435:[P:5447]:Rank[0/1] Module: ConvEmbed, Output Shape: torch.Size([64, 192, 28, 28])
2025-01-22 01:16:31,438:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 784, 192])
2025-01-22 01:16:31,438:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:16:31,438:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:16:31,438:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 784, 192])
2025-01-22 01:16:31,440:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 784, 192])
2025-01-22 01:16:31,440:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:16:31,440:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:16:31,440:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 784, 192])
2025-01-22 01:16:31,441:[P:5447]:Rank[0/1] Module: ConvEmbed, Input[0] Shape: torch.Size([64, 192, 28, 28])
2025-01-22 01:16:31,441:[P:5447]:Rank[0/1] Module: ConvEmbed, Output Shape: torch.Size([64, 384, 14, 14])
2025-01-22 01:16:31,443:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 01:16:31,443:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:16:31,444:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:16:31,444:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 01:16:31,447:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 01:16:31,447:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:16:31,447:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:16:31,447:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 01:16:31,451:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 01:16:31,451:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:16:31,452:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:16:31,452:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 01:16:31,455:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 01:16:31,456:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:16:31,456:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:16:31,456:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 01:16:31,459:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 01:16:31,460:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:16:31,460:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:16:31,460:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 01:16:31,464:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 01:16:31,464:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:16:31,465:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:16:31,465:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 01:16:31,468:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 01:16:31,468:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:16:31,468:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:16:31,468:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 01:16:31,471:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 01:16:31,471:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:16:31,471:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:16:31,472:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 01:16:31,475:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 01:16:31,475:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:16:31,475:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:16:31,475:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 01:16:31,478:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 01:16:31,478:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:16:31,478:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:16:31,478:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 01:16:37,641:[P:5447]:Rank[0/1] Module: ConvEmbed, Input[0] Shape: torch.Size([64, 3, 224, 224])
2025-01-22 01:16:37,642:[P:5447]:Rank[0/1] Module: ConvEmbed, Output Shape: torch.Size([64, 64, 56, 56])
2025-01-22 01:16:37,644:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 3136, 64])
2025-01-22 01:16:37,644:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:16:37,644:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:16:37,644:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 3136, 64])
2025-01-22 01:16:37,645:[P:5447]:Rank[0/1] Module: ConvEmbed, Input[0] Shape: torch.Size([64, 64, 56, 56])
2025-01-22 01:16:37,645:[P:5447]:Rank[0/1] Module: ConvEmbed, Output Shape: torch.Size([64, 192, 28, 28])
2025-01-22 01:16:37,647:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 784, 192])
2025-01-22 01:16:37,647:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:16:37,647:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:16:37,647:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 784, 192])
2025-01-22 01:16:37,649:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 784, 192])
2025-01-22 01:16:37,649:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:16:37,649:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:16:37,650:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 784, 192])
2025-01-22 01:16:37,650:[P:5447]:Rank[0/1] Module: ConvEmbed, Input[0] Shape: torch.Size([64, 192, 28, 28])
2025-01-22 01:16:37,650:[P:5447]:Rank[0/1] Module: ConvEmbed, Output Shape: torch.Size([64, 384, 14, 14])
2025-01-22 01:16:37,653:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 01:16:37,653:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:16:37,653:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:16:37,653:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 01:16:37,656:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 01:16:37,656:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:16:37,656:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:16:37,656:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 01:16:37,660:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 01:16:37,661:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:16:37,661:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:16:37,661:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 01:16:37,664:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 01:16:37,664:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:16:37,665:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:16:37,665:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 01:16:37,667:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 01:16:37,667:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:16:37,667:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:16:37,667:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 01:16:37,670:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 01:16:37,670:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:16:37,671:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:16:37,671:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 01:16:37,674:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 01:16:37,674:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:16:37,674:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:16:37,674:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 01:16:37,677:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 01:16:37,677:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:16:37,677:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:16:37,678:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 01:16:37,680:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 01:16:37,680:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:16:37,680:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:16:37,681:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 01:16:37,683:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 01:16:37,683:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:16:37,683:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:16:37,683:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 01:16:43,934:[P:5447]:Rank[0/1] Module: ConvEmbed, Input[0] Shape: torch.Size([64, 3, 224, 224])
2025-01-22 01:16:43,934:[P:5447]:Rank[0/1] Module: ConvEmbed, Output Shape: torch.Size([64, 64, 56, 56])
2025-01-22 01:16:43,936:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 3136, 64])
2025-01-22 01:16:43,936:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:16:43,936:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:16:43,937:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 3136, 64])
2025-01-22 01:16:43,937:[P:5447]:Rank[0/1] Module: ConvEmbed, Input[0] Shape: torch.Size([64, 64, 56, 56])
2025-01-22 01:16:43,937:[P:5447]:Rank[0/1] Module: ConvEmbed, Output Shape: torch.Size([64, 192, 28, 28])
2025-01-22 01:16:43,939:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 784, 192])
2025-01-22 01:16:43,939:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:16:43,939:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:16:43,939:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 784, 192])
2025-01-22 01:16:43,942:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 784, 192])
2025-01-22 01:16:43,942:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:16:43,942:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:16:43,942:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 784, 192])
2025-01-22 01:16:43,942:[P:5447]:Rank[0/1] Module: ConvEmbed, Input[0] Shape: torch.Size([64, 192, 28, 28])
2025-01-22 01:16:43,942:[P:5447]:Rank[0/1] Module: ConvEmbed, Output Shape: torch.Size([64, 384, 14, 14])
2025-01-22 01:16:43,945:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 01:16:43,945:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:16:43,945:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:16:43,945:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 01:16:43,948:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 01:16:43,948:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:16:43,948:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:16:43,948:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 01:16:43,951:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 01:16:43,951:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:16:43,951:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:16:43,951:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 01:16:43,954:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 01:16:43,954:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:16:43,955:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:16:43,955:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 01:16:43,957:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 01:16:43,957:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:16:43,957:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:16:43,958:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 01:16:43,960:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 01:16:43,960:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:16:43,960:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:16:43,960:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 01:16:43,963:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 01:16:43,963:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:16:43,963:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:16:43,964:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 01:16:43,967:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 01:16:43,967:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:16:43,967:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:16:43,967:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 01:16:43,970:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 01:16:43,970:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:16:43,970:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:16:43,970:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 01:16:43,973:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 01:16:43,973:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:16:43,973:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:16:43,973:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 01:16:50,153:[P:5447]:Rank[0/1] Module: ConvEmbed, Input[0] Shape: torch.Size([64, 3, 224, 224])
2025-01-22 01:16:50,154:[P:5447]:Rank[0/1] Module: ConvEmbed, Output Shape: torch.Size([64, 64, 56, 56])
2025-01-22 01:16:50,156:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 3136, 64])
2025-01-22 01:16:50,156:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:16:50,156:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:16:50,156:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 3136, 64])
2025-01-22 01:16:50,157:[P:5447]:Rank[0/1] Module: ConvEmbed, Input[0] Shape: torch.Size([64, 64, 56, 56])
2025-01-22 01:16:50,157:[P:5447]:Rank[0/1] Module: ConvEmbed, Output Shape: torch.Size([64, 192, 28, 28])
2025-01-22 01:16:50,159:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 784, 192])
2025-01-22 01:16:50,159:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:16:50,159:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:16:50,159:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 784, 192])
2025-01-22 01:16:50,161:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 784, 192])
2025-01-22 01:16:50,161:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:16:50,161:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:16:50,161:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 784, 192])
2025-01-22 01:16:50,162:[P:5447]:Rank[0/1] Module: ConvEmbed, Input[0] Shape: torch.Size([64, 192, 28, 28])
2025-01-22 01:16:50,162:[P:5447]:Rank[0/1] Module: ConvEmbed, Output Shape: torch.Size([64, 384, 14, 14])
2025-01-22 01:16:50,165:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 01:16:50,165:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:16:50,165:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:16:50,165:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 01:16:50,168:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 01:16:50,168:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:16:50,168:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:16:50,168:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 01:16:50,171:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 01:16:50,171:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:16:50,171:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:16:50,171:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 01:16:50,174:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 01:16:50,174:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:16:50,174:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:16:50,174:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 01:16:50,178:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 01:16:50,178:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:16:50,178:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:16:50,178:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 01:16:50,181:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 01:16:50,181:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:16:50,181:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:16:50,181:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 01:16:50,184:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 01:16:50,184:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:16:50,184:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:16:50,184:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 01:16:50,186:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 01:16:50,187:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:16:50,187:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:16:50,187:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 01:16:50,190:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 01:16:50,190:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:16:50,190:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:16:50,190:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 01:16:50,193:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 01:16:50,193:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:16:50,193:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:16:50,193:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 01:16:56,463:[P:5447]:Rank[0/1] Module: ConvEmbed, Input[0] Shape: torch.Size([64, 3, 224, 224])
2025-01-22 01:16:56,464:[P:5447]:Rank[0/1] Module: ConvEmbed, Output Shape: torch.Size([64, 64, 56, 56])
2025-01-22 01:16:56,466:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 3136, 64])
2025-01-22 01:16:56,466:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:16:56,466:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:16:56,466:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 3136, 64])
2025-01-22 01:16:56,466:[P:5447]:Rank[0/1] Module: ConvEmbed, Input[0] Shape: torch.Size([64, 64, 56, 56])
2025-01-22 01:16:56,466:[P:5447]:Rank[0/1] Module: ConvEmbed, Output Shape: torch.Size([64, 192, 28, 28])
2025-01-22 01:16:56,469:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 784, 192])
2025-01-22 01:16:56,469:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:16:56,469:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:16:56,469:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 784, 192])
2025-01-22 01:16:56,471:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 784, 192])
2025-01-22 01:16:56,471:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:16:56,471:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:16:56,471:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 784, 192])
2025-01-22 01:16:56,472:[P:5447]:Rank[0/1] Module: ConvEmbed, Input[0] Shape: torch.Size([64, 192, 28, 28])
2025-01-22 01:16:56,472:[P:5447]:Rank[0/1] Module: ConvEmbed, Output Shape: torch.Size([64, 384, 14, 14])
2025-01-22 01:16:56,475:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 01:16:56,475:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:16:56,475:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:16:56,475:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 01:16:56,478:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 01:16:56,478:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:16:56,478:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:16:56,478:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 01:16:56,482:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 01:16:56,482:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:16:56,482:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:16:56,482:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 01:16:56,486:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 01:16:56,486:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:16:56,486:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:16:56,486:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 01:16:56,489:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 01:16:56,490:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:16:56,490:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:16:56,490:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 01:16:56,493:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 01:16:56,494:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:16:56,494:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:16:56,494:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 01:16:56,497:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 01:16:56,497:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:16:56,497:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:16:56,497:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 01:16:56,500:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 01:16:56,500:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:16:56,501:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:16:56,501:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 01:16:56,503:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 01:16:56,504:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:16:56,504:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:16:56,504:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 01:16:56,507:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 01:16:56,508:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:16:56,508:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:16:56,508:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 01:17:02,769:[P:5447]:Rank[0/1] Module: ConvEmbed, Input[0] Shape: torch.Size([64, 3, 224, 224])
2025-01-22 01:17:02,770:[P:5447]:Rank[0/1] Module: ConvEmbed, Output Shape: torch.Size([64, 64, 56, 56])
2025-01-22 01:17:02,772:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 3136, 64])
2025-01-22 01:17:02,772:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:17:02,772:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:17:02,772:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 3136, 64])
2025-01-22 01:17:02,773:[P:5447]:Rank[0/1] Module: ConvEmbed, Input[0] Shape: torch.Size([64, 64, 56, 56])
2025-01-22 01:17:02,773:[P:5447]:Rank[0/1] Module: ConvEmbed, Output Shape: torch.Size([64, 192, 28, 28])
2025-01-22 01:17:02,775:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 784, 192])
2025-01-22 01:17:02,775:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:17:02,775:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:17:02,775:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 784, 192])
2025-01-22 01:17:02,777:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 784, 192])
2025-01-22 01:17:02,778:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:17:02,778:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:17:02,778:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 784, 192])
2025-01-22 01:17:02,778:[P:5447]:Rank[0/1] Module: ConvEmbed, Input[0] Shape: torch.Size([64, 192, 28, 28])
2025-01-22 01:17:02,778:[P:5447]:Rank[0/1] Module: ConvEmbed, Output Shape: torch.Size([64, 384, 14, 14])
2025-01-22 01:17:02,781:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 01:17:02,781:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:17:02,781:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:17:02,781:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 01:17:02,784:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 01:17:02,784:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:17:02,784:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:17:02,785:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 01:17:02,788:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 01:17:02,788:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:17:02,788:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:17:02,788:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 01:17:02,791:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 01:17:02,791:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:17:02,791:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:17:02,792:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 01:17:02,794:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 01:17:02,794:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:17:02,794:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:17:02,794:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 01:17:02,797:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 01:17:02,797:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:17:02,797:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:17:02,797:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 01:17:02,801:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 01:17:02,801:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:17:02,801:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:17:02,801:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 01:17:02,804:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 01:17:02,804:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:17:02,804:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:17:02,804:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 01:17:02,807:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 01:17:02,807:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:17:02,807:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:17:02,807:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 01:17:02,809:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 01:17:02,810:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:17:02,810:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:17:02,810:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 01:17:08,980:[P:5447]:Rank[0/1] => Epoch[1]: train end, duration: 82.78s
2025-01-22 01:17:08,981:[P:5447]:Rank[0/1] => Epoch[1]: validate start
2025-01-22 01:17:08,981:[P:5447]:Rank[0/1] => switch to eval mode
2025-01-22 01:17:09,280:[P:5447]:Rank[0/1] Module: ConvEmbed, Input[0] Shape: torch.Size([32, 3, 224, 224])
2025-01-22 01:17:09,280:[P:5447]:Rank[0/1] Module: ConvEmbed, Output Shape: torch.Size([32, 64, 56, 56])
2025-01-22 01:17:09,283:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([32, 3136, 64])
2025-01-22 01:17:09,283:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:17:09,283:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:17:09,283:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([32, 3136, 64])
2025-01-22 01:17:09,284:[P:5447]:Rank[0/1] Module: ConvEmbed, Input[0] Shape: torch.Size([32, 64, 56, 56])
2025-01-22 01:17:09,284:[P:5447]:Rank[0/1] Module: ConvEmbed, Output Shape: torch.Size([32, 192, 28, 28])
2025-01-22 01:17:09,286:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([32, 784, 192])
2025-01-22 01:17:09,286:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:17:09,286:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:17:09,286:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([32, 784, 192])
2025-01-22 01:17:09,288:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([32, 784, 192])
2025-01-22 01:17:09,288:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:17:09,289:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:17:09,289:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([32, 784, 192])
2025-01-22 01:17:09,289:[P:5447]:Rank[0/1] Module: ConvEmbed, Input[0] Shape: torch.Size([32, 192, 28, 28])
2025-01-22 01:17:09,289:[P:5447]:Rank[0/1] Module: ConvEmbed, Output Shape: torch.Size([32, 384, 14, 14])
2025-01-22 01:17:09,292:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([32, 197, 384])
2025-01-22 01:17:09,292:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:17:09,292:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:17:09,292:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([32, 197, 384])
2025-01-22 01:17:09,294:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([32, 197, 384])
2025-01-22 01:17:09,295:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:17:09,295:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:17:09,295:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([32, 197, 384])
2025-01-22 01:17:09,297:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([32, 197, 384])
2025-01-22 01:17:09,297:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:17:09,297:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:17:09,297:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([32, 197, 384])
2025-01-22 01:17:09,299:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([32, 197, 384])
2025-01-22 01:17:09,299:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:17:09,299:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:17:09,299:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([32, 197, 384])
2025-01-22 01:17:09,301:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([32, 197, 384])
2025-01-22 01:17:09,301:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:17:09,301:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:17:09,301:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([32, 197, 384])
2025-01-22 01:17:09,303:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([32, 197, 384])
2025-01-22 01:17:09,303:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:17:09,304:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:17:09,304:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([32, 197, 384])
2025-01-22 01:17:09,306:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([32, 197, 384])
2025-01-22 01:17:09,306:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:17:09,306:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:17:09,306:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([32, 197, 384])
2025-01-22 01:17:09,308:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([32, 197, 384])
2025-01-22 01:17:09,308:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:17:09,308:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:17:09,308:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([32, 197, 384])
2025-01-22 01:17:09,310:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([32, 197, 384])
2025-01-22 01:17:09,310:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:17:09,310:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:17:09,310:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([32, 197, 384])
2025-01-22 01:17:09,312:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([32, 197, 384])
2025-01-22 01:17:09,312:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:17:09,312:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:17:09,312:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([32, 197, 384])
2025-01-22 01:17:10,949:[P:5447]:Rank[0/1] Module: ConvEmbed, Input[0] Shape: torch.Size([32, 3, 224, 224])
2025-01-22 01:17:10,949:[P:5447]:Rank[0/1] Module: ConvEmbed, Output Shape: torch.Size([32, 64, 56, 56])
2025-01-22 01:17:10,951:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([32, 3136, 64])
2025-01-22 01:17:10,951:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:17:10,951:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:17:10,951:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([32, 3136, 64])
2025-01-22 01:17:10,951:[P:5447]:Rank[0/1] Module: ConvEmbed, Input[0] Shape: torch.Size([32, 64, 56, 56])
2025-01-22 01:17:10,952:[P:5447]:Rank[0/1] Module: ConvEmbed, Output Shape: torch.Size([32, 192, 28, 28])
2025-01-22 01:17:10,953:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([32, 784, 192])
2025-01-22 01:17:10,953:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:17:10,953:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:17:10,953:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([32, 784, 192])
2025-01-22 01:17:10,954:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([32, 784, 192])
2025-01-22 01:17:10,955:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:17:10,955:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:17:10,955:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([32, 784, 192])
2025-01-22 01:17:10,955:[P:5447]:Rank[0/1] Module: ConvEmbed, Input[0] Shape: torch.Size([32, 192, 28, 28])
2025-01-22 01:17:10,955:[P:5447]:Rank[0/1] Module: ConvEmbed, Output Shape: torch.Size([32, 384, 14, 14])
2025-01-22 01:17:10,957:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([32, 197, 384])
2025-01-22 01:17:10,957:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:17:10,957:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:17:10,957:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([32, 197, 384])
2025-01-22 01:17:10,959:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([32, 197, 384])
2025-01-22 01:17:10,959:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:17:10,959:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:17:10,959:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([32, 197, 384])
2025-01-22 01:17:10,960:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([32, 197, 384])
2025-01-22 01:17:10,961:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:17:10,961:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:17:10,961:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([32, 197, 384])
2025-01-22 01:17:10,962:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([32, 197, 384])
2025-01-22 01:17:10,962:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:17:10,962:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:17:10,963:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([32, 197, 384])
2025-01-22 01:17:10,964:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([32, 197, 384])
2025-01-22 01:17:10,964:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:17:10,964:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:17:10,964:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([32, 197, 384])
2025-01-22 01:17:10,966:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([32, 197, 384])
2025-01-22 01:17:10,966:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:17:10,966:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:17:10,966:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([32, 197, 384])
2025-01-22 01:17:10,968:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([32, 197, 384])
2025-01-22 01:17:10,968:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:17:10,968:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:17:10,968:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([32, 197, 384])
2025-01-22 01:17:10,970:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([32, 197, 384])
2025-01-22 01:17:10,970:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:17:10,970:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:17:10,970:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([32, 197, 384])
2025-01-22 01:17:10,972:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([32, 197, 384])
2025-01-22 01:17:10,972:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:17:10,972:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:17:10,972:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([32, 197, 384])
2025-01-22 01:17:10,974:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([32, 197, 384])
2025-01-22 01:17:10,974:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:17:10,974:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:17:10,974:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([32, 197, 384])
2025-01-22 01:17:12,560:[P:5447]:Rank[0/1] Module: ConvEmbed, Input[0] Shape: torch.Size([29, 3, 224, 224])
2025-01-22 01:17:12,560:[P:5447]:Rank[0/1] Module: ConvEmbed, Output Shape: torch.Size([29, 64, 56, 56])
2025-01-22 01:17:12,561:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([29, 3136, 64])
2025-01-22 01:17:12,562:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:17:12,562:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:17:12,562:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([29, 3136, 64])
2025-01-22 01:17:12,562:[P:5447]:Rank[0/1] Module: ConvEmbed, Input[0] Shape: torch.Size([29, 64, 56, 56])
2025-01-22 01:17:12,562:[P:5447]:Rank[0/1] Module: ConvEmbed, Output Shape: torch.Size([29, 192, 28, 28])
2025-01-22 01:17:12,564:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([29, 784, 192])
2025-01-22 01:17:12,564:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:17:12,564:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:17:12,564:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([29, 784, 192])
2025-01-22 01:17:12,565:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([29, 784, 192])
2025-01-22 01:17:12,565:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:17:12,566:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:17:12,566:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([29, 784, 192])
2025-01-22 01:17:12,566:[P:5447]:Rank[0/1] Module: ConvEmbed, Input[0] Shape: torch.Size([29, 192, 28, 28])
2025-01-22 01:17:12,566:[P:5447]:Rank[0/1] Module: ConvEmbed, Output Shape: torch.Size([29, 384, 14, 14])
2025-01-22 01:17:12,568:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([29, 197, 384])
2025-01-22 01:17:12,568:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:17:12,568:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:17:12,568:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([29, 197, 384])
2025-01-22 01:17:12,570:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([29, 197, 384])
2025-01-22 01:17:12,570:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:17:12,570:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:17:12,570:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([29, 197, 384])
2025-01-22 01:17:12,572:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([29, 197, 384])
2025-01-22 01:17:12,572:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:17:12,572:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:17:12,572:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([29, 197, 384])
2025-01-22 01:17:12,573:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([29, 197, 384])
2025-01-22 01:17:12,574:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:17:12,574:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:17:12,574:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([29, 197, 384])
2025-01-22 01:17:12,575:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([29, 197, 384])
2025-01-22 01:17:12,575:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:17:12,576:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:17:12,576:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([29, 197, 384])
2025-01-22 01:17:12,577:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([29, 197, 384])
2025-01-22 01:17:12,577:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:17:12,577:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:17:12,577:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([29, 197, 384])
2025-01-22 01:17:12,579:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([29, 197, 384])
2025-01-22 01:17:12,579:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:17:12,579:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:17:12,579:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([29, 197, 384])
2025-01-22 01:17:12,581:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([29, 197, 384])
2025-01-22 01:17:12,581:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:17:12,581:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:17:12,581:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([29, 197, 384])
2025-01-22 01:17:12,583:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([29, 197, 384])
2025-01-22 01:17:12,583:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:17:12,583:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:17:12,584:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([29, 197, 384])
2025-01-22 01:17:12,586:[P:5447]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([29, 197, 384])
2025-01-22 01:17:12,586:[P:5447]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 01:17:12,586:[P:5447]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 01:17:12,586:[P:5447]:Rank[0/1] Module: Block, Output Shape: torch.Size([29, 197, 384])
2025-01-22 01:17:13,919:[P:5447]:Rank[0/1] => synchronize...
2025-01-22 01:17:13,919:[P:5447]:Rank[0/1] => TEST:	Loss 3.5664	Error@1 76.344%	Error@5 0.000%	Accuracy@1 23.656%	Accuracy@5 100.000%	
2025-01-22 01:17:13,920:[P:5447]:Rank[0/1] => switch to train mode
2025-01-22 01:17:13,921:[P:5447]:Rank[0/1] => Epoch[1]: validate end, duration: 4.94s
2025-01-22 01:17:13,922:[P:5447]:Rank[0/1] => lr: 0.00010059999999999999
2025-01-22 01:17:13,923:[P:5447]:Rank[0/1] => saving checkpoint to OUTPUT/imagenet/cvt-13-224x224
2025-01-22 01:17:14,338:[P:5447]:Rank[0/1] => save model to OUTPUT/imagenet/cvt-13-224x224/model_best.pth
2025-01-22 01:17:14,461:[P:5447]:Rank[0/1] => Epoch[1]: epoch end, duration : 88.26s
2025-01-22 01:17:14,461:[P:5447]:Rank[0/1] => save model to OUTPUT/imagenet/cvt-13-224x224/final_state.pth
2025-01-22 01:17:14,589:[P:5447]:Rank[0/1] => finish training
