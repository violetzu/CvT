2025-01-22 13:07:57,705:[P:12224]:Rank[0/1] => collecting env info (might take some time)
2025-01-22 13:08:02,719:[P:12224]:Rank[0/1] 
PyTorch version: 1.7.1+cu110
Is debug build: False
CUDA used to build PyTorch: 11.0
ROCM used to build PyTorch: N/A

OS: Ubuntu 20.04.6 LTS (x86_64)
GCC version: (Ubuntu 9.4.0-1ubuntu1~20.04.1) 9.4.0
Clang version: Could not collect
CMake version: Could not collect

Python version: 3.9 (64-bit runtime)
Is CUDA available: True
CUDA runtime version: 10.1.243
GPU models and configuration: GPU 0: NVIDIA GeForce RTX 2070
Nvidia driver version: 536.23
cuDNN version: Could not collect
HIP runtime version: N/A
MIOpen runtime version: N/A

Versions of relevant libraries:
[pip3] numpy==1.19.3
[pip3] torch==1.7.1+cu110
[pip3] torchinfo==1.8.0
[pip3] torchsummary==1.5.1
[pip3] torchvision==0.8.2+cu110
[conda] _pytorch_select           0.1                       cpu_0  
[conda] blas                      1.0                         mkl  
[conda] cpuonly                   2.0                           0    pytorch
[conda] libmklml                  2019.0.5             h06a4308_0  
[conda] mkl                       2020.2                      256  
[conda] mkl-service               2.3.0            py39he8ac12f_0  
[conda] mkl_fft                   1.3.0            py39h54f3939_0  
[conda] mkl_random                1.0.2            py39h63df603_0  
[conda] numpy                     1.19.3                   pypi_0    pypi
[conda] pytorch-mutex             1.0                         cpu    pytorch
[conda] torch                     1.7.1+cu110              pypi_0    pypi
[conda] torchinfo                 1.8.0                    pypi_0    pypi
[conda] torchsummary              1.5.1                    pypi_0    pypi
[conda] torchvision               0.8.2+cu110              pypi_0    pypi
2025-01-22 13:08:02,719:[P:12224]:Rank[0/1] Namespace(cfg='experiments/imagenet/cvt/cvt-13-224x224.yaml', local_rank=0, port=9000, opts=[], num_gpus=1, distributed=False)
2025-01-22 13:08:02,719:[P:12224]:Rank[0/1] AMP:
  ENABLED: True
  MEMORY_FORMAT: nchw
AUG:
  COLOR_JITTER: [0.4, 0.4, 0.4, 0.1, 0.0]
  DROPBLOCK_BLOCK_SIZE: 7
  DROPBLOCK_KEEP_PROB: 1.0
  DROPBLOCK_LAYERS: [3, 4]
  GAUSSIAN_BLUR: 0.0
  GRAY_SCALE: 0.0
  INTERPOLATION: 2
  MIXCUT: 1.0
  MIXCUT_AND_MIXUP: False
  MIXCUT_MINMAX: []
  MIXUP: 0.8
  MIXUP_MODE: batch
  MIXUP_PROB: 1.0
  MIXUP_SWITCH_PROB: 0.5
  RATIO: (0.75, 1.3333333333333333)
  SCALE: (0.08, 1.0)
  TIMM_AUG:
    AUTO_AUGMENT: rand-m9-mstd0.5-inc1
    COLOR_JITTER: 0.4
    HFLIP: 0.5
    INTERPOLATION: bicubic
    RE_COUNT: 1
    RE_MODE: pixel
    RE_PROB: 0.25
    RE_SPLIT: False
    USE_LOADER: True
    USE_TRANSFORM: False
    VFLIP: 0.0
BASE: ['']
CUDNN:
  BENCHMARK: True
  DETERMINISTIC: False
  ENABLED: True
DATASET:
  DATASET: imagenet
  DATA_FORMAT: jpg
  LABELMAP: 
  ROOT: DATASET/imagenet/
  SAMPLER: default
  TARGET_SIZE: -1
  TEST_SET: val
  TEST_TSV_LIST: []
  TRAIN_SET: train
  TRAIN_TSV_LIST: []
DATA_DIR: 
DEBUG:
  DEBUG: False
DIST_BACKEND: nccl
FINETUNE:
  BASE_LR: 0.003
  BATCH_SIZE: 512
  EVAL_EVERY: 3000
  FINETUNE: False
  FROZEN_LAYERS: []
  LR_SCHEDULER:
    DECAY_TYPE: step
  TRAIN_MODE: True
  USE_TRAIN_AUG: False
GPUS: (0,)
INPUT:
  MEAN: [0.485, 0.456, 0.406]
  STD: [0.229, 0.224, 0.225]
LOSS:
  LABEL_SMOOTHING: 0.1
  LOSS: softmax
MODEL:
  INIT_WEIGHTS: True
  NAME: cls_cvt
  NUM_CLASSES: 1000
  PRETRAINED: 
  PRETRAINED_LAYERS: ['*']
  SPEC:
    ATTN_DROP_RATE: [0.0, 0.0, 0.0]
    CLS_TOKEN: [False, False, True]
    DEPTH: [1, 2, 10]
    DIM_EMBED: [64, 192, 384]
    DROP_PATH_RATE: [0.0, 0.0, 0.1]
    DROP_RATE: [0.0, 0.0, 0.0]
    INIT: trunc_norm
    KERNEL_QKV: [3, 3, 3]
    MLP_RATIO: [4.0, 4.0, 4.0]
    NUM_HEADS: [1, 3, 6]
    NUM_STAGES: 3
    PADDING_KV: [1, 1, 1]
    PADDING_Q: [1, 1, 1]
    PATCH_PADDING: [2, 1, 1]
    PATCH_SIZE: [7, 3, 3]
    PATCH_STRIDE: [4, 2, 2]
    POS_EMBED: [False, False, False]
    QKV_BIAS: [True, True, True]
    QKV_PROJ_METHOD: ['dw_bn', 'dw_bn', 'dw_bn']
    STRIDE_KV: [2, 2, 2]
    STRIDE_Q: [1, 1, 1]
MODEL_SUMMARY: False
MULTIPROCESSING_DISTRIBUTED: True
NAME: cvt-13-224x224
OUTPUT_DIR: OUTPUT/
PIN_MEMORY: True
PRINT_FREQ: 500
RANK: 0
TEST:
  BATCH_SIZE_PER_GPU: 32
  CENTER_CROP: True
  IMAGE_SIZE: [224, 224]
  INTERPOLATION: 3
  MODEL_FILE: 
  REAL_LABELS: False
  VALID_LABELS: 
TRAIN:
  AUTO_RESUME: True
  BATCH_SIZE_PER_GPU: 64
  BEGIN_EPOCH: 0
  CHECKPOINT: 
  CLIP_GRAD_NORM: 0.0
  DETECT_ANOMALY: False
  END_EPOCH: 2
  EVAL_BEGIN_EPOCH: 0
  GAMMA1: 0.99
  GAMMA2: 0.0
  IMAGE_SIZE: [224, 224]
  LR: 0.00025
  LR_SCHEDULER:
    ARGS:
      cooldown_epochs: 10
      decay_rate: 0.1
      epochs: 2
      min_lr: 1e-05
      sched: cosine
      warmup_epochs: 5
      warmup_lr: 1e-06
    METHOD: timm
  MOMENTUM: 0.9
  NESTEROV: True
  OPTIMIZER: adamW
  OPTIMIZER_ARGS:
    
  SAVE_ALL_MODELS: False
  SCALE_LR: True
  SHUFFLE: True
  WD: 0.05
  WITHOUT_WD_LIST: ['bn', 'bias', 'ln']
VERBOSE: True
WORKERS: 6
2025-01-22 13:08:02,720:[P:12224]:Rank[0/1] => using 1 GPUs
2025-01-22 13:08:02,720:[P:12224]:Rank[0/1] => saving config into: OUTPUT/imagenet/cvt-13-224x224/config.yaml
2025-01-22 13:08:02,732:[P:12224]:Rank[0/1] => init weight of Linear from trunc norm
2025-01-22 13:08:02,733:[P:12224]:Rank[0/1] => init bias of Linear to zeros
2025-01-22 13:08:02,733:[P:12224]:Rank[0/1] => init weight of Linear from trunc norm
2025-01-22 13:08:02,733:[P:12224]:Rank[0/1] => init bias of Linear to zeros
2025-01-22 13:08:02,733:[P:12224]:Rank[0/1] => init weight of Linear from trunc norm
2025-01-22 13:08:02,733:[P:12224]:Rank[0/1] => init bias of Linear to zeros
2025-01-22 13:08:02,733:[P:12224]:Rank[0/1] => init weight of Linear from trunc norm
2025-01-22 13:08:02,733:[P:12224]:Rank[0/1] => init bias of Linear to zeros
2025-01-22 13:08:02,734:[P:12224]:Rank[0/1] => init weight of Linear from trunc norm
2025-01-22 13:08:02,734:[P:12224]:Rank[0/1] => init bias of Linear to zeros
2025-01-22 13:08:02,734:[P:12224]:Rank[0/1] => init weight of Linear from trunc norm
2025-01-22 13:08:02,734:[P:12224]:Rank[0/1] => init bias of Linear to zeros
2025-01-22 13:08:02,744:[P:12224]:Rank[0/1] => init weight of Linear from trunc norm
2025-01-22 13:08:02,745:[P:12224]:Rank[0/1] => init bias of Linear to zeros
2025-01-22 13:08:02,745:[P:12224]:Rank[0/1] => init weight of Linear from trunc norm
2025-01-22 13:08:02,746:[P:12224]:Rank[0/1] => init bias of Linear to zeros
2025-01-22 13:08:02,746:[P:12224]:Rank[0/1] => init weight of Linear from trunc norm
2025-01-22 13:08:02,746:[P:12224]:Rank[0/1] => init bias of Linear to zeros
2025-01-22 13:08:02,746:[P:12224]:Rank[0/1] => init weight of Linear from trunc norm
2025-01-22 13:08:02,747:[P:12224]:Rank[0/1] => init bias of Linear to zeros
2025-01-22 13:08:02,747:[P:12224]:Rank[0/1] => init weight of Linear from trunc norm
2025-01-22 13:08:02,748:[P:12224]:Rank[0/1] => init bias of Linear to zeros
2025-01-22 13:08:02,748:[P:12224]:Rank[0/1] => init weight of Linear from trunc norm
2025-01-22 13:08:02,749:[P:12224]:Rank[0/1] => init bias of Linear to zeros
2025-01-22 13:08:02,749:[P:12224]:Rank[0/1] => init weight of Linear from trunc norm
2025-01-22 13:08:02,749:[P:12224]:Rank[0/1] => init bias of Linear to zeros
2025-01-22 13:08:02,749:[P:12224]:Rank[0/1] => init weight of Linear from trunc norm
2025-01-22 13:08:02,750:[P:12224]:Rank[0/1] => init bias of Linear to zeros
2025-01-22 13:08:02,750:[P:12224]:Rank[0/1] => init weight of Linear from trunc norm
2025-01-22 13:08:02,751:[P:12224]:Rank[0/1] => init bias of Linear to zeros
2025-01-22 13:08:02,751:[P:12224]:Rank[0/1] => init weight of Linear from trunc norm
2025-01-22 13:08:02,751:[P:12224]:Rank[0/1] => init bias of Linear to zeros
2025-01-22 13:08:02,752:[P:12224]:Rank[0/1] => init weight of Linear from trunc norm
2025-01-22 13:08:02,753:[P:12224]:Rank[0/1] => init bias of Linear to zeros
2025-01-22 13:08:02,753:[P:12224]:Rank[0/1] => init weight of Linear from trunc norm
2025-01-22 13:08:02,754:[P:12224]:Rank[0/1] => init bias of Linear to zeros
2025-01-22 13:08:02,887:[P:12224]:Rank[0/1] => init weight of Linear from trunc norm
2025-01-22 13:08:02,888:[P:12224]:Rank[0/1] => init bias of Linear to zeros
2025-01-22 13:08:02,888:[P:12224]:Rank[0/1] => init weight of Linear from trunc norm
2025-01-22 13:08:02,889:[P:12224]:Rank[0/1] => init bias of Linear to zeros
2025-01-22 13:08:02,889:[P:12224]:Rank[0/1] => init weight of Linear from trunc norm
2025-01-22 13:08:02,890:[P:12224]:Rank[0/1] => init bias of Linear to zeros
2025-01-22 13:08:02,890:[P:12224]:Rank[0/1] => init weight of Linear from trunc norm
2025-01-22 13:08:02,891:[P:12224]:Rank[0/1] => init bias of Linear to zeros
2025-01-22 13:08:02,891:[P:12224]:Rank[0/1] => init weight of Linear from trunc norm
2025-01-22 13:08:02,895:[P:12224]:Rank[0/1] => init bias of Linear to zeros
2025-01-22 13:08:02,895:[P:12224]:Rank[0/1] => init weight of Linear from trunc norm
2025-01-22 13:08:02,899:[P:12224]:Rank[0/1] => init bias of Linear to zeros
2025-01-22 13:08:02,899:[P:12224]:Rank[0/1] => init weight of Linear from trunc norm
2025-01-22 13:08:02,901:[P:12224]:Rank[0/1] => init bias of Linear to zeros
2025-01-22 13:08:02,901:[P:12224]:Rank[0/1] => init weight of Linear from trunc norm
2025-01-22 13:08:02,902:[P:12224]:Rank[0/1] => init bias of Linear to zeros
2025-01-22 13:08:02,902:[P:12224]:Rank[0/1] => init weight of Linear from trunc norm
2025-01-22 13:08:02,904:[P:12224]:Rank[0/1] => init bias of Linear to zeros
2025-01-22 13:08:02,904:[P:12224]:Rank[0/1] => init weight of Linear from trunc norm
2025-01-22 13:08:02,905:[P:12224]:Rank[0/1] => init bias of Linear to zeros
2025-01-22 13:08:02,905:[P:12224]:Rank[0/1] => init weight of Linear from trunc norm
2025-01-22 13:08:02,908:[P:12224]:Rank[0/1] => init bias of Linear to zeros
2025-01-22 13:08:02,908:[P:12224]:Rank[0/1] => init weight of Linear from trunc norm
2025-01-22 13:08:02,912:[P:12224]:Rank[0/1] => init bias of Linear to zeros
2025-01-22 13:08:02,912:[P:12224]:Rank[0/1] => init weight of Linear from trunc norm
2025-01-22 13:08:02,914:[P:12224]:Rank[0/1] => init bias of Linear to zeros
2025-01-22 13:08:02,914:[P:12224]:Rank[0/1] => init weight of Linear from trunc norm
2025-01-22 13:08:02,915:[P:12224]:Rank[0/1] => init bias of Linear to zeros
2025-01-22 13:08:02,915:[P:12224]:Rank[0/1] => init weight of Linear from trunc norm
2025-01-22 13:08:02,917:[P:12224]:Rank[0/1] => init bias of Linear to zeros
2025-01-22 13:08:02,917:[P:12224]:Rank[0/1] => init weight of Linear from trunc norm
2025-01-22 13:08:02,918:[P:12224]:Rank[0/1] => init bias of Linear to zeros
2025-01-22 13:08:02,919:[P:12224]:Rank[0/1] => init weight of Linear from trunc norm
2025-01-22 13:08:02,923:[P:12224]:Rank[0/1] => init bias of Linear to zeros
2025-01-22 13:08:02,924:[P:12224]:Rank[0/1] => init weight of Linear from trunc norm
2025-01-22 13:08:02,928:[P:12224]:Rank[0/1] => init bias of Linear to zeros
2025-01-22 13:08:02,928:[P:12224]:Rank[0/1] => init weight of Linear from trunc norm
2025-01-22 13:08:02,929:[P:12224]:Rank[0/1] => init bias of Linear to zeros
2025-01-22 13:08:02,929:[P:12224]:Rank[0/1] => init weight of Linear from trunc norm
2025-01-22 13:08:02,930:[P:12224]:Rank[0/1] => init bias of Linear to zeros
2025-01-22 13:08:02,931:[P:12224]:Rank[0/1] => init weight of Linear from trunc norm
2025-01-22 13:08:02,932:[P:12224]:Rank[0/1] => init bias of Linear to zeros
2025-01-22 13:08:02,932:[P:12224]:Rank[0/1] => init weight of Linear from trunc norm
2025-01-22 13:08:02,933:[P:12224]:Rank[0/1] => init bias of Linear to zeros
2025-01-22 13:08:02,934:[P:12224]:Rank[0/1] => init weight of Linear from trunc norm
2025-01-22 13:08:02,937:[P:12224]:Rank[0/1] => init bias of Linear to zeros
2025-01-22 13:08:02,938:[P:12224]:Rank[0/1] => init weight of Linear from trunc norm
2025-01-22 13:08:02,942:[P:12224]:Rank[0/1] => init bias of Linear to zeros
2025-01-22 13:08:02,942:[P:12224]:Rank[0/1] => init weight of Linear from trunc norm
2025-01-22 13:08:02,943:[P:12224]:Rank[0/1] => init bias of Linear to zeros
2025-01-22 13:08:02,943:[P:12224]:Rank[0/1] => init weight of Linear from trunc norm
2025-01-22 13:08:02,945:[P:12224]:Rank[0/1] => init bias of Linear to zeros
2025-01-22 13:08:02,945:[P:12224]:Rank[0/1] => init weight of Linear from trunc norm
2025-01-22 13:08:02,946:[P:12224]:Rank[0/1] => init bias of Linear to zeros
2025-01-22 13:08:02,946:[P:12224]:Rank[0/1] => init weight of Linear from trunc norm
2025-01-22 13:08:02,947:[P:12224]:Rank[0/1] => init bias of Linear to zeros
2025-01-22 13:08:02,948:[P:12224]:Rank[0/1] => init weight of Linear from trunc norm
2025-01-22 13:08:02,951:[P:12224]:Rank[0/1] => init bias of Linear to zeros
2025-01-22 13:08:02,952:[P:12224]:Rank[0/1] => init weight of Linear from trunc norm
2025-01-22 13:08:02,955:[P:12224]:Rank[0/1] => init bias of Linear to zeros
2025-01-22 13:08:02,956:[P:12224]:Rank[0/1] => init weight of Linear from trunc norm
2025-01-22 13:08:02,957:[P:12224]:Rank[0/1] => init bias of Linear to zeros
2025-01-22 13:08:02,957:[P:12224]:Rank[0/1] => init weight of Linear from trunc norm
2025-01-22 13:08:02,958:[P:12224]:Rank[0/1] => init bias of Linear to zeros
2025-01-22 13:08:02,958:[P:12224]:Rank[0/1] => init weight of Linear from trunc norm
2025-01-22 13:08:02,959:[P:12224]:Rank[0/1] => init bias of Linear to zeros
2025-01-22 13:08:02,959:[P:12224]:Rank[0/1] => init weight of Linear from trunc norm
2025-01-22 13:08:02,960:[P:12224]:Rank[0/1] => init bias of Linear to zeros
2025-01-22 13:08:02,960:[P:12224]:Rank[0/1] => init weight of Linear from trunc norm
2025-01-22 13:08:02,964:[P:12224]:Rank[0/1] => init bias of Linear to zeros
2025-01-22 13:08:02,964:[P:12224]:Rank[0/1] => init weight of Linear from trunc norm
2025-01-22 13:08:02,969:[P:12224]:Rank[0/1] => init bias of Linear to zeros
2025-01-22 13:08:02,969:[P:12224]:Rank[0/1] => init weight of Linear from trunc norm
2025-01-22 13:08:02,971:[P:12224]:Rank[0/1] => init bias of Linear to zeros
2025-01-22 13:08:02,971:[P:12224]:Rank[0/1] => init weight of Linear from trunc norm
2025-01-22 13:08:02,972:[P:12224]:Rank[0/1] => init bias of Linear to zeros
2025-01-22 13:08:02,972:[P:12224]:Rank[0/1] => init weight of Linear from trunc norm
2025-01-22 13:08:02,973:[P:12224]:Rank[0/1] => init bias of Linear to zeros
2025-01-22 13:08:02,973:[P:12224]:Rank[0/1] => init weight of Linear from trunc norm
2025-01-22 13:08:02,974:[P:12224]:Rank[0/1] => init bias of Linear to zeros
2025-01-22 13:08:02,974:[P:12224]:Rank[0/1] => init weight of Linear from trunc norm
2025-01-22 13:08:02,978:[P:12224]:Rank[0/1] => init bias of Linear to zeros
2025-01-22 13:08:02,978:[P:12224]:Rank[0/1] => init weight of Linear from trunc norm
2025-01-22 13:08:02,982:[P:12224]:Rank[0/1] => init bias of Linear to zeros
2025-01-22 13:08:02,982:[P:12224]:Rank[0/1] => init weight of Linear from trunc norm
2025-01-22 13:08:02,983:[P:12224]:Rank[0/1] => init bias of Linear to zeros
2025-01-22 13:08:02,983:[P:12224]:Rank[0/1] => init weight of Linear from trunc norm
2025-01-22 13:08:02,984:[P:12224]:Rank[0/1] => init bias of Linear to zeros
2025-01-22 13:08:02,985:[P:12224]:Rank[0/1] => init weight of Linear from trunc norm
2025-01-22 13:08:02,986:[P:12224]:Rank[0/1] => init bias of Linear to zeros
2025-01-22 13:08:02,986:[P:12224]:Rank[0/1] => init weight of Linear from trunc norm
2025-01-22 13:08:02,987:[P:12224]:Rank[0/1] => init bias of Linear to zeros
2025-01-22 13:08:02,987:[P:12224]:Rank[0/1] => init weight of Linear from trunc norm
2025-01-22 13:08:02,991:[P:12224]:Rank[0/1] => init bias of Linear to zeros
2025-01-22 13:08:02,991:[P:12224]:Rank[0/1] => init weight of Linear from trunc norm
2025-01-22 13:08:02,995:[P:12224]:Rank[0/1] => init bias of Linear to zeros
2025-01-22 13:08:02,995:[P:12224]:Rank[0/1] => init weight of Linear from trunc norm
2025-01-22 13:08:02,996:[P:12224]:Rank[0/1] => init bias of Linear to zeros
2025-01-22 13:08:02,997:[P:12224]:Rank[0/1] => init weight of Linear from trunc norm
2025-01-22 13:08:02,998:[P:12224]:Rank[0/1] => init bias of Linear to zeros
2025-01-22 13:08:02,998:[P:12224]:Rank[0/1] => init weight of Linear from trunc norm
2025-01-22 13:08:02,999:[P:12224]:Rank[0/1] => init bias of Linear to zeros
2025-01-22 13:08:02,999:[P:12224]:Rank[0/1] => init weight of Linear from trunc norm
2025-01-22 13:08:02,999:[P:12224]:Rank[0/1] => init bias of Linear to zeros
2025-01-22 13:08:03,000:[P:12224]:Rank[0/1] => init weight of Linear from trunc norm
2025-01-22 13:08:03,003:[P:12224]:Rank[0/1] => init bias of Linear to zeros
2025-01-22 13:08:03,003:[P:12224]:Rank[0/1] => init weight of Linear from trunc norm
2025-01-22 13:08:03,007:[P:12224]:Rank[0/1] => init bias of Linear to zeros
2025-01-22 13:08:03,007:[P:12224]:Rank[0/1] => init weight of Linear from trunc norm
2025-01-22 13:08:03,008:[P:12224]:Rank[0/1] => init bias of Linear to zeros
2025-01-22 13:08:03,008:[P:12224]:Rank[0/1] => init weight of Linear from trunc norm
2025-01-22 13:08:03,009:[P:12224]:Rank[0/1] => init bias of Linear to zeros
2025-01-22 13:08:03,009:[P:12224]:Rank[0/1] => init weight of Linear from trunc norm
2025-01-22 13:08:03,010:[P:12224]:Rank[0/1] => init bias of Linear to zeros
2025-01-22 13:08:03,010:[P:12224]:Rank[0/1] => init weight of Linear from trunc norm
2025-01-22 13:08:03,011:[P:12224]:Rank[0/1] => init bias of Linear to zeros
2025-01-22 13:08:03,011:[P:12224]:Rank[0/1] => init weight of Linear from trunc norm
2025-01-22 13:08:03,014:[P:12224]:Rank[0/1] => init bias of Linear to zeros
2025-01-22 13:08:03,014:[P:12224]:Rank[0/1] => init weight of Linear from trunc norm
2025-01-22 13:08:03,017:[P:12224]:Rank[0/1] => init bias of Linear to zeros
2025-01-22 13:08:31,533:[P:12224]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 3136, 64])
2025-01-22 13:08:31,533:[P:12224]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 13:08:31,533:[P:12224]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 13:08:31,533:[P:12224]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 3136, 64])
2025-01-22 13:08:31,534:[P:12224]:Rank[0/1] Module: VisionTransformer, Input[0] Shape: torch.Size([64, 3, 224, 224])
2025-01-22 13:08:31,534:[P:12224]:Rank[0/1] Module: VisionTransformer, Output[0] Shape: torch.Size([64, 64, 56, 56])
2025-01-22 13:08:31,534:[P:12224]:Rank[0/1] Module: VisionTransformer, Output[1] is of type <class 'NoneType'>
2025-01-22 13:08:31,770:[P:12224]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 784, 192])
2025-01-22 13:08:31,770:[P:12224]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 13:08:31,770:[P:12224]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 13:08:31,770:[P:12224]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 784, 192])
2025-01-22 13:08:31,774:[P:12224]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 784, 192])
2025-01-22 13:08:31,774:[P:12224]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 13:08:31,774:[P:12224]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 13:08:31,774:[P:12224]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 784, 192])
2025-01-22 13:08:31,774:[P:12224]:Rank[0/1] Module: VisionTransformer, Input[0] Shape: torch.Size([64, 64, 56, 56])
2025-01-22 13:08:31,774:[P:12224]:Rank[0/1] Module: VisionTransformer, Output[0] Shape: torch.Size([64, 192, 28, 28])
2025-01-22 13:08:31,774:[P:12224]:Rank[0/1] Module: VisionTransformer, Output[1] is of type <class 'NoneType'>
2025-01-22 13:08:32,003:[P:12224]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 13:08:32,003:[P:12224]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 13:08:32,003:[P:12224]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 13:08:32,003:[P:12224]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 13:08:32,008:[P:12224]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 13:08:32,008:[P:12224]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 13:08:32,008:[P:12224]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 13:08:32,008:[P:12224]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 13:08:32,012:[P:12224]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 13:08:32,013:[P:12224]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 13:08:32,013:[P:12224]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 13:08:32,013:[P:12224]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 13:08:32,017:[P:12224]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 13:08:32,017:[P:12224]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 13:08:32,017:[P:12224]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 13:08:32,017:[P:12224]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 13:08:32,022:[P:12224]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 13:08:32,022:[P:12224]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 13:08:32,022:[P:12224]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 13:08:32,022:[P:12224]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 13:08:32,028:[P:12224]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 13:08:32,028:[P:12224]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 13:08:32,028:[P:12224]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 13:08:32,028:[P:12224]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 13:08:32,032:[P:12224]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 13:08:32,033:[P:12224]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 13:08:32,033:[P:12224]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 13:08:32,033:[P:12224]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 13:08:32,037:[P:12224]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 13:08:32,037:[P:12224]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 13:08:32,037:[P:12224]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 13:08:32,037:[P:12224]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 13:08:32,042:[P:12224]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 13:08:32,042:[P:12224]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 13:08:32,042:[P:12224]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 13:08:32,042:[P:12224]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 13:08:32,046:[P:12224]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 13:08:32,046:[P:12224]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 13:08:32,046:[P:12224]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 13:08:32,046:[P:12224]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 13:08:32,047:[P:12224]:Rank[0/1] Module: VisionTransformer, Input[0] Shape: torch.Size([64, 192, 28, 28])
2025-01-22 13:08:32,047:[P:12224]:Rank[0/1] Module: VisionTransformer, Output[0] Shape: torch.Size([64, 384, 14, 14])
2025-01-22 13:08:32,047:[P:12224]:Rank[0/1] Module: VisionTransformer, Output[1] Shape: torch.Size([64, 1, 384])
2025-01-22 13:08:32,068:[P:12224]:Rank[0/1] => ConvolutionalVisionTransformer(
  (stage0): VisionTransformer(
    (patch_embed): ConvEmbed(
      (proj): Conv2d(3, 64, kernel_size=(7, 7), stride=(4, 4), padding=(2, 2))
      (norm): LayerNorm((64,), eps=1e-05, elementwise_affine=True)
    )
    (pos_drop): Dropout(p=0.0, inplace=False)
    (blocks): ModuleList(
      (0): Block(
        (norm1): LayerNorm((64,), eps=1e-05, elementwise_affine=True)
        (attn): Attention(
          (conv_proj_q): Sequential(
            (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64, bias=False)
            (bn): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (rearrage): Rearrange('b c h w -> b (h w) c')
          )
          (conv_proj_k): Sequential(
            (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=64, bias=False)
            (bn): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (rearrage): Rearrange('b c h w -> b (h w) c')
          )
          (conv_proj_v): Sequential(
            (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=64, bias=False)
            (bn): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (rearrage): Rearrange('b c h w -> b (h w) c')
          )
          (proj_q): Linear(in_features=64, out_features=64, bias=True)
          (proj_k): Linear(in_features=64, out_features=64, bias=True)
          (proj_v): Linear(in_features=64, out_features=64, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=64, out_features=64, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
        )
        (drop_path): Identity()
        (norm2): LayerNorm((64,), eps=1e-05, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=64, out_features=256, bias=True)
          (act): QuickGELU()
          (fc2): Linear(in_features=256, out_features=64, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
        )
      )
    )
  )
  (stage1): VisionTransformer(
    (patch_embed): ConvEmbed(
      (proj): Conv2d(64, 192, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
      (norm): LayerNorm((192,), eps=1e-05, elementwise_affine=True)
    )
    (pos_drop): Dropout(p=0.0, inplace=False)
    (blocks): ModuleList(
      (0): Block(
        (norm1): LayerNorm((192,), eps=1e-05, elementwise_affine=True)
        (attn): Attention(
          (conv_proj_q): Sequential(
            (conv): Conv2d(192, 192, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=192, bias=False)
            (bn): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (rearrage): Rearrange('b c h w -> b (h w) c')
          )
          (conv_proj_k): Sequential(
            (conv): Conv2d(192, 192, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=192, bias=False)
            (bn): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (rearrage): Rearrange('b c h w -> b (h w) c')
          )
          (conv_proj_v): Sequential(
            (conv): Conv2d(192, 192, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=192, bias=False)
            (bn): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (rearrage): Rearrange('b c h w -> b (h w) c')
          )
          (proj_q): Linear(in_features=192, out_features=192, bias=True)
          (proj_k): Linear(in_features=192, out_features=192, bias=True)
          (proj_v): Linear(in_features=192, out_features=192, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=192, out_features=192, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
        )
        (drop_path): Identity()
        (norm2): LayerNorm((192,), eps=1e-05, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=192, out_features=768, bias=True)
          (act): QuickGELU()
          (fc2): Linear(in_features=768, out_features=192, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
        )
      )
      (1): Block(
        (norm1): LayerNorm((192,), eps=1e-05, elementwise_affine=True)
        (attn): Attention(
          (conv_proj_q): Sequential(
            (conv): Conv2d(192, 192, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=192, bias=False)
            (bn): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (rearrage): Rearrange('b c h w -> b (h w) c')
          )
          (conv_proj_k): Sequential(
            (conv): Conv2d(192, 192, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=192, bias=False)
            (bn): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (rearrage): Rearrange('b c h w -> b (h w) c')
          )
          (conv_proj_v): Sequential(
            (conv): Conv2d(192, 192, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=192, bias=False)
            (bn): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (rearrage): Rearrange('b c h w -> b (h w) c')
          )
          (proj_q): Linear(in_features=192, out_features=192, bias=True)
          (proj_k): Linear(in_features=192, out_features=192, bias=True)
          (proj_v): Linear(in_features=192, out_features=192, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=192, out_features=192, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
        )
        (drop_path): Identity()
        (norm2): LayerNorm((192,), eps=1e-05, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=192, out_features=768, bias=True)
          (act): QuickGELU()
          (fc2): Linear(in_features=768, out_features=192, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
        )
      )
    )
  )
  (stage2): VisionTransformer(
    (patch_embed): ConvEmbed(
      (proj): Conv2d(192, 384, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
      (norm): LayerNorm((384,), eps=1e-05, elementwise_affine=True)
    )
    (pos_drop): Dropout(p=0.0, inplace=False)
    (blocks): ModuleList(
      (0): Block(
        (norm1): LayerNorm((384,), eps=1e-05, elementwise_affine=True)
        (attn): Attention(
          (conv_proj_q): Sequential(
            (conv): Conv2d(384, 384, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=384, bias=False)
            (bn): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (rearrage): Rearrange('b c h w -> b (h w) c')
          )
          (conv_proj_k): Sequential(
            (conv): Conv2d(384, 384, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=384, bias=False)
            (bn): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (rearrage): Rearrange('b c h w -> b (h w) c')
          )
          (conv_proj_v): Sequential(
            (conv): Conv2d(384, 384, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=384, bias=False)
            (bn): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (rearrage): Rearrange('b c h w -> b (h w) c')
          )
          (proj_q): Linear(in_features=384, out_features=384, bias=True)
          (proj_k): Linear(in_features=384, out_features=384, bias=True)
          (proj_v): Linear(in_features=384, out_features=384, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=384, out_features=384, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
        )
        (drop_path): Identity()
        (norm2): LayerNorm((384,), eps=1e-05, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=384, out_features=1536, bias=True)
          (act): QuickGELU()
          (fc2): Linear(in_features=1536, out_features=384, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
        )
      )
      (1): Block(
        (norm1): LayerNorm((384,), eps=1e-05, elementwise_affine=True)
        (attn): Attention(
          (conv_proj_q): Sequential(
            (conv): Conv2d(384, 384, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=384, bias=False)
            (bn): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (rearrage): Rearrange('b c h w -> b (h w) c')
          )
          (conv_proj_k): Sequential(
            (conv): Conv2d(384, 384, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=384, bias=False)
            (bn): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (rearrage): Rearrange('b c h w -> b (h w) c')
          )
          (conv_proj_v): Sequential(
            (conv): Conv2d(384, 384, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=384, bias=False)
            (bn): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (rearrage): Rearrange('b c h w -> b (h w) c')
          )
          (proj_q): Linear(in_features=384, out_features=384, bias=True)
          (proj_k): Linear(in_features=384, out_features=384, bias=True)
          (proj_v): Linear(in_features=384, out_features=384, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=384, out_features=384, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
        )
        (drop_path): DropPath()
        (norm2): LayerNorm((384,), eps=1e-05, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=384, out_features=1536, bias=True)
          (act): QuickGELU()
          (fc2): Linear(in_features=1536, out_features=384, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
        )
      )
      (2): Block(
        (norm1): LayerNorm((384,), eps=1e-05, elementwise_affine=True)
        (attn): Attention(
          (conv_proj_q): Sequential(
            (conv): Conv2d(384, 384, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=384, bias=False)
            (bn): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (rearrage): Rearrange('b c h w -> b (h w) c')
          )
          (conv_proj_k): Sequential(
            (conv): Conv2d(384, 384, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=384, bias=False)
            (bn): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (rearrage): Rearrange('b c h w -> b (h w) c')
          )
          (conv_proj_v): Sequential(
            (conv): Conv2d(384, 384, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=384, bias=False)
            (bn): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (rearrage): Rearrange('b c h w -> b (h w) c')
          )
          (proj_q): Linear(in_features=384, out_features=384, bias=True)
          (proj_k): Linear(in_features=384, out_features=384, bias=True)
          (proj_v): Linear(in_features=384, out_features=384, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=384, out_features=384, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
        )
        (drop_path): DropPath()
        (norm2): LayerNorm((384,), eps=1e-05, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=384, out_features=1536, bias=True)
          (act): QuickGELU()
          (fc2): Linear(in_features=1536, out_features=384, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
        )
      )
      (3): Block(
        (norm1): LayerNorm((384,), eps=1e-05, elementwise_affine=True)
        (attn): Attention(
          (conv_proj_q): Sequential(
            (conv): Conv2d(384, 384, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=384, bias=False)
            (bn): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (rearrage): Rearrange('b c h w -> b (h w) c')
          )
          (conv_proj_k): Sequential(
            (conv): Conv2d(384, 384, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=384, bias=False)
            (bn): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (rearrage): Rearrange('b c h w -> b (h w) c')
          )
          (conv_proj_v): Sequential(
            (conv): Conv2d(384, 384, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=384, bias=False)
            (bn): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (rearrage): Rearrange('b c h w -> b (h w) c')
          )
          (proj_q): Linear(in_features=384, out_features=384, bias=True)
          (proj_k): Linear(in_features=384, out_features=384, bias=True)
          (proj_v): Linear(in_features=384, out_features=384, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=384, out_features=384, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
        )
        (drop_path): DropPath()
        (norm2): LayerNorm((384,), eps=1e-05, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=384, out_features=1536, bias=True)
          (act): QuickGELU()
          (fc2): Linear(in_features=1536, out_features=384, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
        )
      )
      (4): Block(
        (norm1): LayerNorm((384,), eps=1e-05, elementwise_affine=True)
        (attn): Attention(
          (conv_proj_q): Sequential(
            (conv): Conv2d(384, 384, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=384, bias=False)
            (bn): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (rearrage): Rearrange('b c h w -> b (h w) c')
          )
          (conv_proj_k): Sequential(
            (conv): Conv2d(384, 384, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=384, bias=False)
            (bn): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (rearrage): Rearrange('b c h w -> b (h w) c')
          )
          (conv_proj_v): Sequential(
            (conv): Conv2d(384, 384, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=384, bias=False)
            (bn): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (rearrage): Rearrange('b c h w -> b (h w) c')
          )
          (proj_q): Linear(in_features=384, out_features=384, bias=True)
          (proj_k): Linear(in_features=384, out_features=384, bias=True)
          (proj_v): Linear(in_features=384, out_features=384, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=384, out_features=384, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
        )
        (drop_path): DropPath()
        (norm2): LayerNorm((384,), eps=1e-05, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=384, out_features=1536, bias=True)
          (act): QuickGELU()
          (fc2): Linear(in_features=1536, out_features=384, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
        )
      )
      (5): Block(
        (norm1): LayerNorm((384,), eps=1e-05, elementwise_affine=True)
        (attn): Attention(
          (conv_proj_q): Sequential(
            (conv): Conv2d(384, 384, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=384, bias=False)
            (bn): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (rearrage): Rearrange('b c h w -> b (h w) c')
          )
          (conv_proj_k): Sequential(
            (conv): Conv2d(384, 384, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=384, bias=False)
            (bn): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (rearrage): Rearrange('b c h w -> b (h w) c')
          )
          (conv_proj_v): Sequential(
            (conv): Conv2d(384, 384, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=384, bias=False)
            (bn): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (rearrage): Rearrange('b c h w -> b (h w) c')
          )
          (proj_q): Linear(in_features=384, out_features=384, bias=True)
          (proj_k): Linear(in_features=384, out_features=384, bias=True)
          (proj_v): Linear(in_features=384, out_features=384, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=384, out_features=384, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
        )
        (drop_path): DropPath()
        (norm2): LayerNorm((384,), eps=1e-05, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=384, out_features=1536, bias=True)
          (act): QuickGELU()
          (fc2): Linear(in_features=1536, out_features=384, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
        )
      )
      (6): Block(
        (norm1): LayerNorm((384,), eps=1e-05, elementwise_affine=True)
        (attn): Attention(
          (conv_proj_q): Sequential(
            (conv): Conv2d(384, 384, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=384, bias=False)
            (bn): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (rearrage): Rearrange('b c h w -> b (h w) c')
          )
          (conv_proj_k): Sequential(
            (conv): Conv2d(384, 384, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=384, bias=False)
            (bn): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (rearrage): Rearrange('b c h w -> b (h w) c')
          )
          (conv_proj_v): Sequential(
            (conv): Conv2d(384, 384, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=384, bias=False)
            (bn): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (rearrage): Rearrange('b c h w -> b (h w) c')
          )
          (proj_q): Linear(in_features=384, out_features=384, bias=True)
          (proj_k): Linear(in_features=384, out_features=384, bias=True)
          (proj_v): Linear(in_features=384, out_features=384, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=384, out_features=384, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
        )
        (drop_path): DropPath()
        (norm2): LayerNorm((384,), eps=1e-05, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=384, out_features=1536, bias=True)
          (act): QuickGELU()
          (fc2): Linear(in_features=1536, out_features=384, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
        )
      )
      (7): Block(
        (norm1): LayerNorm((384,), eps=1e-05, elementwise_affine=True)
        (attn): Attention(
          (conv_proj_q): Sequential(
            (conv): Conv2d(384, 384, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=384, bias=False)
            (bn): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (rearrage): Rearrange('b c h w -> b (h w) c')
          )
          (conv_proj_k): Sequential(
            (conv): Conv2d(384, 384, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=384, bias=False)
            (bn): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (rearrage): Rearrange('b c h w -> b (h w) c')
          )
          (conv_proj_v): Sequential(
            (conv): Conv2d(384, 384, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=384, bias=False)
            (bn): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (rearrage): Rearrange('b c h w -> b (h w) c')
          )
          (proj_q): Linear(in_features=384, out_features=384, bias=True)
          (proj_k): Linear(in_features=384, out_features=384, bias=True)
          (proj_v): Linear(in_features=384, out_features=384, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=384, out_features=384, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
        )
        (drop_path): DropPath()
        (norm2): LayerNorm((384,), eps=1e-05, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=384, out_features=1536, bias=True)
          (act): QuickGELU()
          (fc2): Linear(in_features=1536, out_features=384, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
        )
      )
      (8): Block(
        (norm1): LayerNorm((384,), eps=1e-05, elementwise_affine=True)
        (attn): Attention(
          (conv_proj_q): Sequential(
            (conv): Conv2d(384, 384, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=384, bias=False)
            (bn): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (rearrage): Rearrange('b c h w -> b (h w) c')
          )
          (conv_proj_k): Sequential(
            (conv): Conv2d(384, 384, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=384, bias=False)
            (bn): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (rearrage): Rearrange('b c h w -> b (h w) c')
          )
          (conv_proj_v): Sequential(
            (conv): Conv2d(384, 384, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=384, bias=False)
            (bn): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (rearrage): Rearrange('b c h w -> b (h w) c')
          )
          (proj_q): Linear(in_features=384, out_features=384, bias=True)
          (proj_k): Linear(in_features=384, out_features=384, bias=True)
          (proj_v): Linear(in_features=384, out_features=384, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=384, out_features=384, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
        )
        (drop_path): DropPath()
        (norm2): LayerNorm((384,), eps=1e-05, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=384, out_features=1536, bias=True)
          (act): QuickGELU()
          (fc2): Linear(in_features=1536, out_features=384, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
        )
      )
      (9): Block(
        (norm1): LayerNorm((384,), eps=1e-05, elementwise_affine=True)
        (attn): Attention(
          (conv_proj_q): Sequential(
            (conv): Conv2d(384, 384, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=384, bias=False)
            (bn): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (rearrage): Rearrange('b c h w -> b (h w) c')
          )
          (conv_proj_k): Sequential(
            (conv): Conv2d(384, 384, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=384, bias=False)
            (bn): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (rearrage): Rearrange('b c h w -> b (h w) c')
          )
          (conv_proj_v): Sequential(
            (conv): Conv2d(384, 384, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=384, bias=False)
            (bn): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (rearrage): Rearrange('b c h w -> b (h w) c')
          )
          (proj_q): Linear(in_features=384, out_features=384, bias=True)
          (proj_k): Linear(in_features=384, out_features=384, bias=True)
          (proj_v): Linear(in_features=384, out_features=384, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=384, out_features=384, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
        )
        (drop_path): DropPath()
        (norm2): LayerNorm((384,), eps=1e-05, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=384, out_features=1536, bias=True)
          (act): QuickGELU()
          (fc2): Linear(in_features=1536, out_features=384, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
        )
      )
    )
  )
  (norm): LayerNorm((384,), eps=1e-05, elementwise_affine=True)
  (head): Linear(in_features=384, out_features=1000, bias=True)
)
2025-01-22 13:08:32,070:[P:12224]:Rank[0/1] Trainable Model Total Parameter: 	20.0M
2025-01-22 13:08:32,086:[P:12224]:Rank[0/1] => use timm loader for training
2025-01-22 13:08:32,249:[P:12224]:Rank[0/1] => start training
2025-01-22 13:08:32,249:[P:12224]:Rank[0/1] => Epoch[0]: epoch start
2025-01-22 13:08:32,249:[P:12224]:Rank[0/1] => Epoch[0]: train start
2025-01-22 13:08:32,250:[P:12224]:Rank[0/1] => switch to train mode
2025-01-22 13:08:32,893:[P:12224]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 3136, 64])
2025-01-22 13:08:32,893:[P:12224]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 13:08:32,893:[P:12224]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 13:08:32,893:[P:12224]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 3136, 64])
2025-01-22 13:08:32,893:[P:12224]:Rank[0/1] Module: VisionTransformer, Input[0] Shape: torch.Size([64, 3, 224, 224])
2025-01-22 13:08:32,893:[P:12224]:Rank[0/1] Module: VisionTransformer, Output[0] Shape: torch.Size([64, 64, 56, 56])
2025-01-22 13:08:32,893:[P:12224]:Rank[0/1] Module: VisionTransformer, Output[1] is of type <class 'NoneType'>
2025-01-22 13:08:33,147:[P:12224]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 784, 192])
2025-01-22 13:08:33,148:[P:12224]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 13:08:33,148:[P:12224]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 13:08:33,148:[P:12224]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 784, 192])
2025-01-22 13:08:33,161:[P:12224]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 784, 192])
2025-01-22 13:08:33,162:[P:12224]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 13:08:33,162:[P:12224]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 13:08:33,162:[P:12224]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 784, 192])
2025-01-22 13:08:33,162:[P:12224]:Rank[0/1] Module: VisionTransformer, Input[0] Shape: torch.Size([64, 64, 56, 56])
2025-01-22 13:08:33,162:[P:12224]:Rank[0/1] Module: VisionTransformer, Output[0] Shape: torch.Size([64, 192, 28, 28])
2025-01-22 13:08:33,162:[P:12224]:Rank[0/1] Module: VisionTransformer, Output[1] is of type <class 'NoneType'>
2025-01-22 13:08:33,862:[P:12224]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 13:08:33,862:[P:12224]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 13:08:33,862:[P:12224]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 13:08:33,862:[P:12224]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 13:08:33,884:[P:12224]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 13:08:33,884:[P:12224]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 13:08:33,884:[P:12224]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 13:08:33,884:[P:12224]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 13:08:33,903:[P:12224]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 13:08:33,903:[P:12224]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 13:08:33,903:[P:12224]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 13:08:33,903:[P:12224]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 13:08:33,924:[P:12224]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 13:08:33,924:[P:12224]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 13:08:33,924:[P:12224]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 13:08:33,924:[P:12224]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 13:08:33,945:[P:12224]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 13:08:33,945:[P:12224]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 13:08:33,945:[P:12224]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 13:08:33,945:[P:12224]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 13:08:33,968:[P:12224]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 13:08:33,968:[P:12224]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 13:08:33,968:[P:12224]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 13:08:33,968:[P:12224]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 13:08:33,991:[P:12224]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 13:08:33,991:[P:12224]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 13:08:33,991:[P:12224]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 13:08:33,991:[P:12224]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 13:08:34,013:[P:12224]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 13:08:34,013:[P:12224]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 13:08:34,013:[P:12224]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 13:08:34,013:[P:12224]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 13:08:34,032:[P:12224]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 13:08:34,032:[P:12224]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 13:08:34,032:[P:12224]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 13:08:34,032:[P:12224]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 13:08:34,047:[P:12224]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 13:08:34,047:[P:12224]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 13:08:34,047:[P:12224]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 13:08:34,047:[P:12224]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 13:08:34,047:[P:12224]:Rank[0/1] Module: VisionTransformer, Input[0] Shape: torch.Size([64, 192, 28, 28])
2025-01-22 13:08:34,047:[P:12224]:Rank[0/1] Module: VisionTransformer, Output[0] Shape: torch.Size([64, 384, 14, 14])
2025-01-22 13:08:34,047:[P:12224]:Rank[0/1] Module: VisionTransformer, Output[1] Shape: torch.Size([64, 1, 384])
2025-01-22 13:08:47,339:[P:12224]:Rank[0/1] => Epoch[0][0/13]: Time 15.088s (15.088s)	Speed 4.2 samples/s	Data 0.385s (0.385s)	Loss 6.88895 (6.88895)	Accuracy@1 0.000 (0.000)	Accuracy@5 0.000 (0.000)	
2025-01-22 13:08:47,362:[P:12224]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 3136, 64])
2025-01-22 13:08:47,362:[P:12224]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 13:08:47,362:[P:12224]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 13:08:47,362:[P:12224]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 3136, 64])
2025-01-22 13:08:47,363:[P:12224]:Rank[0/1] Module: VisionTransformer, Input[0] Shape: torch.Size([64, 3, 224, 224])
2025-01-22 13:08:47,363:[P:12224]:Rank[0/1] Module: VisionTransformer, Output[0] Shape: torch.Size([64, 64, 56, 56])
2025-01-22 13:08:47,363:[P:12224]:Rank[0/1] Module: VisionTransformer, Output[1] is of type <class 'NoneType'>
2025-01-22 13:08:47,377:[P:12224]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 784, 192])
2025-01-22 13:08:47,377:[P:12224]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 13:08:47,377:[P:12224]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 13:08:47,377:[P:12224]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 784, 192])
2025-01-22 13:08:47,401:[P:12224]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 784, 192])
2025-01-22 13:08:47,401:[P:12224]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 13:08:47,401:[P:12224]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 13:08:47,401:[P:12224]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 784, 192])
2025-01-22 13:08:47,401:[P:12224]:Rank[0/1] Module: VisionTransformer, Input[0] Shape: torch.Size([64, 64, 56, 56])
2025-01-22 13:08:47,401:[P:12224]:Rank[0/1] Module: VisionTransformer, Output[0] Shape: torch.Size([64, 192, 28, 28])
2025-01-22 13:08:47,401:[P:12224]:Rank[0/1] Module: VisionTransformer, Output[1] is of type <class 'NoneType'>
2025-01-22 13:08:47,424:[P:12224]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 13:08:47,424:[P:12224]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 13:08:47,424:[P:12224]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 13:08:47,424:[P:12224]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 13:08:47,454:[P:12224]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 13:08:47,454:[P:12224]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 13:08:47,454:[P:12224]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 13:08:47,454:[P:12224]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 13:08:47,475:[P:12224]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 13:08:47,475:[P:12224]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 13:08:47,475:[P:12224]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 13:08:47,475:[P:12224]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 13:08:47,496:[P:12224]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 13:08:47,497:[P:12224]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 13:08:47,497:[P:12224]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 13:08:47,497:[P:12224]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 13:08:47,521:[P:12224]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 13:08:47,521:[P:12224]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 13:08:47,521:[P:12224]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 13:08:47,521:[P:12224]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 13:08:47,543:[P:12224]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 13:08:47,543:[P:12224]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 13:08:47,543:[P:12224]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 13:08:47,543:[P:12224]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 13:08:47,568:[P:12224]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 13:08:47,569:[P:12224]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 13:08:47,569:[P:12224]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 13:08:47,569:[P:12224]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 13:08:47,591:[P:12224]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 13:08:47,591:[P:12224]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 13:08:47,591:[P:12224]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 13:08:47,591:[P:12224]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 13:08:47,612:[P:12224]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 13:08:47,613:[P:12224]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 13:08:47,613:[P:12224]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 13:08:47,613:[P:12224]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 13:08:47,636:[P:12224]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 13:08:47,636:[P:12224]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 13:08:47,636:[P:12224]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 13:08:47,636:[P:12224]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 13:08:47,636:[P:12224]:Rank[0/1] Module: VisionTransformer, Input[0] Shape: torch.Size([64, 192, 28, 28])
2025-01-22 13:08:47,636:[P:12224]:Rank[0/1] Module: VisionTransformer, Output[0] Shape: torch.Size([64, 384, 14, 14])
2025-01-22 13:08:47,636:[P:12224]:Rank[0/1] Module: VisionTransformer, Output[1] Shape: torch.Size([64, 1, 384])
2025-01-22 13:08:54,326:[P:12224]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 3136, 64])
2025-01-22 13:08:54,326:[P:12224]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 13:08:54,327:[P:12224]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 13:08:54,327:[P:12224]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 3136, 64])
2025-01-22 13:08:54,327:[P:12224]:Rank[0/1] Module: VisionTransformer, Input[0] Shape: torch.Size([64, 3, 224, 224])
2025-01-22 13:08:54,327:[P:12224]:Rank[0/1] Module: VisionTransformer, Output[0] Shape: torch.Size([64, 64, 56, 56])
2025-01-22 13:08:54,327:[P:12224]:Rank[0/1] Module: VisionTransformer, Output[1] is of type <class 'NoneType'>
2025-01-22 13:08:54,329:[P:12224]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 784, 192])
2025-01-22 13:08:54,329:[P:12224]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 13:08:54,330:[P:12224]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 13:08:54,330:[P:12224]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 784, 192])
2025-01-22 13:08:54,332:[P:12224]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 784, 192])
2025-01-22 13:08:54,332:[P:12224]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 13:08:54,332:[P:12224]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 13:08:54,332:[P:12224]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 784, 192])
2025-01-22 13:08:54,332:[P:12224]:Rank[0/1] Module: VisionTransformer, Input[0] Shape: torch.Size([64, 64, 56, 56])
2025-01-22 13:08:54,332:[P:12224]:Rank[0/1] Module: VisionTransformer, Output[0] Shape: torch.Size([64, 192, 28, 28])
2025-01-22 13:08:54,332:[P:12224]:Rank[0/1] Module: VisionTransformer, Output[1] is of type <class 'NoneType'>
2025-01-22 13:08:54,335:[P:12224]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 13:08:54,335:[P:12224]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 13:08:54,336:[P:12224]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 13:08:54,336:[P:12224]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 13:08:54,339:[P:12224]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 13:08:54,339:[P:12224]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 13:08:54,339:[P:12224]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 13:08:54,339:[P:12224]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 13:08:54,342:[P:12224]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 13:08:54,342:[P:12224]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 13:08:54,343:[P:12224]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 13:08:54,343:[P:12224]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 13:08:54,345:[P:12224]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 13:08:54,345:[P:12224]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 13:08:54,346:[P:12224]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 13:08:54,346:[P:12224]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 13:08:54,348:[P:12224]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 13:08:54,348:[P:12224]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 13:08:54,349:[P:12224]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 13:08:54,349:[P:12224]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 13:08:54,352:[P:12224]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 13:08:54,352:[P:12224]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 13:08:54,352:[P:12224]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 13:08:54,353:[P:12224]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 13:08:54,357:[P:12224]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 13:08:54,357:[P:12224]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 13:08:54,357:[P:12224]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 13:08:54,357:[P:12224]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 13:08:54,360:[P:12224]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 13:08:54,360:[P:12224]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 13:08:54,361:[P:12224]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 13:08:54,361:[P:12224]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 13:08:54,363:[P:12224]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 13:08:54,363:[P:12224]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 13:08:54,364:[P:12224]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 13:08:54,364:[P:12224]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 13:08:54,367:[P:12224]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 13:08:54,367:[P:12224]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 13:08:54,367:[P:12224]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 13:08:54,368:[P:12224]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 13:08:54,368:[P:12224]:Rank[0/1] Module: VisionTransformer, Input[0] Shape: torch.Size([64, 192, 28, 28])
2025-01-22 13:08:54,368:[P:12224]:Rank[0/1] Module: VisionTransformer, Output[0] Shape: torch.Size([64, 384, 14, 14])
2025-01-22 13:08:54,368:[P:12224]:Rank[0/1] Module: VisionTransformer, Output[1] Shape: torch.Size([64, 1, 384])
2025-01-22 13:09:01,370:[P:12224]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 3136, 64])
2025-01-22 13:09:01,370:[P:12224]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 13:09:01,370:[P:12224]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 13:09:01,370:[P:12224]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 3136, 64])
2025-01-22 13:09:01,370:[P:12224]:Rank[0/1] Module: VisionTransformer, Input[0] Shape: torch.Size([64, 3, 224, 224])
2025-01-22 13:09:01,370:[P:12224]:Rank[0/1] Module: VisionTransformer, Output[0] Shape: torch.Size([64, 64, 56, 56])
2025-01-22 13:09:01,371:[P:12224]:Rank[0/1] Module: VisionTransformer, Output[1] is of type <class 'NoneType'>
2025-01-22 13:09:01,373:[P:12224]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 784, 192])
2025-01-22 13:09:01,373:[P:12224]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 13:09:01,373:[P:12224]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 13:09:01,373:[P:12224]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 784, 192])
2025-01-22 13:09:01,375:[P:12224]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 784, 192])
2025-01-22 13:09:01,375:[P:12224]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 13:09:01,375:[P:12224]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 13:09:01,376:[P:12224]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 784, 192])
2025-01-22 13:09:01,376:[P:12224]:Rank[0/1] Module: VisionTransformer, Input[0] Shape: torch.Size([64, 64, 56, 56])
2025-01-22 13:09:01,376:[P:12224]:Rank[0/1] Module: VisionTransformer, Output[0] Shape: torch.Size([64, 192, 28, 28])
2025-01-22 13:09:01,376:[P:12224]:Rank[0/1] Module: VisionTransformer, Output[1] is of type <class 'NoneType'>
2025-01-22 13:09:01,379:[P:12224]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 13:09:01,379:[P:12224]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 13:09:01,379:[P:12224]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 13:09:01,379:[P:12224]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 13:09:01,382:[P:12224]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 13:09:01,382:[P:12224]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 13:09:01,382:[P:12224]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 13:09:01,382:[P:12224]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 13:09:01,385:[P:12224]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 13:09:01,385:[P:12224]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 13:09:01,385:[P:12224]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 13:09:01,385:[P:12224]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 13:09:01,388:[P:12224]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 13:09:01,388:[P:12224]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 13:09:01,388:[P:12224]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 13:09:01,388:[P:12224]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 13:09:01,391:[P:12224]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 13:09:01,391:[P:12224]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 13:09:01,391:[P:12224]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 13:09:01,392:[P:12224]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 13:09:01,394:[P:12224]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 13:09:01,394:[P:12224]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 13:09:01,394:[P:12224]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 13:09:01,394:[P:12224]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 13:09:01,397:[P:12224]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 13:09:01,397:[P:12224]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 13:09:01,397:[P:12224]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 13:09:01,397:[P:12224]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 13:09:01,400:[P:12224]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 13:09:01,400:[P:12224]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 13:09:01,400:[P:12224]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 13:09:01,400:[P:12224]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 13:09:01,404:[P:12224]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 13:09:01,404:[P:12224]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 13:09:01,404:[P:12224]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 13:09:01,404:[P:12224]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 13:09:01,407:[P:12224]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 13:09:01,407:[P:12224]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 13:09:01,407:[P:12224]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 13:09:01,407:[P:12224]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 13:09:01,408:[P:12224]:Rank[0/1] Module: VisionTransformer, Input[0] Shape: torch.Size([64, 192, 28, 28])
2025-01-22 13:09:01,408:[P:12224]:Rank[0/1] Module: VisionTransformer, Output[0] Shape: torch.Size([64, 384, 14, 14])
2025-01-22 13:09:01,408:[P:12224]:Rank[0/1] Module: VisionTransformer, Output[1] Shape: torch.Size([64, 1, 384])
2025-01-22 13:09:07,725:[P:12224]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 3136, 64])
2025-01-22 13:09:07,725:[P:12224]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 13:09:07,725:[P:12224]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 13:09:07,725:[P:12224]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 3136, 64])
2025-01-22 13:09:07,725:[P:12224]:Rank[0/1] Module: VisionTransformer, Input[0] Shape: torch.Size([64, 3, 224, 224])
2025-01-22 13:09:07,725:[P:12224]:Rank[0/1] Module: VisionTransformer, Output[0] Shape: torch.Size([64, 64, 56, 56])
2025-01-22 13:09:07,725:[P:12224]:Rank[0/1] Module: VisionTransformer, Output[1] is of type <class 'NoneType'>
2025-01-22 13:09:07,728:[P:12224]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 784, 192])
2025-01-22 13:09:07,728:[P:12224]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 13:09:07,728:[P:12224]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 13:09:07,728:[P:12224]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 784, 192])
2025-01-22 13:09:07,730:[P:12224]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 784, 192])
2025-01-22 13:09:07,730:[P:12224]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 13:09:07,730:[P:12224]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 13:09:07,730:[P:12224]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 784, 192])
2025-01-22 13:09:07,730:[P:12224]:Rank[0/1] Module: VisionTransformer, Input[0] Shape: torch.Size([64, 64, 56, 56])
2025-01-22 13:09:07,730:[P:12224]:Rank[0/1] Module: VisionTransformer, Output[0] Shape: torch.Size([64, 192, 28, 28])
2025-01-22 13:09:07,730:[P:12224]:Rank[0/1] Module: VisionTransformer, Output[1] is of type <class 'NoneType'>
2025-01-22 13:09:07,733:[P:12224]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 13:09:07,733:[P:12224]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 13:09:07,733:[P:12224]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 13:09:07,733:[P:12224]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 13:09:07,737:[P:12224]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 13:09:07,737:[P:12224]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 13:09:07,737:[P:12224]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 13:09:07,737:[P:12224]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 13:09:07,741:[P:12224]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 13:09:07,741:[P:12224]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 13:09:07,741:[P:12224]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 13:09:07,742:[P:12224]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 13:09:07,745:[P:12224]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 13:09:07,745:[P:12224]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 13:09:07,745:[P:12224]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 13:09:07,746:[P:12224]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 13:09:07,750:[P:12224]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 13:09:07,750:[P:12224]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 13:09:07,750:[P:12224]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 13:09:07,750:[P:12224]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 13:09:07,754:[P:12224]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 13:09:07,754:[P:12224]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 13:09:07,754:[P:12224]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 13:09:07,754:[P:12224]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 13:09:07,758:[P:12224]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 13:09:07,758:[P:12224]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 13:09:07,758:[P:12224]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 13:09:07,758:[P:12224]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 13:09:07,762:[P:12224]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 13:09:07,762:[P:12224]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 13:09:07,762:[P:12224]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 13:09:07,762:[P:12224]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 13:09:07,766:[P:12224]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 13:09:07,766:[P:12224]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 13:09:07,766:[P:12224]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 13:09:07,767:[P:12224]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 13:09:07,770:[P:12224]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 13:09:07,770:[P:12224]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 13:09:07,770:[P:12224]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 13:09:07,770:[P:12224]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 13:09:07,770:[P:12224]:Rank[0/1] Module: VisionTransformer, Input[0] Shape: torch.Size([64, 192, 28, 28])
2025-01-22 13:09:07,770:[P:12224]:Rank[0/1] Module: VisionTransformer, Output[0] Shape: torch.Size([64, 384, 14, 14])
2025-01-22 13:09:07,770:[P:12224]:Rank[0/1] Module: VisionTransformer, Output[1] Shape: torch.Size([64, 1, 384])
2025-01-22 13:09:14,651:[P:12224]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 3136, 64])
2025-01-22 13:09:14,652:[P:12224]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 13:09:14,652:[P:12224]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 13:09:14,652:[P:12224]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 3136, 64])
2025-01-22 13:09:14,652:[P:12224]:Rank[0/1] Module: VisionTransformer, Input[0] Shape: torch.Size([64, 3, 224, 224])
2025-01-22 13:09:14,652:[P:12224]:Rank[0/1] Module: VisionTransformer, Output[0] Shape: torch.Size([64, 64, 56, 56])
2025-01-22 13:09:14,652:[P:12224]:Rank[0/1] Module: VisionTransformer, Output[1] is of type <class 'NoneType'>
2025-01-22 13:09:14,654:[P:12224]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 784, 192])
2025-01-22 13:09:14,654:[P:12224]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 13:09:14,655:[P:12224]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 13:09:14,655:[P:12224]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 784, 192])
2025-01-22 13:09:14,657:[P:12224]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 784, 192])
2025-01-22 13:09:14,657:[P:12224]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 13:09:14,657:[P:12224]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 13:09:14,657:[P:12224]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 784, 192])
2025-01-22 13:09:14,657:[P:12224]:Rank[0/1] Module: VisionTransformer, Input[0] Shape: torch.Size([64, 64, 56, 56])
2025-01-22 13:09:14,657:[P:12224]:Rank[0/1] Module: VisionTransformer, Output[0] Shape: torch.Size([64, 192, 28, 28])
2025-01-22 13:09:14,657:[P:12224]:Rank[0/1] Module: VisionTransformer, Output[1] is of type <class 'NoneType'>
2025-01-22 13:09:14,660:[P:12224]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 13:09:14,660:[P:12224]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 13:09:14,660:[P:12224]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 13:09:14,660:[P:12224]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 13:09:14,663:[P:12224]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 13:09:14,663:[P:12224]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 13:09:14,663:[P:12224]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 13:09:14,663:[P:12224]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 13:09:14,667:[P:12224]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 13:09:14,667:[P:12224]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 13:09:14,667:[P:12224]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 13:09:14,667:[P:12224]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 13:09:14,670:[P:12224]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 13:09:14,670:[P:12224]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 13:09:14,670:[P:12224]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 13:09:14,670:[P:12224]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 13:09:14,672:[P:12224]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 13:09:14,673:[P:12224]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 13:09:14,673:[P:12224]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 13:09:14,673:[P:12224]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 13:09:14,675:[P:12224]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 13:09:14,676:[P:12224]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 13:09:14,676:[P:12224]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 13:09:14,676:[P:12224]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 13:09:14,678:[P:12224]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 13:09:14,679:[P:12224]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 13:09:14,679:[P:12224]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 13:09:14,679:[P:12224]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 13:09:14,682:[P:12224]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 13:09:14,682:[P:12224]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 13:09:14,682:[P:12224]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 13:09:14,682:[P:12224]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 13:09:14,684:[P:12224]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 13:09:14,685:[P:12224]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 13:09:14,685:[P:12224]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 13:09:14,685:[P:12224]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 13:09:14,687:[P:12224]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 13:09:14,687:[P:12224]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 13:09:14,687:[P:12224]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 13:09:14,687:[P:12224]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 13:09:14,688:[P:12224]:Rank[0/1] Module: VisionTransformer, Input[0] Shape: torch.Size([64, 192, 28, 28])
2025-01-22 13:09:14,688:[P:12224]:Rank[0/1] Module: VisionTransformer, Output[0] Shape: torch.Size([64, 384, 14, 14])
2025-01-22 13:09:14,688:[P:12224]:Rank[0/1] Module: VisionTransformer, Output[1] Shape: torch.Size([64, 1, 384])
2025-01-22 13:09:21,262:[P:12224]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 3136, 64])
2025-01-22 13:09:21,262:[P:12224]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 13:09:21,262:[P:12224]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 13:09:21,262:[P:12224]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 3136, 64])
2025-01-22 13:09:21,262:[P:12224]:Rank[0/1] Module: VisionTransformer, Input[0] Shape: torch.Size([64, 3, 224, 224])
2025-01-22 13:09:21,262:[P:12224]:Rank[0/1] Module: VisionTransformer, Output[0] Shape: torch.Size([64, 64, 56, 56])
2025-01-22 13:09:21,263:[P:12224]:Rank[0/1] Module: VisionTransformer, Output[1] is of type <class 'NoneType'>
2025-01-22 13:09:21,265:[P:12224]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 784, 192])
2025-01-22 13:09:21,265:[P:12224]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 13:09:21,265:[P:12224]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 13:09:21,265:[P:12224]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 784, 192])
2025-01-22 13:09:21,268:[P:12224]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 784, 192])
2025-01-22 13:09:21,268:[P:12224]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 13:09:21,268:[P:12224]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 13:09:21,268:[P:12224]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 784, 192])
2025-01-22 13:09:21,268:[P:12224]:Rank[0/1] Module: VisionTransformer, Input[0] Shape: torch.Size([64, 64, 56, 56])
2025-01-22 13:09:21,268:[P:12224]:Rank[0/1] Module: VisionTransformer, Output[0] Shape: torch.Size([64, 192, 28, 28])
2025-01-22 13:09:21,268:[P:12224]:Rank[0/1] Module: VisionTransformer, Output[1] is of type <class 'NoneType'>
2025-01-22 13:09:21,271:[P:12224]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 13:09:21,272:[P:12224]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 13:09:21,272:[P:12224]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 13:09:21,272:[P:12224]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 13:09:21,276:[P:12224]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 13:09:21,276:[P:12224]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 13:09:21,276:[P:12224]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 13:09:21,276:[P:12224]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 13:09:21,280:[P:12224]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 13:09:21,280:[P:12224]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 13:09:21,280:[P:12224]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 13:09:21,280:[P:12224]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 13:09:21,283:[P:12224]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 13:09:21,283:[P:12224]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 13:09:21,283:[P:12224]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 13:09:21,283:[P:12224]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 13:09:21,286:[P:12224]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 13:09:21,286:[P:12224]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 13:09:21,286:[P:12224]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 13:09:21,286:[P:12224]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 13:09:21,289:[P:12224]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 13:09:21,289:[P:12224]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 13:09:21,289:[P:12224]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 13:09:21,289:[P:12224]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 13:09:21,293:[P:12224]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 13:09:21,293:[P:12224]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 13:09:21,293:[P:12224]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 13:09:21,293:[P:12224]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 13:09:21,296:[P:12224]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 13:09:21,296:[P:12224]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 13:09:21,296:[P:12224]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 13:09:21,296:[P:12224]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 13:09:21,298:[P:12224]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 13:09:21,298:[P:12224]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 13:09:21,299:[P:12224]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 13:09:21,299:[P:12224]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 13:09:21,302:[P:12224]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 13:09:21,302:[P:12224]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 13:09:21,302:[P:12224]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 13:09:21,302:[P:12224]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 13:09:21,302:[P:12224]:Rank[0/1] Module: VisionTransformer, Input[0] Shape: torch.Size([64, 192, 28, 28])
2025-01-22 13:09:21,302:[P:12224]:Rank[0/1] Module: VisionTransformer, Output[0] Shape: torch.Size([64, 384, 14, 14])
2025-01-22 13:09:21,302:[P:12224]:Rank[0/1] Module: VisionTransformer, Output[1] Shape: torch.Size([64, 1, 384])
2025-01-22 13:09:27,591:[P:12224]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 3136, 64])
2025-01-22 13:09:27,591:[P:12224]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 13:09:27,591:[P:12224]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 13:09:27,591:[P:12224]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 3136, 64])
2025-01-22 13:09:27,591:[P:12224]:Rank[0/1] Module: VisionTransformer, Input[0] Shape: torch.Size([64, 3, 224, 224])
2025-01-22 13:09:27,591:[P:12224]:Rank[0/1] Module: VisionTransformer, Output[0] Shape: torch.Size([64, 64, 56, 56])
2025-01-22 13:09:27,591:[P:12224]:Rank[0/1] Module: VisionTransformer, Output[1] is of type <class 'NoneType'>
2025-01-22 13:09:27,594:[P:12224]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 784, 192])
2025-01-22 13:09:27,594:[P:12224]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 13:09:27,594:[P:12224]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 13:09:27,594:[P:12224]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 784, 192])
2025-01-22 13:09:27,596:[P:12224]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 784, 192])
2025-01-22 13:09:27,596:[P:12224]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 13:09:27,596:[P:12224]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 13:09:27,596:[P:12224]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 784, 192])
2025-01-22 13:09:27,597:[P:12224]:Rank[0/1] Module: VisionTransformer, Input[0] Shape: torch.Size([64, 64, 56, 56])
2025-01-22 13:09:27,597:[P:12224]:Rank[0/1] Module: VisionTransformer, Output[0] Shape: torch.Size([64, 192, 28, 28])
2025-01-22 13:09:27,597:[P:12224]:Rank[0/1] Module: VisionTransformer, Output[1] is of type <class 'NoneType'>
2025-01-22 13:09:27,600:[P:12224]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 13:09:27,600:[P:12224]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 13:09:27,600:[P:12224]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 13:09:27,600:[P:12224]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 13:09:27,603:[P:12224]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 13:09:27,603:[P:12224]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 13:09:27,603:[P:12224]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 13:09:27,604:[P:12224]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 13:09:27,606:[P:12224]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 13:09:27,607:[P:12224]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 13:09:27,607:[P:12224]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 13:09:27,607:[P:12224]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 13:09:27,611:[P:12224]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 13:09:27,611:[P:12224]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 13:09:27,611:[P:12224]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 13:09:27,611:[P:12224]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 13:09:27,614:[P:12224]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 13:09:27,614:[P:12224]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 13:09:27,614:[P:12224]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 13:09:27,614:[P:12224]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 13:09:27,617:[P:12224]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 13:09:27,617:[P:12224]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 13:09:27,617:[P:12224]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 13:09:27,617:[P:12224]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 13:09:27,620:[P:12224]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 13:09:27,620:[P:12224]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 13:09:27,620:[P:12224]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 13:09:27,620:[P:12224]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 13:09:27,623:[P:12224]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 13:09:27,623:[P:12224]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 13:09:27,623:[P:12224]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 13:09:27,623:[P:12224]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 13:09:27,626:[P:12224]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 13:09:27,626:[P:12224]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 13:09:27,626:[P:12224]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 13:09:27,627:[P:12224]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 13:09:27,629:[P:12224]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 13:09:27,629:[P:12224]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 13:09:27,629:[P:12224]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 13:09:27,629:[P:12224]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 13:09:27,630:[P:12224]:Rank[0/1] Module: VisionTransformer, Input[0] Shape: torch.Size([64, 192, 28, 28])
2025-01-22 13:09:27,630:[P:12224]:Rank[0/1] Module: VisionTransformer, Output[0] Shape: torch.Size([64, 384, 14, 14])
2025-01-22 13:09:27,630:[P:12224]:Rank[0/1] Module: VisionTransformer, Output[1] Shape: torch.Size([64, 1, 384])
2025-01-22 13:09:33,816:[P:12224]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 3136, 64])
2025-01-22 13:09:33,816:[P:12224]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 13:09:33,816:[P:12224]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 13:09:33,816:[P:12224]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 3136, 64])
2025-01-22 13:09:33,816:[P:12224]:Rank[0/1] Module: VisionTransformer, Input[0] Shape: torch.Size([64, 3, 224, 224])
2025-01-22 13:09:33,816:[P:12224]:Rank[0/1] Module: VisionTransformer, Output[0] Shape: torch.Size([64, 64, 56, 56])
2025-01-22 13:09:33,816:[P:12224]:Rank[0/1] Module: VisionTransformer, Output[1] is of type <class 'NoneType'>
2025-01-22 13:09:33,819:[P:12224]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 784, 192])
2025-01-22 13:09:33,819:[P:12224]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 13:09:33,819:[P:12224]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 13:09:33,819:[P:12224]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 784, 192])
2025-01-22 13:09:33,821:[P:12224]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 784, 192])
2025-01-22 13:09:33,821:[P:12224]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 13:09:33,822:[P:12224]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 13:09:33,822:[P:12224]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 784, 192])
2025-01-22 13:09:33,822:[P:12224]:Rank[0/1] Module: VisionTransformer, Input[0] Shape: torch.Size([64, 64, 56, 56])
2025-01-22 13:09:33,822:[P:12224]:Rank[0/1] Module: VisionTransformer, Output[0] Shape: torch.Size([64, 192, 28, 28])
2025-01-22 13:09:33,822:[P:12224]:Rank[0/1] Module: VisionTransformer, Output[1] is of type <class 'NoneType'>
2025-01-22 13:09:33,825:[P:12224]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 13:09:33,825:[P:12224]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 13:09:33,825:[P:12224]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 13:09:33,825:[P:12224]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 13:09:33,829:[P:12224]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 13:09:33,829:[P:12224]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 13:09:33,829:[P:12224]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 13:09:33,829:[P:12224]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 13:09:33,832:[P:12224]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 13:09:33,832:[P:12224]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 13:09:33,832:[P:12224]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 13:09:33,832:[P:12224]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 13:09:33,835:[P:12224]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 13:09:33,835:[P:12224]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 13:09:33,835:[P:12224]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 13:09:33,835:[P:12224]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 13:09:33,838:[P:12224]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 13:09:33,838:[P:12224]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 13:09:33,838:[P:12224]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 13:09:33,838:[P:12224]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 13:09:33,841:[P:12224]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 13:09:33,841:[P:12224]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 13:09:33,841:[P:12224]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 13:09:33,841:[P:12224]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 13:09:33,844:[P:12224]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 13:09:33,844:[P:12224]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 13:09:33,844:[P:12224]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 13:09:33,844:[P:12224]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 13:09:33,847:[P:12224]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 13:09:33,847:[P:12224]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 13:09:33,847:[P:12224]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 13:09:33,847:[P:12224]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 13:09:33,850:[P:12224]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 13:09:33,850:[P:12224]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 13:09:33,851:[P:12224]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 13:09:33,851:[P:12224]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 13:09:33,853:[P:12224]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 13:09:33,853:[P:12224]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 13:09:33,853:[P:12224]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 13:09:33,854:[P:12224]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 13:09:33,854:[P:12224]:Rank[0/1] Module: VisionTransformer, Input[0] Shape: torch.Size([64, 192, 28, 28])
2025-01-22 13:09:33,854:[P:12224]:Rank[0/1] Module: VisionTransformer, Output[0] Shape: torch.Size([64, 384, 14, 14])
2025-01-22 13:09:33,854:[P:12224]:Rank[0/1] Module: VisionTransformer, Output[1] Shape: torch.Size([64, 1, 384])
2025-01-22 13:09:40,929:[P:12224]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 3136, 64])
2025-01-22 13:09:40,929:[P:12224]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 13:09:40,929:[P:12224]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 13:09:40,929:[P:12224]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 3136, 64])
2025-01-22 13:09:40,930:[P:12224]:Rank[0/1] Module: VisionTransformer, Input[0] Shape: torch.Size([64, 3, 224, 224])
2025-01-22 13:09:40,930:[P:12224]:Rank[0/1] Module: VisionTransformer, Output[0] Shape: torch.Size([64, 64, 56, 56])
2025-01-22 13:09:40,930:[P:12224]:Rank[0/1] Module: VisionTransformer, Output[1] is of type <class 'NoneType'>
2025-01-22 13:09:40,932:[P:12224]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 784, 192])
2025-01-22 13:09:40,932:[P:12224]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 13:09:40,933:[P:12224]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 13:09:40,933:[P:12224]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 784, 192])
2025-01-22 13:09:40,935:[P:12224]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 784, 192])
2025-01-22 13:09:40,935:[P:12224]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 13:09:40,935:[P:12224]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 13:09:40,935:[P:12224]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 784, 192])
2025-01-22 13:09:40,935:[P:12224]:Rank[0/1] Module: VisionTransformer, Input[0] Shape: torch.Size([64, 64, 56, 56])
2025-01-22 13:09:40,935:[P:12224]:Rank[0/1] Module: VisionTransformer, Output[0] Shape: torch.Size([64, 192, 28, 28])
2025-01-22 13:09:40,935:[P:12224]:Rank[0/1] Module: VisionTransformer, Output[1] is of type <class 'NoneType'>
2025-01-22 13:09:40,939:[P:12224]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 13:09:40,939:[P:12224]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 13:09:40,939:[P:12224]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 13:09:40,939:[P:12224]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 13:09:40,942:[P:12224]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 13:09:40,942:[P:12224]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 13:09:40,942:[P:12224]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 13:09:40,942:[P:12224]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 13:09:40,945:[P:12224]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 13:09:40,945:[P:12224]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 13:09:40,945:[P:12224]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 13:09:40,946:[P:12224]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 13:09:40,948:[P:12224]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 13:09:40,948:[P:12224]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 13:09:40,948:[P:12224]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 13:09:40,948:[P:12224]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 13:09:40,951:[P:12224]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 13:09:40,952:[P:12224]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 13:09:40,952:[P:12224]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 13:09:40,952:[P:12224]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 13:09:40,955:[P:12224]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 13:09:40,955:[P:12224]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 13:09:40,955:[P:12224]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 13:09:40,955:[P:12224]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 13:09:40,958:[P:12224]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 13:09:40,958:[P:12224]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 13:09:40,958:[P:12224]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 13:09:40,958:[P:12224]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 13:09:40,961:[P:12224]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 13:09:40,961:[P:12224]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 13:09:40,961:[P:12224]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 13:09:40,961:[P:12224]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 13:09:40,965:[P:12224]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 13:09:40,965:[P:12224]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 13:09:40,965:[P:12224]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 13:09:40,965:[P:12224]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 13:09:40,969:[P:12224]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 13:09:40,969:[P:12224]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 13:09:40,969:[P:12224]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 13:09:40,969:[P:12224]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 13:09:40,970:[P:12224]:Rank[0/1] Module: VisionTransformer, Input[0] Shape: torch.Size([64, 192, 28, 28])
2025-01-22 13:09:40,970:[P:12224]:Rank[0/1] Module: VisionTransformer, Output[0] Shape: torch.Size([64, 384, 14, 14])
2025-01-22 13:09:40,970:[P:12224]:Rank[0/1] Module: VisionTransformer, Output[1] Shape: torch.Size([64, 1, 384])
2025-01-22 13:09:47,721:[P:12224]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 3136, 64])
2025-01-22 13:09:47,722:[P:12224]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 13:09:47,722:[P:12224]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 13:09:47,722:[P:12224]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 3136, 64])
2025-01-22 13:09:47,722:[P:12224]:Rank[0/1] Module: VisionTransformer, Input[0] Shape: torch.Size([64, 3, 224, 224])
2025-01-22 13:09:47,722:[P:12224]:Rank[0/1] Module: VisionTransformer, Output[0] Shape: torch.Size([64, 64, 56, 56])
2025-01-22 13:09:47,722:[P:12224]:Rank[0/1] Module: VisionTransformer, Output[1] is of type <class 'NoneType'>
2025-01-22 13:09:47,725:[P:12224]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 784, 192])
2025-01-22 13:09:47,725:[P:12224]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 13:09:47,725:[P:12224]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 13:09:47,725:[P:12224]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 784, 192])
2025-01-22 13:09:47,727:[P:12224]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 784, 192])
2025-01-22 13:09:47,728:[P:12224]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 13:09:47,728:[P:12224]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 13:09:47,728:[P:12224]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 784, 192])
2025-01-22 13:09:47,728:[P:12224]:Rank[0/1] Module: VisionTransformer, Input[0] Shape: torch.Size([64, 64, 56, 56])
2025-01-22 13:09:47,728:[P:12224]:Rank[0/1] Module: VisionTransformer, Output[0] Shape: torch.Size([64, 192, 28, 28])
2025-01-22 13:09:47,728:[P:12224]:Rank[0/1] Module: VisionTransformer, Output[1] is of type <class 'NoneType'>
2025-01-22 13:09:47,731:[P:12224]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 13:09:47,731:[P:12224]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 13:09:47,731:[P:12224]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 13:09:47,731:[P:12224]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 13:09:47,734:[P:12224]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 13:09:47,735:[P:12224]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 13:09:47,735:[P:12224]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 13:09:47,735:[P:12224]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 13:09:47,738:[P:12224]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 13:09:47,738:[P:12224]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 13:09:47,738:[P:12224]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 13:09:47,738:[P:12224]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 13:09:47,741:[P:12224]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 13:09:47,742:[P:12224]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 13:09:47,742:[P:12224]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 13:09:47,742:[P:12224]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 13:09:47,745:[P:12224]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 13:09:47,745:[P:12224]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 13:09:47,745:[P:12224]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 13:09:47,745:[P:12224]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 13:09:47,748:[P:12224]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 13:09:47,748:[P:12224]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 13:09:47,748:[P:12224]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 13:09:47,748:[P:12224]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 13:09:47,752:[P:12224]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 13:09:47,752:[P:12224]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 13:09:47,752:[P:12224]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 13:09:47,752:[P:12224]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 13:09:47,756:[P:12224]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 13:09:47,756:[P:12224]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 13:09:47,756:[P:12224]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 13:09:47,756:[P:12224]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 13:09:47,759:[P:12224]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 13:09:47,759:[P:12224]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 13:09:47,759:[P:12224]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 13:09:47,759:[P:12224]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 13:09:47,762:[P:12224]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 13:09:47,762:[P:12224]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 13:09:47,762:[P:12224]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 13:09:47,762:[P:12224]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 13:09:47,763:[P:12224]:Rank[0/1] Module: VisionTransformer, Input[0] Shape: torch.Size([64, 192, 28, 28])
2025-01-22 13:09:47,763:[P:12224]:Rank[0/1] Module: VisionTransformer, Output[0] Shape: torch.Size([64, 384, 14, 14])
2025-01-22 13:09:47,763:[P:12224]:Rank[0/1] Module: VisionTransformer, Output[1] Shape: torch.Size([64, 1, 384])
2025-01-22 13:09:54,197:[P:12224]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 3136, 64])
2025-01-22 13:09:54,197:[P:12224]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 13:09:54,197:[P:12224]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 13:09:54,197:[P:12224]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 3136, 64])
2025-01-22 13:09:54,197:[P:12224]:Rank[0/1] Module: VisionTransformer, Input[0] Shape: torch.Size([64, 3, 224, 224])
2025-01-22 13:09:54,197:[P:12224]:Rank[0/1] Module: VisionTransformer, Output[0] Shape: torch.Size([64, 64, 56, 56])
2025-01-22 13:09:54,197:[P:12224]:Rank[0/1] Module: VisionTransformer, Output[1] is of type <class 'NoneType'>
2025-01-22 13:09:54,200:[P:12224]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 784, 192])
2025-01-22 13:09:54,200:[P:12224]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 13:09:54,200:[P:12224]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 13:09:54,200:[P:12224]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 784, 192])
2025-01-22 13:09:54,202:[P:12224]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 784, 192])
2025-01-22 13:09:54,202:[P:12224]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 13:09:54,203:[P:12224]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 13:09:54,203:[P:12224]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 784, 192])
2025-01-22 13:09:54,203:[P:12224]:Rank[0/1] Module: VisionTransformer, Input[0] Shape: torch.Size([64, 64, 56, 56])
2025-01-22 13:09:54,203:[P:12224]:Rank[0/1] Module: VisionTransformer, Output[0] Shape: torch.Size([64, 192, 28, 28])
2025-01-22 13:09:54,203:[P:12224]:Rank[0/1] Module: VisionTransformer, Output[1] is of type <class 'NoneType'>
2025-01-22 13:09:54,206:[P:12224]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 13:09:54,206:[P:12224]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 13:09:54,206:[P:12224]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 13:09:54,206:[P:12224]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 13:09:54,209:[P:12224]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 13:09:54,209:[P:12224]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 13:09:54,209:[P:12224]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 13:09:54,209:[P:12224]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 13:09:54,212:[P:12224]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 13:09:54,212:[P:12224]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 13:09:54,212:[P:12224]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 13:09:54,212:[P:12224]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 13:09:54,215:[P:12224]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 13:09:54,215:[P:12224]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 13:09:54,215:[P:12224]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 13:09:54,215:[P:12224]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 13:09:54,218:[P:12224]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 13:09:54,218:[P:12224]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 13:09:54,218:[P:12224]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 13:09:54,219:[P:12224]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 13:09:54,221:[P:12224]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 13:09:54,222:[P:12224]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 13:09:54,222:[P:12224]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 13:09:54,222:[P:12224]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 13:09:54,225:[P:12224]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 13:09:54,225:[P:12224]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 13:09:54,225:[P:12224]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 13:09:54,225:[P:12224]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 13:09:54,229:[P:12224]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 13:09:54,229:[P:12224]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 13:09:54,229:[P:12224]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 13:09:54,229:[P:12224]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 13:09:54,232:[P:12224]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 13:09:54,233:[P:12224]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 13:09:54,233:[P:12224]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 13:09:54,233:[P:12224]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 13:09:54,235:[P:12224]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 13:09:54,235:[P:12224]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 13:09:54,235:[P:12224]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 13:09:54,235:[P:12224]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 13:09:54,236:[P:12224]:Rank[0/1] Module: VisionTransformer, Input[0] Shape: torch.Size([64, 192, 28, 28])
2025-01-22 13:09:54,236:[P:12224]:Rank[0/1] Module: VisionTransformer, Output[0] Shape: torch.Size([64, 384, 14, 14])
2025-01-22 13:09:54,236:[P:12224]:Rank[0/1] Module: VisionTransformer, Output[1] Shape: torch.Size([64, 1, 384])
2025-01-22 13:10:00,788:[P:12224]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 3136, 64])
2025-01-22 13:10:00,789:[P:12224]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 13:10:00,789:[P:12224]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 13:10:00,789:[P:12224]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 3136, 64])
2025-01-22 13:10:00,789:[P:12224]:Rank[0/1] Module: VisionTransformer, Input[0] Shape: torch.Size([64, 3, 224, 224])
2025-01-22 13:10:00,789:[P:12224]:Rank[0/1] Module: VisionTransformer, Output[0] Shape: torch.Size([64, 64, 56, 56])
2025-01-22 13:10:00,789:[P:12224]:Rank[0/1] Module: VisionTransformer, Output[1] is of type <class 'NoneType'>
2025-01-22 13:10:00,791:[P:12224]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 784, 192])
2025-01-22 13:10:00,791:[P:12224]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 13:10:00,792:[P:12224]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 13:10:00,792:[P:12224]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 784, 192])
2025-01-22 13:10:00,794:[P:12224]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 784, 192])
2025-01-22 13:10:00,794:[P:12224]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 13:10:00,794:[P:12224]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 13:10:00,794:[P:12224]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 784, 192])
2025-01-22 13:10:00,794:[P:12224]:Rank[0/1] Module: VisionTransformer, Input[0] Shape: torch.Size([64, 64, 56, 56])
2025-01-22 13:10:00,794:[P:12224]:Rank[0/1] Module: VisionTransformer, Output[0] Shape: torch.Size([64, 192, 28, 28])
2025-01-22 13:10:00,794:[P:12224]:Rank[0/1] Module: VisionTransformer, Output[1] is of type <class 'NoneType'>
2025-01-22 13:10:00,797:[P:12224]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 13:10:00,797:[P:12224]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 13:10:00,797:[P:12224]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 13:10:00,797:[P:12224]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 13:10:00,800:[P:12224]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 13:10:00,800:[P:12224]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 13:10:00,800:[P:12224]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 13:10:00,800:[P:12224]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 13:10:00,803:[P:12224]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 13:10:00,803:[P:12224]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 13:10:00,803:[P:12224]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 13:10:00,803:[P:12224]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 13:10:00,806:[P:12224]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 13:10:00,806:[P:12224]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 13:10:00,806:[P:12224]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 13:10:00,806:[P:12224]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 13:10:00,809:[P:12224]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 13:10:00,809:[P:12224]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 13:10:00,809:[P:12224]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 13:10:00,809:[P:12224]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 13:10:00,811:[P:12224]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 13:10:00,811:[P:12224]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 13:10:00,811:[P:12224]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 13:10:00,811:[P:12224]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 13:10:00,814:[P:12224]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 13:10:00,814:[P:12224]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 13:10:00,814:[P:12224]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 13:10:00,814:[P:12224]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 13:10:00,817:[P:12224]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 13:10:00,818:[P:12224]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 13:10:00,818:[P:12224]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 13:10:00,818:[P:12224]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 13:10:00,820:[P:12224]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 13:10:00,821:[P:12224]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 13:10:00,821:[P:12224]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 13:10:00,821:[P:12224]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 13:10:00,823:[P:12224]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 13:10:00,823:[P:12224]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 13:10:00,823:[P:12224]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 13:10:00,824:[P:12224]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 13:10:00,824:[P:12224]:Rank[0/1] Module: VisionTransformer, Input[0] Shape: torch.Size([64, 192, 28, 28])
2025-01-22 13:10:00,824:[P:12224]:Rank[0/1] Module: VisionTransformer, Output[0] Shape: torch.Size([64, 384, 14, 14])
2025-01-22 13:10:00,824:[P:12224]:Rank[0/1] Module: VisionTransformer, Output[1] Shape: torch.Size([64, 1, 384])
2025-01-22 13:10:07,261:[P:12224]:Rank[0/1] => Epoch[0]: train end, duration: 95.01s
2025-01-22 13:10:07,262:[P:12224]:Rank[0/1] => Epoch[0]: validate start
2025-01-22 13:10:07,262:[P:12224]:Rank[0/1] => switch to eval mode
2025-01-22 13:10:08,384:[P:12224]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([32, 3136, 64])
2025-01-22 13:10:08,384:[P:12224]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 13:10:08,384:[P:12224]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 13:10:08,384:[P:12224]:Rank[0/1] Module: Block, Output Shape: torch.Size([32, 3136, 64])
2025-01-22 13:10:08,384:[P:12224]:Rank[0/1] Module: VisionTransformer, Input[0] Shape: torch.Size([32, 3, 224, 224])
2025-01-22 13:10:08,384:[P:12224]:Rank[0/1] Module: VisionTransformer, Output[0] Shape: torch.Size([32, 64, 56, 56])
2025-01-22 13:10:08,384:[P:12224]:Rank[0/1] Module: VisionTransformer, Output[1] is of type <class 'NoneType'>
2025-01-22 13:10:08,792:[P:12224]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([32, 784, 192])
2025-01-22 13:10:08,792:[P:12224]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 13:10:08,793:[P:12224]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 13:10:08,793:[P:12224]:Rank[0/1] Module: Block, Output Shape: torch.Size([32, 784, 192])
2025-01-22 13:10:08,796:[P:12224]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([32, 784, 192])
2025-01-22 13:10:08,796:[P:12224]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 13:10:08,796:[P:12224]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 13:10:08,796:[P:12224]:Rank[0/1] Module: Block, Output Shape: torch.Size([32, 784, 192])
2025-01-22 13:10:08,796:[P:12224]:Rank[0/1] Module: VisionTransformer, Input[0] Shape: torch.Size([32, 64, 56, 56])
2025-01-22 13:10:08,797:[P:12224]:Rank[0/1] Module: VisionTransformer, Output[0] Shape: torch.Size([32, 192, 28, 28])
2025-01-22 13:10:08,797:[P:12224]:Rank[0/1] Module: VisionTransformer, Output[1] is of type <class 'NoneType'>
2025-01-22 13:10:09,325:[P:12224]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([32, 197, 384])
2025-01-22 13:10:09,325:[P:12224]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 13:10:09,325:[P:12224]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 13:10:09,325:[P:12224]:Rank[0/1] Module: Block, Output Shape: torch.Size([32, 197, 384])
2025-01-22 13:10:09,327:[P:12224]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([32, 197, 384])
2025-01-22 13:10:09,327:[P:12224]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 13:10:09,327:[P:12224]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 13:10:09,327:[P:12224]:Rank[0/1] Module: Block, Output Shape: torch.Size([32, 197, 384])
2025-01-22 13:10:09,329:[P:12224]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([32, 197, 384])
2025-01-22 13:10:09,329:[P:12224]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 13:10:09,329:[P:12224]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 13:10:09,329:[P:12224]:Rank[0/1] Module: Block, Output Shape: torch.Size([32, 197, 384])
2025-01-22 13:10:09,331:[P:12224]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([32, 197, 384])
2025-01-22 13:10:09,331:[P:12224]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 13:10:09,331:[P:12224]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 13:10:09,331:[P:12224]:Rank[0/1] Module: Block, Output Shape: torch.Size([32, 197, 384])
2025-01-22 13:10:09,333:[P:12224]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([32, 197, 384])
2025-01-22 13:10:09,333:[P:12224]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 13:10:09,333:[P:12224]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 13:10:09,333:[P:12224]:Rank[0/1] Module: Block, Output Shape: torch.Size([32, 197, 384])
2025-01-22 13:10:09,335:[P:12224]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([32, 197, 384])
2025-01-22 13:10:09,335:[P:12224]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 13:10:09,335:[P:12224]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 13:10:09,336:[P:12224]:Rank[0/1] Module: Block, Output Shape: torch.Size([32, 197, 384])
2025-01-22 13:10:09,337:[P:12224]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([32, 197, 384])
2025-01-22 13:10:09,337:[P:12224]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 13:10:09,337:[P:12224]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 13:10:09,338:[P:12224]:Rank[0/1] Module: Block, Output Shape: torch.Size([32, 197, 384])
2025-01-22 13:10:09,339:[P:12224]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([32, 197, 384])
2025-01-22 13:10:09,339:[P:12224]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 13:10:09,339:[P:12224]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 13:10:09,339:[P:12224]:Rank[0/1] Module: Block, Output Shape: torch.Size([32, 197, 384])
2025-01-22 13:10:09,341:[P:12224]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([32, 197, 384])
2025-01-22 13:10:09,341:[P:12224]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 13:10:09,342:[P:12224]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 13:10:09,342:[P:12224]:Rank[0/1] Module: Block, Output Shape: torch.Size([32, 197, 384])
2025-01-22 13:10:09,344:[P:12224]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([32, 197, 384])
2025-01-22 13:10:09,344:[P:12224]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 13:10:09,345:[P:12224]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 13:10:09,345:[P:12224]:Rank[0/1] Module: Block, Output Shape: torch.Size([32, 197, 384])
2025-01-22 13:10:09,345:[P:12224]:Rank[0/1] Module: VisionTransformer, Input[0] Shape: torch.Size([32, 192, 28, 28])
2025-01-22 13:10:09,345:[P:12224]:Rank[0/1] Module: VisionTransformer, Output[0] Shape: torch.Size([32, 384, 14, 14])
2025-01-22 13:10:09,345:[P:12224]:Rank[0/1] Module: VisionTransformer, Output[1] Shape: torch.Size([32, 1, 384])
2025-01-22 13:10:10,299:[P:12224]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([32, 3136, 64])
2025-01-22 13:10:10,299:[P:12224]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 13:10:10,299:[P:12224]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 13:10:10,299:[P:12224]:Rank[0/1] Module: Block, Output Shape: torch.Size([32, 3136, 64])
2025-01-22 13:10:10,299:[P:12224]:Rank[0/1] Module: VisionTransformer, Input[0] Shape: torch.Size([32, 3, 224, 224])
2025-01-22 13:10:10,299:[P:12224]:Rank[0/1] Module: VisionTransformer, Output[0] Shape: torch.Size([32, 64, 56, 56])
2025-01-22 13:10:10,300:[P:12224]:Rank[0/1] Module: VisionTransformer, Output[1] is of type <class 'NoneType'>
2025-01-22 13:10:10,301:[P:12224]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([32, 784, 192])
2025-01-22 13:10:10,301:[P:12224]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 13:10:10,301:[P:12224]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 13:10:10,301:[P:12224]:Rank[0/1] Module: Block, Output Shape: torch.Size([32, 784, 192])
2025-01-22 13:10:10,303:[P:12224]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([32, 784, 192])
2025-01-22 13:10:10,303:[P:12224]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 13:10:10,303:[P:12224]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 13:10:10,303:[P:12224]:Rank[0/1] Module: Block, Output Shape: torch.Size([32, 784, 192])
2025-01-22 13:10:10,303:[P:12224]:Rank[0/1] Module: VisionTransformer, Input[0] Shape: torch.Size([32, 64, 56, 56])
2025-01-22 13:10:10,303:[P:12224]:Rank[0/1] Module: VisionTransformer, Output[0] Shape: torch.Size([32, 192, 28, 28])
2025-01-22 13:10:10,303:[P:12224]:Rank[0/1] Module: VisionTransformer, Output[1] is of type <class 'NoneType'>
2025-01-22 13:10:10,305:[P:12224]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([32, 197, 384])
2025-01-22 13:10:10,306:[P:12224]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 13:10:10,306:[P:12224]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 13:10:10,306:[P:12224]:Rank[0/1] Module: Block, Output Shape: torch.Size([32, 197, 384])
2025-01-22 13:10:10,307:[P:12224]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([32, 197, 384])
2025-01-22 13:10:10,307:[P:12224]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 13:10:10,308:[P:12224]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 13:10:10,308:[P:12224]:Rank[0/1] Module: Block, Output Shape: torch.Size([32, 197, 384])
2025-01-22 13:10:10,309:[P:12224]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([32, 197, 384])
2025-01-22 13:10:10,309:[P:12224]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 13:10:10,309:[P:12224]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 13:10:10,309:[P:12224]:Rank[0/1] Module: Block, Output Shape: torch.Size([32, 197, 384])
2025-01-22 13:10:10,311:[P:12224]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([32, 197, 384])
2025-01-22 13:10:10,311:[P:12224]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 13:10:10,311:[P:12224]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 13:10:10,311:[P:12224]:Rank[0/1] Module: Block, Output Shape: torch.Size([32, 197, 384])
2025-01-22 13:10:10,313:[P:12224]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([32, 197, 384])
2025-01-22 13:10:10,313:[P:12224]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 13:10:10,313:[P:12224]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 13:10:10,313:[P:12224]:Rank[0/1] Module: Block, Output Shape: torch.Size([32, 197, 384])
2025-01-22 13:10:10,315:[P:12224]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([32, 197, 384])
2025-01-22 13:10:10,315:[P:12224]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 13:10:10,315:[P:12224]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 13:10:10,315:[P:12224]:Rank[0/1] Module: Block, Output Shape: torch.Size([32, 197, 384])
2025-01-22 13:10:10,317:[P:12224]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([32, 197, 384])
2025-01-22 13:10:10,317:[P:12224]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 13:10:10,317:[P:12224]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 13:10:10,317:[P:12224]:Rank[0/1] Module: Block, Output Shape: torch.Size([32, 197, 384])
2025-01-22 13:10:10,319:[P:12224]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([32, 197, 384])
2025-01-22 13:10:10,319:[P:12224]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 13:10:10,319:[P:12224]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 13:10:10,319:[P:12224]:Rank[0/1] Module: Block, Output Shape: torch.Size([32, 197, 384])
2025-01-22 13:10:10,321:[P:12224]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([32, 197, 384])
2025-01-22 13:10:10,321:[P:12224]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 13:10:10,321:[P:12224]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 13:10:10,321:[P:12224]:Rank[0/1] Module: Block, Output Shape: torch.Size([32, 197, 384])
2025-01-22 13:10:10,323:[P:12224]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([32, 197, 384])
2025-01-22 13:10:10,323:[P:12224]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 13:10:10,323:[P:12224]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 13:10:10,323:[P:12224]:Rank[0/1] Module: Block, Output Shape: torch.Size([32, 197, 384])
2025-01-22 13:10:10,323:[P:12224]:Rank[0/1] Module: VisionTransformer, Input[0] Shape: torch.Size([32, 192, 28, 28])
2025-01-22 13:10:10,324:[P:12224]:Rank[0/1] Module: VisionTransformer, Output[0] Shape: torch.Size([32, 384, 14, 14])
2025-01-22 13:10:10,324:[P:12224]:Rank[0/1] Module: VisionTransformer, Output[1] Shape: torch.Size([32, 1, 384])
2025-01-22 13:10:11,619:[P:12224]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([29, 3136, 64])
2025-01-22 13:10:11,619:[P:12224]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 13:10:11,619:[P:12224]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 13:10:11,619:[P:12224]:Rank[0/1] Module: Block, Output Shape: torch.Size([29, 3136, 64])
2025-01-22 13:10:11,619:[P:12224]:Rank[0/1] Module: VisionTransformer, Input[0] Shape: torch.Size([29, 3, 224, 224])
2025-01-22 13:10:11,619:[P:12224]:Rank[0/1] Module: VisionTransformer, Output[0] Shape: torch.Size([29, 64, 56, 56])
2025-01-22 13:10:11,619:[P:12224]:Rank[0/1] Module: VisionTransformer, Output[1] is of type <class 'NoneType'>
2025-01-22 13:10:11,896:[P:12224]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([29, 784, 192])
2025-01-22 13:10:11,896:[P:12224]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 13:10:11,896:[P:12224]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 13:10:11,896:[P:12224]:Rank[0/1] Module: Block, Output Shape: torch.Size([29, 784, 192])
2025-01-22 13:10:11,898:[P:12224]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([29, 784, 192])
2025-01-22 13:10:11,898:[P:12224]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 13:10:11,898:[P:12224]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 13:10:11,898:[P:12224]:Rank[0/1] Module: Block, Output Shape: torch.Size([29, 784, 192])
2025-01-22 13:10:11,898:[P:12224]:Rank[0/1] Module: VisionTransformer, Input[0] Shape: torch.Size([29, 64, 56, 56])
2025-01-22 13:10:11,898:[P:12224]:Rank[0/1] Module: VisionTransformer, Output[0] Shape: torch.Size([29, 192, 28, 28])
2025-01-22 13:10:11,898:[P:12224]:Rank[0/1] Module: VisionTransformer, Output[1] is of type <class 'NoneType'>
2025-01-22 13:10:12,369:[P:12224]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([29, 197, 384])
2025-01-22 13:10:12,369:[P:12224]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 13:10:12,369:[P:12224]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 13:10:12,369:[P:12224]:Rank[0/1] Module: Block, Output Shape: torch.Size([29, 197, 384])
2025-01-22 13:10:12,371:[P:12224]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([29, 197, 384])
2025-01-22 13:10:12,371:[P:12224]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 13:10:12,371:[P:12224]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 13:10:12,371:[P:12224]:Rank[0/1] Module: Block, Output Shape: torch.Size([29, 197, 384])
2025-01-22 13:10:12,373:[P:12224]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([29, 197, 384])
2025-01-22 13:10:12,373:[P:12224]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 13:10:12,373:[P:12224]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 13:10:12,373:[P:12224]:Rank[0/1] Module: Block, Output Shape: torch.Size([29, 197, 384])
2025-01-22 13:10:12,374:[P:12224]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([29, 197, 384])
2025-01-22 13:10:12,374:[P:12224]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 13:10:12,374:[P:12224]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 13:10:12,374:[P:12224]:Rank[0/1] Module: Block, Output Shape: torch.Size([29, 197, 384])
2025-01-22 13:10:12,376:[P:12224]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([29, 197, 384])
2025-01-22 13:10:12,376:[P:12224]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 13:10:12,376:[P:12224]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 13:10:12,376:[P:12224]:Rank[0/1] Module: Block, Output Shape: torch.Size([29, 197, 384])
2025-01-22 13:10:12,378:[P:12224]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([29, 197, 384])
2025-01-22 13:10:12,378:[P:12224]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 13:10:12,378:[P:12224]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 13:10:12,378:[P:12224]:Rank[0/1] Module: Block, Output Shape: torch.Size([29, 197, 384])
2025-01-22 13:10:12,380:[P:12224]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([29, 197, 384])
2025-01-22 13:10:12,380:[P:12224]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 13:10:12,380:[P:12224]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 13:10:12,380:[P:12224]:Rank[0/1] Module: Block, Output Shape: torch.Size([29, 197, 384])
2025-01-22 13:10:12,382:[P:12224]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([29, 197, 384])
2025-01-22 13:10:12,382:[P:12224]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 13:10:12,382:[P:12224]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 13:10:12,382:[P:12224]:Rank[0/1] Module: Block, Output Shape: torch.Size([29, 197, 384])
2025-01-22 13:10:12,385:[P:12224]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([29, 197, 384])
2025-01-22 13:10:12,385:[P:12224]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 13:10:12,385:[P:12224]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 13:10:12,385:[P:12224]:Rank[0/1] Module: Block, Output Shape: torch.Size([29, 197, 384])
2025-01-22 13:10:12,387:[P:12224]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([29, 197, 384])
2025-01-22 13:10:12,387:[P:12224]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 13:10:12,387:[P:12224]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 13:10:12,387:[P:12224]:Rank[0/1] Module: Block, Output Shape: torch.Size([29, 197, 384])
2025-01-22 13:10:12,387:[P:12224]:Rank[0/1] Module: VisionTransformer, Input[0] Shape: torch.Size([29, 192, 28, 28])
2025-01-22 13:10:12,387:[P:12224]:Rank[0/1] Module: VisionTransformer, Output[0] Shape: torch.Size([29, 384, 14, 14])
2025-01-22 13:10:12,387:[P:12224]:Rank[0/1] Module: VisionTransformer, Output[1] Shape: torch.Size([29, 1, 384])
2025-01-22 13:10:13,292:[P:12224]:Rank[0/1] => synchronize...
2025-01-22 13:10:13,293:[P:12224]:Rank[0/1] => TEST:	Loss 6.7187	Error@1 100.000%	Error@5 95.699%	Accuracy@1 0.000%	Accuracy@5 4.301%	
2025-01-22 13:10:13,293:[P:12224]:Rank[0/1] => switch to train mode
2025-01-22 13:10:13,294:[P:12224]:Rank[0/1] => Epoch[0]: validate end, duration: 6.03s
2025-01-22 13:10:13,294:[P:12224]:Rank[0/1] => lr: 5.0799999999999995e-05
2025-01-22 13:10:13,296:[P:12224]:Rank[0/1] => saving checkpoint to OUTPUT/imagenet/cvt-13-224x224
2025-01-22 13:10:13,687:[P:12224]:Rank[0/1] => Epoch[0]: epoch end, duration : 101.44s
2025-01-22 13:10:13,687:[P:12224]:Rank[0/1] => Epoch[1]: epoch start
2025-01-22 13:10:13,687:[P:12224]:Rank[0/1] => Epoch[1]: train start
2025-01-22 13:10:13,687:[P:12224]:Rank[0/1] => switch to train mode
2025-01-22 13:10:13,714:[P:12224]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 3136, 64])
2025-01-22 13:10:13,714:[P:12224]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 13:10:13,714:[P:12224]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 13:10:13,714:[P:12224]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 3136, 64])
2025-01-22 13:10:13,714:[P:12224]:Rank[0/1] Module: VisionTransformer, Input[0] Shape: torch.Size([64, 3, 224, 224])
2025-01-22 13:10:13,714:[P:12224]:Rank[0/1] Module: VisionTransformer, Output[0] Shape: torch.Size([64, 64, 56, 56])
2025-01-22 13:10:13,715:[P:12224]:Rank[0/1] Module: VisionTransformer, Output[1] is of type <class 'NoneType'>
2025-01-22 13:10:13,740:[P:12224]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 784, 192])
2025-01-22 13:10:13,740:[P:12224]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 13:10:13,740:[P:12224]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 13:10:13,741:[P:12224]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 784, 192])
2025-01-22 13:10:13,783:[P:12224]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 784, 192])
2025-01-22 13:10:13,783:[P:12224]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 13:10:13,783:[P:12224]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 13:10:13,783:[P:12224]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 784, 192])
2025-01-22 13:10:13,783:[P:12224]:Rank[0/1] Module: VisionTransformer, Input[0] Shape: torch.Size([64, 64, 56, 56])
2025-01-22 13:10:13,784:[P:12224]:Rank[0/1] Module: VisionTransformer, Output[0] Shape: torch.Size([64, 192, 28, 28])
2025-01-22 13:10:13,784:[P:12224]:Rank[0/1] Module: VisionTransformer, Output[1] is of type <class 'NoneType'>
2025-01-22 13:10:13,807:[P:12224]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 13:10:13,807:[P:12224]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 13:10:13,807:[P:12224]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 13:10:13,807:[P:12224]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 13:10:13,827:[P:12224]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 13:10:13,827:[P:12224]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 13:10:13,827:[P:12224]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 13:10:13,827:[P:12224]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 13:10:13,847:[P:12224]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 13:10:13,847:[P:12224]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 13:10:13,848:[P:12224]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 13:10:13,848:[P:12224]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 13:10:13,870:[P:12224]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 13:10:13,870:[P:12224]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 13:10:13,870:[P:12224]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 13:10:13,870:[P:12224]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 13:10:13,890:[P:12224]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 13:10:13,890:[P:12224]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 13:10:13,890:[P:12224]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 13:10:13,891:[P:12224]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 13:10:13,908:[P:12224]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 13:10:13,908:[P:12224]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 13:10:13,908:[P:12224]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 13:10:13,908:[P:12224]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 13:10:13,929:[P:12224]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 13:10:13,929:[P:12224]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 13:10:13,929:[P:12224]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 13:10:13,929:[P:12224]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 13:10:13,948:[P:12224]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 13:10:13,948:[P:12224]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 13:10:13,948:[P:12224]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 13:10:13,948:[P:12224]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 13:10:13,970:[P:12224]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 13:10:13,971:[P:12224]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 13:10:13,971:[P:12224]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 13:10:13,971:[P:12224]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 13:10:13,998:[P:12224]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 13:10:13,998:[P:12224]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 13:10:13,998:[P:12224]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 13:10:13,998:[P:12224]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 13:10:13,998:[P:12224]:Rank[0/1] Module: VisionTransformer, Input[0] Shape: torch.Size([64, 192, 28, 28])
2025-01-22 13:10:13,999:[P:12224]:Rank[0/1] Module: VisionTransformer, Output[0] Shape: torch.Size([64, 384, 14, 14])
2025-01-22 13:10:13,999:[P:12224]:Rank[0/1] Module: VisionTransformer, Output[1] Shape: torch.Size([64, 1, 384])
2025-01-22 13:10:20,277:[P:12224]:Rank[0/1] => Epoch[1][0/13]: Time 6.589s (6.589s)	Speed 9.7 samples/s	Data 0.004s (0.004s)	Loss 6.75303 (6.75303)	Accuracy@1 0.000 (0.000)	Accuracy@5 4.688 (4.688)	
2025-01-22 13:10:20,285:[P:12224]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 3136, 64])
2025-01-22 13:10:20,285:[P:12224]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 13:10:20,285:[P:12224]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 13:10:20,285:[P:12224]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 3136, 64])
2025-01-22 13:10:20,286:[P:12224]:Rank[0/1] Module: VisionTransformer, Input[0] Shape: torch.Size([64, 3, 224, 224])
2025-01-22 13:10:20,286:[P:12224]:Rank[0/1] Module: VisionTransformer, Output[0] Shape: torch.Size([64, 64, 56, 56])
2025-01-22 13:10:20,286:[P:12224]:Rank[0/1] Module: VisionTransformer, Output[1] is of type <class 'NoneType'>
2025-01-22 13:10:20,289:[P:12224]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 784, 192])
2025-01-22 13:10:20,290:[P:12224]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 13:10:20,290:[P:12224]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 13:10:20,290:[P:12224]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 784, 192])
2025-01-22 13:10:20,293:[P:12224]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 784, 192])
2025-01-22 13:10:20,293:[P:12224]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 13:10:20,293:[P:12224]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 13:10:20,293:[P:12224]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 784, 192])
2025-01-22 13:10:20,293:[P:12224]:Rank[0/1] Module: VisionTransformer, Input[0] Shape: torch.Size([64, 64, 56, 56])
2025-01-22 13:10:20,293:[P:12224]:Rank[0/1] Module: VisionTransformer, Output[0] Shape: torch.Size([64, 192, 28, 28])
2025-01-22 13:10:20,293:[P:12224]:Rank[0/1] Module: VisionTransformer, Output[1] is of type <class 'NoneType'>
2025-01-22 13:10:20,297:[P:12224]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 13:10:20,297:[P:12224]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 13:10:20,297:[P:12224]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 13:10:20,298:[P:12224]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 13:10:20,302:[P:12224]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 13:10:20,302:[P:12224]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 13:10:20,302:[P:12224]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 13:10:20,302:[P:12224]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 13:10:20,306:[P:12224]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 13:10:20,306:[P:12224]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 13:10:20,306:[P:12224]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 13:10:20,306:[P:12224]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 13:10:20,310:[P:12224]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 13:10:20,310:[P:12224]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 13:10:20,310:[P:12224]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 13:10:20,310:[P:12224]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 13:10:20,313:[P:12224]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 13:10:20,313:[P:12224]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 13:10:20,313:[P:12224]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 13:10:20,313:[P:12224]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 13:10:20,316:[P:12224]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 13:10:20,316:[P:12224]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 13:10:20,316:[P:12224]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 13:10:20,316:[P:12224]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 13:10:20,319:[P:12224]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 13:10:20,319:[P:12224]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 13:10:20,319:[P:12224]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 13:10:20,319:[P:12224]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 13:10:20,322:[P:12224]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 13:10:20,322:[P:12224]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 13:10:20,322:[P:12224]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 13:10:20,322:[P:12224]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 13:10:20,325:[P:12224]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 13:10:20,325:[P:12224]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 13:10:20,325:[P:12224]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 13:10:20,325:[P:12224]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 13:10:20,329:[P:12224]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 13:10:20,329:[P:12224]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 13:10:20,329:[P:12224]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 13:10:20,330:[P:12224]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 13:10:20,330:[P:12224]:Rank[0/1] Module: VisionTransformer, Input[0] Shape: torch.Size([64, 192, 28, 28])
2025-01-22 13:10:20,330:[P:12224]:Rank[0/1] Module: VisionTransformer, Output[0] Shape: torch.Size([64, 384, 14, 14])
2025-01-22 13:10:20,330:[P:12224]:Rank[0/1] Module: VisionTransformer, Output[1] Shape: torch.Size([64, 1, 384])
2025-01-22 13:10:26,991:[P:12224]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 3136, 64])
2025-01-22 13:10:26,991:[P:12224]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 13:10:26,991:[P:12224]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 13:10:26,991:[P:12224]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 3136, 64])
2025-01-22 13:10:26,992:[P:12224]:Rank[0/1] Module: VisionTransformer, Input[0] Shape: torch.Size([64, 3, 224, 224])
2025-01-22 13:10:26,992:[P:12224]:Rank[0/1] Module: VisionTransformer, Output[0] Shape: torch.Size([64, 64, 56, 56])
2025-01-22 13:10:26,992:[P:12224]:Rank[0/1] Module: VisionTransformer, Output[1] is of type <class 'NoneType'>
2025-01-22 13:10:26,994:[P:12224]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 784, 192])
2025-01-22 13:10:26,994:[P:12224]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 13:10:26,994:[P:12224]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 13:10:26,994:[P:12224]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 784, 192])
2025-01-22 13:10:26,997:[P:12224]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 784, 192])
2025-01-22 13:10:26,997:[P:12224]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 13:10:26,997:[P:12224]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 13:10:26,997:[P:12224]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 784, 192])
2025-01-22 13:10:26,997:[P:12224]:Rank[0/1] Module: VisionTransformer, Input[0] Shape: torch.Size([64, 64, 56, 56])
2025-01-22 13:10:26,997:[P:12224]:Rank[0/1] Module: VisionTransformer, Output[0] Shape: torch.Size([64, 192, 28, 28])
2025-01-22 13:10:26,997:[P:12224]:Rank[0/1] Module: VisionTransformer, Output[1] is of type <class 'NoneType'>
2025-01-22 13:10:27,000:[P:12224]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 13:10:27,000:[P:12224]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 13:10:27,000:[P:12224]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 13:10:27,000:[P:12224]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 13:10:27,004:[P:12224]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 13:10:27,004:[P:12224]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 13:10:27,004:[P:12224]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 13:10:27,004:[P:12224]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 13:10:27,008:[P:12224]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 13:10:27,008:[P:12224]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 13:10:27,008:[P:12224]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 13:10:27,008:[P:12224]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 13:10:27,012:[P:12224]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 13:10:27,012:[P:12224]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 13:10:27,012:[P:12224]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 13:10:27,012:[P:12224]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 13:10:27,016:[P:12224]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 13:10:27,016:[P:12224]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 13:10:27,016:[P:12224]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 13:10:27,017:[P:12224]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 13:10:27,020:[P:12224]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 13:10:27,020:[P:12224]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 13:10:27,021:[P:12224]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 13:10:27,021:[P:12224]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 13:10:27,024:[P:12224]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 13:10:27,024:[P:12224]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 13:10:27,024:[P:12224]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 13:10:27,025:[P:12224]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 13:10:27,028:[P:12224]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 13:10:27,028:[P:12224]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 13:10:27,028:[P:12224]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 13:10:27,028:[P:12224]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 13:10:27,032:[P:12224]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 13:10:27,032:[P:12224]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 13:10:27,032:[P:12224]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 13:10:27,032:[P:12224]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 13:10:27,036:[P:12224]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 13:10:27,037:[P:12224]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 13:10:27,037:[P:12224]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 13:10:27,037:[P:12224]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 13:10:27,037:[P:12224]:Rank[0/1] Module: VisionTransformer, Input[0] Shape: torch.Size([64, 192, 28, 28])
2025-01-22 13:10:27,037:[P:12224]:Rank[0/1] Module: VisionTransformer, Output[0] Shape: torch.Size([64, 384, 14, 14])
2025-01-22 13:10:27,037:[P:12224]:Rank[0/1] Module: VisionTransformer, Output[1] Shape: torch.Size([64, 1, 384])
2025-01-22 13:10:33,941:[P:12224]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 3136, 64])
2025-01-22 13:10:33,941:[P:12224]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 13:10:33,941:[P:12224]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 13:10:33,941:[P:12224]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 3136, 64])
2025-01-22 13:10:33,941:[P:12224]:Rank[0/1] Module: VisionTransformer, Input[0] Shape: torch.Size([64, 3, 224, 224])
2025-01-22 13:10:33,941:[P:12224]:Rank[0/1] Module: VisionTransformer, Output[0] Shape: torch.Size([64, 64, 56, 56])
2025-01-22 13:10:33,942:[P:12224]:Rank[0/1] Module: VisionTransformer, Output[1] is of type <class 'NoneType'>
2025-01-22 13:10:33,944:[P:12224]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 784, 192])
2025-01-22 13:10:33,944:[P:12224]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 13:10:33,945:[P:12224]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 13:10:33,945:[P:12224]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 784, 192])
2025-01-22 13:10:33,947:[P:12224]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 784, 192])
2025-01-22 13:10:33,947:[P:12224]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 13:10:33,947:[P:12224]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 13:10:33,947:[P:12224]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 784, 192])
2025-01-22 13:10:33,947:[P:12224]:Rank[0/1] Module: VisionTransformer, Input[0] Shape: torch.Size([64, 64, 56, 56])
2025-01-22 13:10:33,947:[P:12224]:Rank[0/1] Module: VisionTransformer, Output[0] Shape: torch.Size([64, 192, 28, 28])
2025-01-22 13:10:33,947:[P:12224]:Rank[0/1] Module: VisionTransformer, Output[1] is of type <class 'NoneType'>
2025-01-22 13:10:33,951:[P:12224]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 13:10:33,951:[P:12224]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 13:10:33,951:[P:12224]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 13:10:33,951:[P:12224]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 13:10:33,954:[P:12224]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 13:10:33,954:[P:12224]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 13:10:33,954:[P:12224]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 13:10:33,954:[P:12224]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 13:10:33,957:[P:12224]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 13:10:33,957:[P:12224]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 13:10:33,957:[P:12224]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 13:10:33,958:[P:12224]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 13:10:33,961:[P:12224]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 13:10:33,961:[P:12224]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 13:10:33,961:[P:12224]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 13:10:33,961:[P:12224]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 13:10:33,964:[P:12224]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 13:10:33,964:[P:12224]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 13:10:33,964:[P:12224]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 13:10:33,964:[P:12224]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 13:10:33,968:[P:12224]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 13:10:33,968:[P:12224]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 13:10:33,968:[P:12224]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 13:10:33,968:[P:12224]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 13:10:33,971:[P:12224]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 13:10:33,971:[P:12224]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 13:10:33,971:[P:12224]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 13:10:33,971:[P:12224]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 13:10:33,974:[P:12224]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 13:10:33,974:[P:12224]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 13:10:33,974:[P:12224]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 13:10:33,974:[P:12224]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 13:10:33,977:[P:12224]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 13:10:33,977:[P:12224]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 13:10:33,977:[P:12224]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 13:10:33,977:[P:12224]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 13:10:33,980:[P:12224]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 13:10:33,980:[P:12224]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 13:10:33,981:[P:12224]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 13:10:33,981:[P:12224]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 13:10:33,981:[P:12224]:Rank[0/1] Module: VisionTransformer, Input[0] Shape: torch.Size([64, 192, 28, 28])
2025-01-22 13:10:33,981:[P:12224]:Rank[0/1] Module: VisionTransformer, Output[0] Shape: torch.Size([64, 384, 14, 14])
2025-01-22 13:10:33,981:[P:12224]:Rank[0/1] Module: VisionTransformer, Output[1] Shape: torch.Size([64, 1, 384])
2025-01-22 13:10:41,686:[P:12224]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 3136, 64])
2025-01-22 13:10:41,686:[P:12224]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 13:10:41,686:[P:12224]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 13:10:41,686:[P:12224]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 3136, 64])
2025-01-22 13:10:41,686:[P:12224]:Rank[0/1] Module: VisionTransformer, Input[0] Shape: torch.Size([64, 3, 224, 224])
2025-01-22 13:10:41,686:[P:12224]:Rank[0/1] Module: VisionTransformer, Output[0] Shape: torch.Size([64, 64, 56, 56])
2025-01-22 13:10:41,686:[P:12224]:Rank[0/1] Module: VisionTransformer, Output[1] is of type <class 'NoneType'>
2025-01-22 13:10:41,689:[P:12224]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 784, 192])
2025-01-22 13:10:41,689:[P:12224]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 13:10:41,689:[P:12224]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 13:10:41,689:[P:12224]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 784, 192])
2025-01-22 13:10:41,692:[P:12224]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 784, 192])
2025-01-22 13:10:41,692:[P:12224]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 13:10:41,692:[P:12224]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 13:10:41,692:[P:12224]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 784, 192])
2025-01-22 13:10:41,692:[P:12224]:Rank[0/1] Module: VisionTransformer, Input[0] Shape: torch.Size([64, 64, 56, 56])
2025-01-22 13:10:41,692:[P:12224]:Rank[0/1] Module: VisionTransformer, Output[0] Shape: torch.Size([64, 192, 28, 28])
2025-01-22 13:10:41,692:[P:12224]:Rank[0/1] Module: VisionTransformer, Output[1] is of type <class 'NoneType'>
2025-01-22 13:10:41,697:[P:12224]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 13:10:41,697:[P:12224]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 13:10:41,697:[P:12224]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 13:10:41,698:[P:12224]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 13:10:41,701:[P:12224]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 13:10:41,702:[P:12224]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 13:10:41,702:[P:12224]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 13:10:41,702:[P:12224]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 13:10:41,705:[P:12224]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 13:10:41,705:[P:12224]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 13:10:41,705:[P:12224]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 13:10:41,706:[P:12224]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 13:10:41,709:[P:12224]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 13:10:41,710:[P:12224]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 13:10:41,710:[P:12224]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 13:10:41,710:[P:12224]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 13:10:41,713:[P:12224]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 13:10:41,714:[P:12224]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 13:10:41,714:[P:12224]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 13:10:41,714:[P:12224]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 13:10:41,717:[P:12224]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 13:10:41,718:[P:12224]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 13:10:41,718:[P:12224]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 13:10:41,718:[P:12224]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 13:10:41,721:[P:12224]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 13:10:41,721:[P:12224]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 13:10:41,722:[P:12224]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 13:10:41,722:[P:12224]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 13:10:41,726:[P:12224]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 13:10:41,726:[P:12224]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 13:10:41,726:[P:12224]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 13:10:41,726:[P:12224]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 13:10:41,729:[P:12224]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 13:10:41,729:[P:12224]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 13:10:41,729:[P:12224]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 13:10:41,730:[P:12224]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 13:10:41,733:[P:12224]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 13:10:41,733:[P:12224]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 13:10:41,733:[P:12224]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 13:10:41,733:[P:12224]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 13:10:41,733:[P:12224]:Rank[0/1] Module: VisionTransformer, Input[0] Shape: torch.Size([64, 192, 28, 28])
2025-01-22 13:10:41,733:[P:12224]:Rank[0/1] Module: VisionTransformer, Output[0] Shape: torch.Size([64, 384, 14, 14])
2025-01-22 13:10:41,734:[P:12224]:Rank[0/1] Module: VisionTransformer, Output[1] Shape: torch.Size([64, 1, 384])
