2025-01-22 10:59:45,398:[P:28900]:Rank[0/1] => collecting env info (might take some time)
2025-01-22 10:59:50,069:[P:28900]:Rank[0/1] 
PyTorch version: 1.7.1+cu110
Is debug build: False
CUDA used to build PyTorch: 11.0
ROCM used to build PyTorch: N/A

OS: Ubuntu 20.04.6 LTS (x86_64)
GCC version: (Ubuntu 9.4.0-1ubuntu1~20.04.1) 9.4.0
Clang version: Could not collect
CMake version: Could not collect

Python version: 3.9 (64-bit runtime)
Is CUDA available: True
CUDA runtime version: 10.1.243
GPU models and configuration: GPU 0: NVIDIA GeForce RTX 2070
Nvidia driver version: 536.23
cuDNN version: Could not collect
HIP runtime version: N/A
MIOpen runtime version: N/A

Versions of relevant libraries:
[pip3] numpy==1.19.3
[pip3] torch==1.7.1+cu110
[pip3] torchvision==0.8.2+cu110
[conda] _pytorch_select           0.1                       cpu_0  
[conda] blas                      1.0                         mkl  
[conda] cpuonly                   2.0                           0    pytorch
[conda] libmklml                  2019.0.5             h06a4308_0  
[conda] mkl                       2020.2                      256  
[conda] mkl-service               2.3.0            py39he8ac12f_0  
[conda] mkl_fft                   1.3.0            py39h54f3939_0  
[conda] mkl_random                1.0.2            py39h63df603_0  
[conda] numpy                     1.19.3                   pypi_0    pypi
[conda] pytorch-mutex             1.0                         cpu    pytorch
[conda] torch                     1.7.1+cu110              pypi_0    pypi
[conda] torchvision               0.8.2+cu110              pypi_0    pypi
2025-01-22 10:59:50,069:[P:28900]:Rank[0/1] Namespace(cfg='experiments/imagenet/cvt/cvt-13-224x224.yaml', local_rank=0, port=9000, opts=[], num_gpus=1, distributed=False)
2025-01-22 10:59:50,069:[P:28900]:Rank[0/1] AMP:
  ENABLED: True
  MEMORY_FORMAT: nchw
AUG:
  COLOR_JITTER: [0.4, 0.4, 0.4, 0.1, 0.0]
  DROPBLOCK_BLOCK_SIZE: 7
  DROPBLOCK_KEEP_PROB: 1.0
  DROPBLOCK_LAYERS: [3, 4]
  GAUSSIAN_BLUR: 0.0
  GRAY_SCALE: 0.0
  INTERPOLATION: 2
  MIXCUT: 1.0
  MIXCUT_AND_MIXUP: False
  MIXCUT_MINMAX: []
  MIXUP: 0.8
  MIXUP_MODE: batch
  MIXUP_PROB: 1.0
  MIXUP_SWITCH_PROB: 0.5
  RATIO: (0.75, 1.3333333333333333)
  SCALE: (0.08, 1.0)
  TIMM_AUG:
    AUTO_AUGMENT: rand-m9-mstd0.5-inc1
    COLOR_JITTER: 0.4
    HFLIP: 0.5
    INTERPOLATION: bicubic
    RE_COUNT: 1
    RE_MODE: pixel
    RE_PROB: 0.25
    RE_SPLIT: False
    USE_LOADER: True
    USE_TRANSFORM: False
    VFLIP: 0.0
BASE: ['']
CUDNN:
  BENCHMARK: True
  DETERMINISTIC: False
  ENABLED: True
DATASET:
  DATASET: imagenet
  DATA_FORMAT: jpg
  LABELMAP: 
  ROOT: DATASET/imagenet/
  SAMPLER: default
  TARGET_SIZE: -1
  TEST_SET: val
  TEST_TSV_LIST: []
  TRAIN_SET: train
  TRAIN_TSV_LIST: []
DATA_DIR: 
DEBUG:
  DEBUG: False
DIST_BACKEND: nccl
FINETUNE:
  BASE_LR: 0.003
  BATCH_SIZE: 512
  EVAL_EVERY: 3000
  FINETUNE: False
  FROZEN_LAYERS: []
  LR_SCHEDULER:
    DECAY_TYPE: step
  TRAIN_MODE: True
  USE_TRAIN_AUG: False
GPUS: (0,)
INPUT:
  MEAN: [0.485, 0.456, 0.406]
  STD: [0.229, 0.224, 0.225]
LOSS:
  LABEL_SMOOTHING: 0.1
  LOSS: softmax
MODEL:
  INIT_WEIGHTS: True
  NAME: cls_cvt
  NUM_CLASSES: 1000
  PRETRAINED: 
  PRETRAINED_LAYERS: ['*']
  SPEC:
    ATTN_DROP_RATE: [0.0, 0.0, 0.0]
    CLS_TOKEN: [False, False, True]
    DEPTH: [1, 2, 10]
    DIM_EMBED: [64, 192, 384]
    DROP_PATH_RATE: [0.0, 0.0, 0.1]
    DROP_RATE: [0.0, 0.0, 0.0]
    INIT: trunc_norm
    KERNEL_QKV: [3, 3, 3]
    MLP_RATIO: [4.0, 4.0, 4.0]
    NUM_HEADS: [1, 3, 6]
    NUM_STAGES: 3
    PADDING_KV: [1, 1, 1]
    PADDING_Q: [1, 1, 1]
    PATCH_PADDING: [2, 1, 1]
    PATCH_SIZE: [7, 3, 3]
    PATCH_STRIDE: [4, 2, 2]
    POS_EMBED: [False, False, False]
    QKV_BIAS: [True, True, True]
    QKV_PROJ_METHOD: ['dw_bn', 'dw_bn', 'dw_bn']
    STRIDE_KV: [2, 2, 2]
    STRIDE_Q: [1, 1, 1]
MODEL_SUMMARY: False
MULTIPROCESSING_DISTRIBUTED: True
NAME: cvt-13-224x224
OUTPUT_DIR: OUTPUT/
PIN_MEMORY: True
PRINT_FREQ: 500
RANK: 0
TEST:
  BATCH_SIZE_PER_GPU: 32
  CENTER_CROP: True
  IMAGE_SIZE: [224, 224]
  INTERPOLATION: 3
  MODEL_FILE: 
  REAL_LABELS: False
  VALID_LABELS: 
TRAIN:
  AUTO_RESUME: True
  BATCH_SIZE_PER_GPU: 64
  BEGIN_EPOCH: 0
  CHECKPOINT: 
  CLIP_GRAD_NORM: 0.0
  DETECT_ANOMALY: False
  END_EPOCH: 2
  EVAL_BEGIN_EPOCH: 0
  GAMMA1: 0.99
  GAMMA2: 0.0
  IMAGE_SIZE: [224, 224]
  LR: 0.00025
  LR_SCHEDULER:
    ARGS:
      cooldown_epochs: 10
      decay_rate: 0.1
      epochs: 2
      min_lr: 1e-05
      sched: cosine
      warmup_epochs: 5
      warmup_lr: 1e-06
    METHOD: timm
  MOMENTUM: 0.9
  NESTEROV: True
  OPTIMIZER: adamW
  OPTIMIZER_ARGS:
    
  SAVE_ALL_MODELS: False
  SCALE_LR: True
  SHUFFLE: True
  WD: 0.05
  WITHOUT_WD_LIST: ['bn', 'bias', 'ln']
VERBOSE: True
WORKERS: 6
2025-01-22 10:59:50,069:[P:28900]:Rank[0/1] => using 1 GPUs
2025-01-22 10:59:50,070:[P:28900]:Rank[0/1] => saving config into: OUTPUT/imagenet/cvt-13-224x224/config.yaml
2025-01-22 10:59:50,081:[P:28900]:Rank[0/1] => init weight of Linear from trunc norm
2025-01-22 10:59:50,081:[P:28900]:Rank[0/1] => init bias of Linear to zeros
2025-01-22 10:59:50,081:[P:28900]:Rank[0/1] => init weight of Linear from trunc norm
2025-01-22 10:59:50,081:[P:28900]:Rank[0/1] => init bias of Linear to zeros
2025-01-22 10:59:50,081:[P:28900]:Rank[0/1] => init weight of Linear from trunc norm
2025-01-22 10:59:50,082:[P:28900]:Rank[0/1] => init bias of Linear to zeros
2025-01-22 10:59:50,082:[P:28900]:Rank[0/1] => init weight of Linear from trunc norm
2025-01-22 10:59:50,082:[P:28900]:Rank[0/1] => init bias of Linear to zeros
2025-01-22 10:59:50,082:[P:28900]:Rank[0/1] => init weight of Linear from trunc norm
2025-01-22 10:59:50,082:[P:28900]:Rank[0/1] => init bias of Linear to zeros
2025-01-22 10:59:50,082:[P:28900]:Rank[0/1] => init weight of Linear from trunc norm
2025-01-22 10:59:50,083:[P:28900]:Rank[0/1] => init bias of Linear to zeros
2025-01-22 10:59:50,092:[P:28900]:Rank[0/1] => init weight of Linear from trunc norm
2025-01-22 10:59:50,093:[P:28900]:Rank[0/1] => init bias of Linear to zeros
2025-01-22 10:59:50,093:[P:28900]:Rank[0/1] => init weight of Linear from trunc norm
2025-01-22 10:59:50,093:[P:28900]:Rank[0/1] => init bias of Linear to zeros
2025-01-22 10:59:50,094:[P:28900]:Rank[0/1] => init weight of Linear from trunc norm
2025-01-22 10:59:50,094:[P:28900]:Rank[0/1] => init bias of Linear to zeros
2025-01-22 10:59:50,094:[P:28900]:Rank[0/1] => init weight of Linear from trunc norm
2025-01-22 10:59:50,095:[P:28900]:Rank[0/1] => init bias of Linear to zeros
2025-01-22 10:59:50,095:[P:28900]:Rank[0/1] => init weight of Linear from trunc norm
2025-01-22 10:59:50,096:[P:28900]:Rank[0/1] => init bias of Linear to zeros
2025-01-22 10:59:50,096:[P:28900]:Rank[0/1] => init weight of Linear from trunc norm
2025-01-22 10:59:50,097:[P:28900]:Rank[0/1] => init bias of Linear to zeros
2025-01-22 10:59:50,097:[P:28900]:Rank[0/1] => init weight of Linear from trunc norm
2025-01-22 10:59:50,097:[P:28900]:Rank[0/1] => init bias of Linear to zeros
2025-01-22 10:59:50,098:[P:28900]:Rank[0/1] => init weight of Linear from trunc norm
2025-01-22 10:59:50,098:[P:28900]:Rank[0/1] => init bias of Linear to zeros
2025-01-22 10:59:50,098:[P:28900]:Rank[0/1] => init weight of Linear from trunc norm
2025-01-22 10:59:50,098:[P:28900]:Rank[0/1] => init bias of Linear to zeros
2025-01-22 10:59:50,099:[P:28900]:Rank[0/1] => init weight of Linear from trunc norm
2025-01-22 10:59:50,099:[P:28900]:Rank[0/1] => init bias of Linear to zeros
2025-01-22 10:59:50,099:[P:28900]:Rank[0/1] => init weight of Linear from trunc norm
2025-01-22 10:59:50,100:[P:28900]:Rank[0/1] => init bias of Linear to zeros
2025-01-22 10:59:50,100:[P:28900]:Rank[0/1] => init weight of Linear from trunc norm
2025-01-22 10:59:50,101:[P:28900]:Rank[0/1] => init bias of Linear to zeros
2025-01-22 10:59:50,211:[P:28900]:Rank[0/1] => init weight of Linear from trunc norm
2025-01-22 10:59:50,212:[P:28900]:Rank[0/1] => init bias of Linear to zeros
2025-01-22 10:59:50,212:[P:28900]:Rank[0/1] => init weight of Linear from trunc norm
2025-01-22 10:59:50,213:[P:28900]:Rank[0/1] => init bias of Linear to zeros
2025-01-22 10:59:50,213:[P:28900]:Rank[0/1] => init weight of Linear from trunc norm
2025-01-22 10:59:50,214:[P:28900]:Rank[0/1] => init bias of Linear to zeros
2025-01-22 10:59:50,214:[P:28900]:Rank[0/1] => init weight of Linear from trunc norm
2025-01-22 10:59:50,215:[P:28900]:Rank[0/1] => init bias of Linear to zeros
2025-01-22 10:59:50,215:[P:28900]:Rank[0/1] => init weight of Linear from trunc norm
2025-01-22 10:59:50,218:[P:28900]:Rank[0/1] => init bias of Linear to zeros
2025-01-22 10:59:50,218:[P:28900]:Rank[0/1] => init weight of Linear from trunc norm
2025-01-22 10:59:50,222:[P:28900]:Rank[0/1] => init bias of Linear to zeros
2025-01-22 10:59:50,222:[P:28900]:Rank[0/1] => init weight of Linear from trunc norm
2025-01-22 10:59:50,223:[P:28900]:Rank[0/1] => init bias of Linear to zeros
2025-01-22 10:59:50,223:[P:28900]:Rank[0/1] => init weight of Linear from trunc norm
2025-01-22 10:59:50,224:[P:28900]:Rank[0/1] => init bias of Linear to zeros
2025-01-22 10:59:50,224:[P:28900]:Rank[0/1] => init weight of Linear from trunc norm
2025-01-22 10:59:50,225:[P:28900]:Rank[0/1] => init bias of Linear to zeros
2025-01-22 10:59:50,225:[P:28900]:Rank[0/1] => init weight of Linear from trunc norm
2025-01-22 10:59:50,226:[P:28900]:Rank[0/1] => init bias of Linear to zeros
2025-01-22 10:59:50,226:[P:28900]:Rank[0/1] => init weight of Linear from trunc norm
2025-01-22 10:59:50,229:[P:28900]:Rank[0/1] => init bias of Linear to zeros
2025-01-22 10:59:50,229:[P:28900]:Rank[0/1] => init weight of Linear from trunc norm
2025-01-22 10:59:50,232:[P:28900]:Rank[0/1] => init bias of Linear to zeros
2025-01-22 10:59:50,232:[P:28900]:Rank[0/1] => init weight of Linear from trunc norm
2025-01-22 10:59:50,233:[P:28900]:Rank[0/1] => init bias of Linear to zeros
2025-01-22 10:59:50,233:[P:28900]:Rank[0/1] => init weight of Linear from trunc norm
2025-01-22 10:59:50,234:[P:28900]:Rank[0/1] => init bias of Linear to zeros
2025-01-22 10:59:50,234:[P:28900]:Rank[0/1] => init weight of Linear from trunc norm
2025-01-22 10:59:50,236:[P:28900]:Rank[0/1] => init bias of Linear to zeros
2025-01-22 10:59:50,236:[P:28900]:Rank[0/1] => init weight of Linear from trunc norm
2025-01-22 10:59:50,237:[P:28900]:Rank[0/1] => init bias of Linear to zeros
2025-01-22 10:59:50,237:[P:28900]:Rank[0/1] => init weight of Linear from trunc norm
2025-01-22 10:59:50,241:[P:28900]:Rank[0/1] => init bias of Linear to zeros
2025-01-22 10:59:50,241:[P:28900]:Rank[0/1] => init weight of Linear from trunc norm
2025-01-22 10:59:50,244:[P:28900]:Rank[0/1] => init bias of Linear to zeros
2025-01-22 10:59:50,244:[P:28900]:Rank[0/1] => init weight of Linear from trunc norm
2025-01-22 10:59:50,245:[P:28900]:Rank[0/1] => init bias of Linear to zeros
2025-01-22 10:59:50,246:[P:28900]:Rank[0/1] => init weight of Linear from trunc norm
2025-01-22 10:59:50,246:[P:28900]:Rank[0/1] => init bias of Linear to zeros
2025-01-22 10:59:50,246:[P:28900]:Rank[0/1] => init weight of Linear from trunc norm
2025-01-22 10:59:50,247:[P:28900]:Rank[0/1] => init bias of Linear to zeros
2025-01-22 10:59:50,247:[P:28900]:Rank[0/1] => init weight of Linear from trunc norm
2025-01-22 10:59:50,249:[P:28900]:Rank[0/1] => init bias of Linear to zeros
2025-01-22 10:59:50,249:[P:28900]:Rank[0/1] => init weight of Linear from trunc norm
2025-01-22 10:59:50,253:[P:28900]:Rank[0/1] => init bias of Linear to zeros
2025-01-22 10:59:50,253:[P:28900]:Rank[0/1] => init weight of Linear from trunc norm
2025-01-22 10:59:50,256:[P:28900]:Rank[0/1] => init bias of Linear to zeros
2025-01-22 10:59:50,256:[P:28900]:Rank[0/1] => init weight of Linear from trunc norm
2025-01-22 10:59:50,257:[P:28900]:Rank[0/1] => init bias of Linear to zeros
2025-01-22 10:59:50,257:[P:28900]:Rank[0/1] => init weight of Linear from trunc norm
2025-01-22 10:59:50,258:[P:28900]:Rank[0/1] => init bias of Linear to zeros
2025-01-22 10:59:50,258:[P:28900]:Rank[0/1] => init weight of Linear from trunc norm
2025-01-22 10:59:50,259:[P:28900]:Rank[0/1] => init bias of Linear to zeros
2025-01-22 10:59:50,260:[P:28900]:Rank[0/1] => init weight of Linear from trunc norm
2025-01-22 10:59:50,261:[P:28900]:Rank[0/1] => init bias of Linear to zeros
2025-01-22 10:59:50,261:[P:28900]:Rank[0/1] => init weight of Linear from trunc norm
2025-01-22 10:59:50,264:[P:28900]:Rank[0/1] => init bias of Linear to zeros
2025-01-22 10:59:50,264:[P:28900]:Rank[0/1] => init weight of Linear from trunc norm
2025-01-22 10:59:50,268:[P:28900]:Rank[0/1] => init bias of Linear to zeros
2025-01-22 10:59:50,268:[P:28900]:Rank[0/1] => init weight of Linear from trunc norm
2025-01-22 10:59:50,269:[P:28900]:Rank[0/1] => init bias of Linear to zeros
2025-01-22 10:59:50,269:[P:28900]:Rank[0/1] => init weight of Linear from trunc norm
2025-01-22 10:59:50,270:[P:28900]:Rank[0/1] => init bias of Linear to zeros
2025-01-22 10:59:50,270:[P:28900]:Rank[0/1] => init weight of Linear from trunc norm
2025-01-22 10:59:50,271:[P:28900]:Rank[0/1] => init bias of Linear to zeros
2025-01-22 10:59:50,271:[P:28900]:Rank[0/1] => init weight of Linear from trunc norm
2025-01-22 10:59:50,272:[P:28900]:Rank[0/1] => init bias of Linear to zeros
2025-01-22 10:59:50,272:[P:28900]:Rank[0/1] => init weight of Linear from trunc norm
2025-01-22 10:59:50,276:[P:28900]:Rank[0/1] => init bias of Linear to zeros
2025-01-22 10:59:50,276:[P:28900]:Rank[0/1] => init weight of Linear from trunc norm
2025-01-22 10:59:50,279:[P:28900]:Rank[0/1] => init bias of Linear to zeros
2025-01-22 10:59:50,280:[P:28900]:Rank[0/1] => init weight of Linear from trunc norm
2025-01-22 10:59:50,281:[P:28900]:Rank[0/1] => init bias of Linear to zeros
2025-01-22 10:59:50,281:[P:28900]:Rank[0/1] => init weight of Linear from trunc norm
2025-01-22 10:59:50,282:[P:28900]:Rank[0/1] => init bias of Linear to zeros
2025-01-22 10:59:50,282:[P:28900]:Rank[0/1] => init weight of Linear from trunc norm
2025-01-22 10:59:50,284:[P:28900]:Rank[0/1] => init bias of Linear to zeros
2025-01-22 10:59:50,284:[P:28900]:Rank[0/1] => init weight of Linear from trunc norm
2025-01-22 10:59:50,285:[P:28900]:Rank[0/1] => init bias of Linear to zeros
2025-01-22 10:59:50,285:[P:28900]:Rank[0/1] => init weight of Linear from trunc norm
2025-01-22 10:59:50,289:[P:28900]:Rank[0/1] => init bias of Linear to zeros
2025-01-22 10:59:50,289:[P:28900]:Rank[0/1] => init weight of Linear from trunc norm
2025-01-22 10:59:50,293:[P:28900]:Rank[0/1] => init bias of Linear to zeros
2025-01-22 10:59:50,293:[P:28900]:Rank[0/1] => init weight of Linear from trunc norm
2025-01-22 10:59:50,295:[P:28900]:Rank[0/1] => init bias of Linear to zeros
2025-01-22 10:59:50,295:[P:28900]:Rank[0/1] => init weight of Linear from trunc norm
2025-01-22 10:59:50,296:[P:28900]:Rank[0/1] => init bias of Linear to zeros
2025-01-22 10:59:50,296:[P:28900]:Rank[0/1] => init weight of Linear from trunc norm
2025-01-22 10:59:50,297:[P:28900]:Rank[0/1] => init bias of Linear to zeros
2025-01-22 10:59:50,298:[P:28900]:Rank[0/1] => init weight of Linear from trunc norm
2025-01-22 10:59:50,299:[P:28900]:Rank[0/1] => init bias of Linear to zeros
2025-01-22 10:59:50,299:[P:28900]:Rank[0/1] => init weight of Linear from trunc norm
2025-01-22 10:59:50,303:[P:28900]:Rank[0/1] => init bias of Linear to zeros
2025-01-22 10:59:50,303:[P:28900]:Rank[0/1] => init weight of Linear from trunc norm
2025-01-22 10:59:50,307:[P:28900]:Rank[0/1] => init bias of Linear to zeros
2025-01-22 10:59:50,307:[P:28900]:Rank[0/1] => init weight of Linear from trunc norm
2025-01-22 10:59:50,308:[P:28900]:Rank[0/1] => init bias of Linear to zeros
2025-01-22 10:59:50,308:[P:28900]:Rank[0/1] => init weight of Linear from trunc norm
2025-01-22 10:59:50,309:[P:28900]:Rank[0/1] => init bias of Linear to zeros
2025-01-22 10:59:50,310:[P:28900]:Rank[0/1] => init weight of Linear from trunc norm
2025-01-22 10:59:50,311:[P:28900]:Rank[0/1] => init bias of Linear to zeros
2025-01-22 10:59:50,311:[P:28900]:Rank[0/1] => init weight of Linear from trunc norm
2025-01-22 10:59:50,312:[P:28900]:Rank[0/1] => init bias of Linear to zeros
2025-01-22 10:59:50,312:[P:28900]:Rank[0/1] => init weight of Linear from trunc norm
2025-01-22 10:59:50,316:[P:28900]:Rank[0/1] => init bias of Linear to zeros
2025-01-22 10:59:50,317:[P:28900]:Rank[0/1] => init weight of Linear from trunc norm
2025-01-22 10:59:50,320:[P:28900]:Rank[0/1] => init bias of Linear to zeros
2025-01-22 10:59:50,320:[P:28900]:Rank[0/1] => init weight of Linear from trunc norm
2025-01-22 10:59:50,322:[P:28900]:Rank[0/1] => init bias of Linear to zeros
2025-01-22 10:59:50,322:[P:28900]:Rank[0/1] => init weight of Linear from trunc norm
2025-01-22 10:59:50,322:[P:28900]:Rank[0/1] => init bias of Linear to zeros
2025-01-22 10:59:50,323:[P:28900]:Rank[0/1] => init weight of Linear from trunc norm
2025-01-22 10:59:50,324:[P:28900]:Rank[0/1] => init bias of Linear to zeros
2025-01-22 10:59:50,324:[P:28900]:Rank[0/1] => init weight of Linear from trunc norm
2025-01-22 10:59:50,325:[P:28900]:Rank[0/1] => init bias of Linear to zeros
2025-01-22 10:59:50,325:[P:28900]:Rank[0/1] => init weight of Linear from trunc norm
2025-01-22 10:59:50,329:[P:28900]:Rank[0/1] => init bias of Linear to zeros
2025-01-22 10:59:50,329:[P:28900]:Rank[0/1] => init weight of Linear from trunc norm
2025-01-22 10:59:50,333:[P:28900]:Rank[0/1] => init bias of Linear to zeros
2025-01-22 11:00:17,749:[P:28900]:Rank[0/1] => ConvolutionalVisionTransformer(
  (stage0): VisionTransformer(
    (patch_embed): ConvEmbed(
      (proj): Conv2d(3, 64, kernel_size=(7, 7), stride=(4, 4), padding=(2, 2))
      (norm): LayerNorm((64,), eps=1e-05, elementwise_affine=True)
    )
    (pos_drop): Dropout(p=0.0, inplace=False)
    (blocks): ModuleList(
      (0): Block(
        (norm1): LayerNorm((64,), eps=1e-05, elementwise_affine=True)
        (attn): Attention(
          (conv_proj_q): Sequential(
            (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64, bias=False)
            (bn): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (rearrage): Rearrange('b c h w -> b (h w) c')
          )
          (conv_proj_k): Sequential(
            (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=64, bias=False)
            (bn): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (rearrage): Rearrange('b c h w -> b (h w) c')
          )
          (conv_proj_v): Sequential(
            (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=64, bias=False)
            (bn): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (rearrage): Rearrange('b c h w -> b (h w) c')
          )
          (proj_q): Linear(in_features=64, out_features=64, bias=True)
          (proj_k): Linear(in_features=64, out_features=64, bias=True)
          (proj_v): Linear(in_features=64, out_features=64, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=64, out_features=64, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
        )
        (drop_path): Identity()
        (norm2): LayerNorm((64,), eps=1e-05, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=64, out_features=256, bias=True)
          (act): QuickGELU()
          (fc2): Linear(in_features=256, out_features=64, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
        )
      )
    )
  )
  (stage1): VisionTransformer(
    (patch_embed): ConvEmbed(
      (proj): Conv2d(64, 192, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
      (norm): LayerNorm((192,), eps=1e-05, elementwise_affine=True)
    )
    (pos_drop): Dropout(p=0.0, inplace=False)
    (blocks): ModuleList(
      (0): Block(
        (norm1): LayerNorm((192,), eps=1e-05, elementwise_affine=True)
        (attn): Attention(
          (conv_proj_q): Sequential(
            (conv): Conv2d(192, 192, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=192, bias=False)
            (bn): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (rearrage): Rearrange('b c h w -> b (h w) c')
          )
          (conv_proj_k): Sequential(
            (conv): Conv2d(192, 192, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=192, bias=False)
            (bn): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (rearrage): Rearrange('b c h w -> b (h w) c')
          )
          (conv_proj_v): Sequential(
            (conv): Conv2d(192, 192, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=192, bias=False)
            (bn): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (rearrage): Rearrange('b c h w -> b (h w) c')
          )
          (proj_q): Linear(in_features=192, out_features=192, bias=True)
          (proj_k): Linear(in_features=192, out_features=192, bias=True)
          (proj_v): Linear(in_features=192, out_features=192, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=192, out_features=192, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
        )
        (drop_path): Identity()
        (norm2): LayerNorm((192,), eps=1e-05, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=192, out_features=768, bias=True)
          (act): QuickGELU()
          (fc2): Linear(in_features=768, out_features=192, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
        )
      )
      (1): Block(
        (norm1): LayerNorm((192,), eps=1e-05, elementwise_affine=True)
        (attn): Attention(
          (conv_proj_q): Sequential(
            (conv): Conv2d(192, 192, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=192, bias=False)
            (bn): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (rearrage): Rearrange('b c h w -> b (h w) c')
          )
          (conv_proj_k): Sequential(
            (conv): Conv2d(192, 192, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=192, bias=False)
            (bn): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (rearrage): Rearrange('b c h w -> b (h w) c')
          )
          (conv_proj_v): Sequential(
            (conv): Conv2d(192, 192, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=192, bias=False)
            (bn): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (rearrage): Rearrange('b c h w -> b (h w) c')
          )
          (proj_q): Linear(in_features=192, out_features=192, bias=True)
          (proj_k): Linear(in_features=192, out_features=192, bias=True)
          (proj_v): Linear(in_features=192, out_features=192, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=192, out_features=192, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
        )
        (drop_path): Identity()
        (norm2): LayerNorm((192,), eps=1e-05, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=192, out_features=768, bias=True)
          (act): QuickGELU()
          (fc2): Linear(in_features=768, out_features=192, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
        )
      )
    )
  )
  (stage2): VisionTransformer(
    (patch_embed): ConvEmbed(
      (proj): Conv2d(192, 384, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
      (norm): LayerNorm((384,), eps=1e-05, elementwise_affine=True)
    )
    (pos_drop): Dropout(p=0.0, inplace=False)
    (blocks): ModuleList(
      (0): Block(
        (norm1): LayerNorm((384,), eps=1e-05, elementwise_affine=True)
        (attn): Attention(
          (conv_proj_q): Sequential(
            (conv): Conv2d(384, 384, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=384, bias=False)
            (bn): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (rearrage): Rearrange('b c h w -> b (h w) c')
          )
          (conv_proj_k): Sequential(
            (conv): Conv2d(384, 384, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=384, bias=False)
            (bn): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (rearrage): Rearrange('b c h w -> b (h w) c')
          )
          (conv_proj_v): Sequential(
            (conv): Conv2d(384, 384, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=384, bias=False)
            (bn): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (rearrage): Rearrange('b c h w -> b (h w) c')
          )
          (proj_q): Linear(in_features=384, out_features=384, bias=True)
          (proj_k): Linear(in_features=384, out_features=384, bias=True)
          (proj_v): Linear(in_features=384, out_features=384, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=384, out_features=384, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
        )
        (drop_path): Identity()
        (norm2): LayerNorm((384,), eps=1e-05, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=384, out_features=1536, bias=True)
          (act): QuickGELU()
          (fc2): Linear(in_features=1536, out_features=384, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
        )
      )
      (1): Block(
        (norm1): LayerNorm((384,), eps=1e-05, elementwise_affine=True)
        (attn): Attention(
          (conv_proj_q): Sequential(
            (conv): Conv2d(384, 384, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=384, bias=False)
            (bn): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (rearrage): Rearrange('b c h w -> b (h w) c')
          )
          (conv_proj_k): Sequential(
            (conv): Conv2d(384, 384, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=384, bias=False)
            (bn): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (rearrage): Rearrange('b c h w -> b (h w) c')
          )
          (conv_proj_v): Sequential(
            (conv): Conv2d(384, 384, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=384, bias=False)
            (bn): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (rearrage): Rearrange('b c h w -> b (h w) c')
          )
          (proj_q): Linear(in_features=384, out_features=384, bias=True)
          (proj_k): Linear(in_features=384, out_features=384, bias=True)
          (proj_v): Linear(in_features=384, out_features=384, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=384, out_features=384, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
        )
        (drop_path): DropPath()
        (norm2): LayerNorm((384,), eps=1e-05, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=384, out_features=1536, bias=True)
          (act): QuickGELU()
          (fc2): Linear(in_features=1536, out_features=384, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
        )
      )
      (2): Block(
        (norm1): LayerNorm((384,), eps=1e-05, elementwise_affine=True)
        (attn): Attention(
          (conv_proj_q): Sequential(
            (conv): Conv2d(384, 384, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=384, bias=False)
            (bn): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (rearrage): Rearrange('b c h w -> b (h w) c')
          )
          (conv_proj_k): Sequential(
            (conv): Conv2d(384, 384, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=384, bias=False)
            (bn): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (rearrage): Rearrange('b c h w -> b (h w) c')
          )
          (conv_proj_v): Sequential(
            (conv): Conv2d(384, 384, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=384, bias=False)
            (bn): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (rearrage): Rearrange('b c h w -> b (h w) c')
          )
          (proj_q): Linear(in_features=384, out_features=384, bias=True)
          (proj_k): Linear(in_features=384, out_features=384, bias=True)
          (proj_v): Linear(in_features=384, out_features=384, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=384, out_features=384, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
        )
        (drop_path): DropPath()
        (norm2): LayerNorm((384,), eps=1e-05, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=384, out_features=1536, bias=True)
          (act): QuickGELU()
          (fc2): Linear(in_features=1536, out_features=384, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
        )
      )
      (3): Block(
        (norm1): LayerNorm((384,), eps=1e-05, elementwise_affine=True)
        (attn): Attention(
          (conv_proj_q): Sequential(
            (conv): Conv2d(384, 384, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=384, bias=False)
            (bn): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (rearrage): Rearrange('b c h w -> b (h w) c')
          )
          (conv_proj_k): Sequential(
            (conv): Conv2d(384, 384, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=384, bias=False)
            (bn): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (rearrage): Rearrange('b c h w -> b (h w) c')
          )
          (conv_proj_v): Sequential(
            (conv): Conv2d(384, 384, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=384, bias=False)
            (bn): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (rearrage): Rearrange('b c h w -> b (h w) c')
          )
          (proj_q): Linear(in_features=384, out_features=384, bias=True)
          (proj_k): Linear(in_features=384, out_features=384, bias=True)
          (proj_v): Linear(in_features=384, out_features=384, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=384, out_features=384, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
        )
        (drop_path): DropPath()
        (norm2): LayerNorm((384,), eps=1e-05, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=384, out_features=1536, bias=True)
          (act): QuickGELU()
          (fc2): Linear(in_features=1536, out_features=384, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
        )
      )
      (4): Block(
        (norm1): LayerNorm((384,), eps=1e-05, elementwise_affine=True)
        (attn): Attention(
          (conv_proj_q): Sequential(
            (conv): Conv2d(384, 384, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=384, bias=False)
            (bn): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (rearrage): Rearrange('b c h w -> b (h w) c')
          )
          (conv_proj_k): Sequential(
            (conv): Conv2d(384, 384, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=384, bias=False)
            (bn): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (rearrage): Rearrange('b c h w -> b (h w) c')
          )
          (conv_proj_v): Sequential(
            (conv): Conv2d(384, 384, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=384, bias=False)
            (bn): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (rearrage): Rearrange('b c h w -> b (h w) c')
          )
          (proj_q): Linear(in_features=384, out_features=384, bias=True)
          (proj_k): Linear(in_features=384, out_features=384, bias=True)
          (proj_v): Linear(in_features=384, out_features=384, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=384, out_features=384, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
        )
        (drop_path): DropPath()
        (norm2): LayerNorm((384,), eps=1e-05, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=384, out_features=1536, bias=True)
          (act): QuickGELU()
          (fc2): Linear(in_features=1536, out_features=384, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
        )
      )
      (5): Block(
        (norm1): LayerNorm((384,), eps=1e-05, elementwise_affine=True)
        (attn): Attention(
          (conv_proj_q): Sequential(
            (conv): Conv2d(384, 384, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=384, bias=False)
            (bn): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (rearrage): Rearrange('b c h w -> b (h w) c')
          )
          (conv_proj_k): Sequential(
            (conv): Conv2d(384, 384, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=384, bias=False)
            (bn): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (rearrage): Rearrange('b c h w -> b (h w) c')
          )
          (conv_proj_v): Sequential(
            (conv): Conv2d(384, 384, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=384, bias=False)
            (bn): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (rearrage): Rearrange('b c h w -> b (h w) c')
          )
          (proj_q): Linear(in_features=384, out_features=384, bias=True)
          (proj_k): Linear(in_features=384, out_features=384, bias=True)
          (proj_v): Linear(in_features=384, out_features=384, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=384, out_features=384, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
        )
        (drop_path): DropPath()
        (norm2): LayerNorm((384,), eps=1e-05, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=384, out_features=1536, bias=True)
          (act): QuickGELU()
          (fc2): Linear(in_features=1536, out_features=384, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
        )
      )
      (6): Block(
        (norm1): LayerNorm((384,), eps=1e-05, elementwise_affine=True)
        (attn): Attention(
          (conv_proj_q): Sequential(
            (conv): Conv2d(384, 384, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=384, bias=False)
            (bn): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (rearrage): Rearrange('b c h w -> b (h w) c')
          )
          (conv_proj_k): Sequential(
            (conv): Conv2d(384, 384, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=384, bias=False)
            (bn): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (rearrage): Rearrange('b c h w -> b (h w) c')
          )
          (conv_proj_v): Sequential(
            (conv): Conv2d(384, 384, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=384, bias=False)
            (bn): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (rearrage): Rearrange('b c h w -> b (h w) c')
          )
          (proj_q): Linear(in_features=384, out_features=384, bias=True)
          (proj_k): Linear(in_features=384, out_features=384, bias=True)
          (proj_v): Linear(in_features=384, out_features=384, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=384, out_features=384, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
        )
        (drop_path): DropPath()
        (norm2): LayerNorm((384,), eps=1e-05, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=384, out_features=1536, bias=True)
          (act): QuickGELU()
          (fc2): Linear(in_features=1536, out_features=384, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
        )
      )
      (7): Block(
        (norm1): LayerNorm((384,), eps=1e-05, elementwise_affine=True)
        (attn): Attention(
          (conv_proj_q): Sequential(
            (conv): Conv2d(384, 384, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=384, bias=False)
            (bn): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (rearrage): Rearrange('b c h w -> b (h w) c')
          )
          (conv_proj_k): Sequential(
            (conv): Conv2d(384, 384, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=384, bias=False)
            (bn): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (rearrage): Rearrange('b c h w -> b (h w) c')
          )
          (conv_proj_v): Sequential(
            (conv): Conv2d(384, 384, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=384, bias=False)
            (bn): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (rearrage): Rearrange('b c h w -> b (h w) c')
          )
          (proj_q): Linear(in_features=384, out_features=384, bias=True)
          (proj_k): Linear(in_features=384, out_features=384, bias=True)
          (proj_v): Linear(in_features=384, out_features=384, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=384, out_features=384, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
        )
        (drop_path): DropPath()
        (norm2): LayerNorm((384,), eps=1e-05, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=384, out_features=1536, bias=True)
          (act): QuickGELU()
          (fc2): Linear(in_features=1536, out_features=384, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
        )
      )
      (8): Block(
        (norm1): LayerNorm((384,), eps=1e-05, elementwise_affine=True)
        (attn): Attention(
          (conv_proj_q): Sequential(
            (conv): Conv2d(384, 384, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=384, bias=False)
            (bn): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (rearrage): Rearrange('b c h w -> b (h w) c')
          )
          (conv_proj_k): Sequential(
            (conv): Conv2d(384, 384, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=384, bias=False)
            (bn): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (rearrage): Rearrange('b c h w -> b (h w) c')
          )
          (conv_proj_v): Sequential(
            (conv): Conv2d(384, 384, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=384, bias=False)
            (bn): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (rearrage): Rearrange('b c h w -> b (h w) c')
          )
          (proj_q): Linear(in_features=384, out_features=384, bias=True)
          (proj_k): Linear(in_features=384, out_features=384, bias=True)
          (proj_v): Linear(in_features=384, out_features=384, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=384, out_features=384, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
        )
        (drop_path): DropPath()
        (norm2): LayerNorm((384,), eps=1e-05, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=384, out_features=1536, bias=True)
          (act): QuickGELU()
          (fc2): Linear(in_features=1536, out_features=384, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
        )
      )
      (9): Block(
        (norm1): LayerNorm((384,), eps=1e-05, elementwise_affine=True)
        (attn): Attention(
          (conv_proj_q): Sequential(
            (conv): Conv2d(384, 384, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=384, bias=False)
            (bn): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (rearrage): Rearrange('b c h w -> b (h w) c')
          )
          (conv_proj_k): Sequential(
            (conv): Conv2d(384, 384, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=384, bias=False)
            (bn): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (rearrage): Rearrange('b c h w -> b (h w) c')
          )
          (conv_proj_v): Sequential(
            (conv): Conv2d(384, 384, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=384, bias=False)
            (bn): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (rearrage): Rearrange('b c h w -> b (h w) c')
          )
          (proj_q): Linear(in_features=384, out_features=384, bias=True)
          (proj_k): Linear(in_features=384, out_features=384, bias=True)
          (proj_v): Linear(in_features=384, out_features=384, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=384, out_features=384, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
        )
        (drop_path): DropPath()
        (norm2): LayerNorm((384,), eps=1e-05, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=384, out_features=1536, bias=True)
          (act): QuickGELU()
          (fc2): Linear(in_features=1536, out_features=384, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
        )
      )
    )
  )
  (norm): LayerNorm((384,), eps=1e-05, elementwise_affine=True)
  (head): Linear(in_features=384, out_features=1000, bias=True)
)
2025-01-22 11:00:17,751:[P:28900]:Rank[0/1] Trainable Model Total Parameter: 	20.0M
2025-01-22 11:00:17,764:[P:28900]:Rank[0/1] => use timm loader for training
2025-01-22 11:00:17,866:[P:28900]:Rank[0/1] => start training
2025-01-22 11:00:17,866:[P:28900]:Rank[0/1] => Epoch[0]: epoch start
2025-01-22 11:00:17,866:[P:28900]:Rank[0/1] => Epoch[0]: train start
2025-01-22 11:00:17,867:[P:28900]:Rank[0/1] => switch to train mode
2025-01-22 11:00:18,694:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 3136, 64])
2025-01-22 11:00:18,694:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:00:18,694:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:00:18,694:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 3136, 64])
2025-01-22 11:00:18,694:[P:28900]:Rank[0/1] Module: VisionTransformer, Input[0] Shape: torch.Size([64, 3, 224, 224])
2025-01-22 11:00:18,694:[P:28900]:Rank[0/1] Module: VisionTransformer, Output[0] Shape: torch.Size([64, 64, 56, 56])
2025-01-22 11:00:18,694:[P:28900]:Rank[0/1] Module: VisionTransformer, Output[1] is of type <class 'NoneType'>
2025-01-22 11:00:18,921:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 784, 192])
2025-01-22 11:00:18,921:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:00:18,921:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:00:18,921:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 784, 192])
2025-01-22 11:00:18,951:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 784, 192])
2025-01-22 11:00:18,951:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:00:18,951:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:00:18,951:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 784, 192])
2025-01-22 11:00:18,951:[P:28900]:Rank[0/1] Module: VisionTransformer, Input[0] Shape: torch.Size([64, 64, 56, 56])
2025-01-22 11:00:18,951:[P:28900]:Rank[0/1] Module: VisionTransformer, Output[0] Shape: torch.Size([64, 192, 28, 28])
2025-01-22 11:00:18,951:[P:28900]:Rank[0/1] Module: VisionTransformer, Output[1] is of type <class 'NoneType'>
2025-01-22 11:00:19,694:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 11:00:19,694:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:00:19,694:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:00:19,694:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 11:00:19,716:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 11:00:19,716:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:00:19,716:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:00:19,716:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 11:00:19,734:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 11:00:19,734:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:00:19,734:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:00:19,734:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 11:00:19,751:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 11:00:19,751:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:00:19,751:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:00:19,752:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 11:00:19,780:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 11:00:19,780:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:00:19,780:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:00:19,780:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 11:00:19,801:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 11:00:19,801:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:00:19,801:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:00:19,801:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 11:00:19,822:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 11:00:19,823:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:00:19,823:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:00:19,823:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 11:00:19,841:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 11:00:19,841:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:00:19,841:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:00:19,842:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 11:00:19,860:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 11:00:19,860:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:00:19,860:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:00:19,860:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 11:00:19,876:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 11:00:19,876:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:00:19,877:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:00:19,877:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 11:00:19,877:[P:28900]:Rank[0/1] Module: VisionTransformer, Input[0] Shape: torch.Size([64, 192, 28, 28])
2025-01-22 11:00:19,877:[P:28900]:Rank[0/1] Module: VisionTransformer, Output[0] Shape: torch.Size([64, 384, 14, 14])
2025-01-22 11:00:19,877:[P:28900]:Rank[0/1] Module: VisionTransformer, Output[1] Shape: torch.Size([64, 1, 384])
2025-01-22 11:00:42,375:[P:28900]:Rank[0/1] => Epoch[0][0/13]: Time 24.507s (24.507s)	Speed 2.6 samples/s	Data 0.512s (0.512s)	Loss 6.98242 (6.98242)	Accuracy@1 0.000 (0.000)	Accuracy@5 0.000 (0.000)	
2025-01-22 11:00:42,396:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 3136, 64])
2025-01-22 11:00:42,396:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:00:42,396:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:00:42,396:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 3136, 64])
2025-01-22 11:00:42,396:[P:28900]:Rank[0/1] Module: VisionTransformer, Input[0] Shape: torch.Size([64, 3, 224, 224])
2025-01-22 11:00:42,396:[P:28900]:Rank[0/1] Module: VisionTransformer, Output[0] Shape: torch.Size([64, 64, 56, 56])
2025-01-22 11:00:42,396:[P:28900]:Rank[0/1] Module: VisionTransformer, Output[1] is of type <class 'NoneType'>
2025-01-22 11:00:42,407:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 784, 192])
2025-01-22 11:00:42,407:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:00:42,408:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:00:42,408:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 784, 192])
2025-01-22 11:00:42,417:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 784, 192])
2025-01-22 11:00:42,417:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:00:42,417:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:00:42,417:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 784, 192])
2025-01-22 11:00:42,417:[P:28900]:Rank[0/1] Module: VisionTransformer, Input[0] Shape: torch.Size([64, 64, 56, 56])
2025-01-22 11:00:42,417:[P:28900]:Rank[0/1] Module: VisionTransformer, Output[0] Shape: torch.Size([64, 192, 28, 28])
2025-01-22 11:00:42,417:[P:28900]:Rank[0/1] Module: VisionTransformer, Output[1] is of type <class 'NoneType'>
2025-01-22 11:00:42,426:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 11:00:42,426:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:00:42,426:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:00:42,426:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 11:00:42,436:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 11:00:42,436:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:00:42,436:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:00:42,436:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 11:00:42,456:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 11:00:42,456:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:00:42,456:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:00:42,457:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 11:00:42,485:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 11:00:42,485:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:00:42,485:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:00:42,485:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 11:00:42,509:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 11:00:42,509:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:00:42,509:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:00:42,509:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 11:00:42,530:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 11:00:42,530:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:00:42,530:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:00:42,530:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 11:00:42,549:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 11:00:42,550:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:00:42,550:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:00:42,550:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 11:00:42,575:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 11:00:42,575:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:00:42,575:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:00:42,575:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 11:00:42,594:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 11:00:42,594:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:00:42,595:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:00:42,595:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 11:00:42,610:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 11:00:42,610:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:00:42,610:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:00:42,610:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 11:00:42,610:[P:28900]:Rank[0/1] Module: VisionTransformer, Input[0] Shape: torch.Size([64, 192, 28, 28])
2025-01-22 11:00:42,611:[P:28900]:Rank[0/1] Module: VisionTransformer, Output[0] Shape: torch.Size([64, 384, 14, 14])
2025-01-22 11:00:42,611:[P:28900]:Rank[0/1] Module: VisionTransformer, Output[1] Shape: torch.Size([64, 1, 384])
2025-01-22 11:00:48,984:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 3136, 64])
2025-01-22 11:00:48,984:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:00:48,984:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:00:48,984:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 3136, 64])
2025-01-22 11:00:48,984:[P:28900]:Rank[0/1] Module: VisionTransformer, Input[0] Shape: torch.Size([64, 3, 224, 224])
2025-01-22 11:00:48,984:[P:28900]:Rank[0/1] Module: VisionTransformer, Output[0] Shape: torch.Size([64, 64, 56, 56])
2025-01-22 11:00:48,984:[P:28900]:Rank[0/1] Module: VisionTransformer, Output[1] is of type <class 'NoneType'>
2025-01-22 11:00:48,987:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 784, 192])
2025-01-22 11:00:48,987:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:00:48,987:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:00:48,987:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 784, 192])
2025-01-22 11:00:48,990:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 784, 192])
2025-01-22 11:00:48,990:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:00:48,990:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:00:48,990:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 784, 192])
2025-01-22 11:00:48,990:[P:28900]:Rank[0/1] Module: VisionTransformer, Input[0] Shape: torch.Size([64, 64, 56, 56])
2025-01-22 11:00:48,990:[P:28900]:Rank[0/1] Module: VisionTransformer, Output[0] Shape: torch.Size([64, 192, 28, 28])
2025-01-22 11:00:48,990:[P:28900]:Rank[0/1] Module: VisionTransformer, Output[1] is of type <class 'NoneType'>
2025-01-22 11:00:48,993:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 11:00:48,994:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:00:48,994:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:00:48,994:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 11:00:48,997:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 11:00:48,997:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:00:48,997:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:00:48,997:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 11:00:49,001:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 11:00:49,001:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:00:49,001:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:00:49,001:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 11:00:49,003:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 11:00:49,004:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:00:49,004:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:00:49,004:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 11:00:49,007:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 11:00:49,007:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:00:49,007:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:00:49,007:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 11:00:49,010:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 11:00:49,010:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:00:49,010:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:00:49,010:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 11:00:49,013:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 11:00:49,014:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:00:49,014:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:00:49,014:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 11:00:49,017:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 11:00:49,017:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:00:49,017:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:00:49,017:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 11:00:49,020:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 11:00:49,020:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:00:49,020:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:00:49,020:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 11:00:49,024:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 11:00:49,024:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:00:49,024:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:00:49,024:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 11:00:49,025:[P:28900]:Rank[0/1] Module: VisionTransformer, Input[0] Shape: torch.Size([64, 192, 28, 28])
2025-01-22 11:00:49,025:[P:28900]:Rank[0/1] Module: VisionTransformer, Output[0] Shape: torch.Size([64, 384, 14, 14])
2025-01-22 11:00:49,025:[P:28900]:Rank[0/1] Module: VisionTransformer, Output[1] Shape: torch.Size([64, 1, 384])
2025-01-22 11:00:56,235:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 3136, 64])
2025-01-22 11:00:56,235:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:00:56,235:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:00:56,236:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 3136, 64])
2025-01-22 11:00:56,236:[P:28900]:Rank[0/1] Module: VisionTransformer, Input[0] Shape: torch.Size([64, 3, 224, 224])
2025-01-22 11:00:56,236:[P:28900]:Rank[0/1] Module: VisionTransformer, Output[0] Shape: torch.Size([64, 64, 56, 56])
2025-01-22 11:00:56,236:[P:28900]:Rank[0/1] Module: VisionTransformer, Output[1] is of type <class 'NoneType'>
2025-01-22 11:00:56,238:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 784, 192])
2025-01-22 11:00:56,238:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:00:56,238:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:00:56,238:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 784, 192])
2025-01-22 11:00:56,241:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 784, 192])
2025-01-22 11:00:56,241:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:00:56,241:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:00:56,241:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 784, 192])
2025-01-22 11:00:56,241:[P:28900]:Rank[0/1] Module: VisionTransformer, Input[0] Shape: torch.Size([64, 64, 56, 56])
2025-01-22 11:00:56,241:[P:28900]:Rank[0/1] Module: VisionTransformer, Output[0] Shape: torch.Size([64, 192, 28, 28])
2025-01-22 11:00:56,241:[P:28900]:Rank[0/1] Module: VisionTransformer, Output[1] is of type <class 'NoneType'>
2025-01-22 11:00:56,244:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 11:00:56,244:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:00:56,244:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:00:56,245:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 11:00:56,248:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 11:00:56,248:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:00:56,248:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:00:56,248:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 11:00:56,251:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 11:00:56,251:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:00:56,251:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:00:56,251:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 11:00:56,254:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 11:00:56,254:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:00:56,254:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:00:56,254:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 11:00:56,257:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 11:00:56,257:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:00:56,257:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:00:56,257:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 11:00:56,260:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 11:00:56,260:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:00:56,260:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:00:56,260:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 11:00:56,263:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 11:00:56,263:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:00:56,263:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:00:56,263:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 11:00:56,266:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 11:00:56,266:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:00:56,266:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:00:56,266:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 11:00:56,269:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 11:00:56,269:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:00:56,269:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:00:56,269:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 11:00:56,272:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 11:00:56,272:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:00:56,272:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:00:56,272:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 11:00:56,273:[P:28900]:Rank[0/1] Module: VisionTransformer, Input[0] Shape: torch.Size([64, 192, 28, 28])
2025-01-22 11:00:56,273:[P:28900]:Rank[0/1] Module: VisionTransformer, Output[0] Shape: torch.Size([64, 384, 14, 14])
2025-01-22 11:00:56,273:[P:28900]:Rank[0/1] Module: VisionTransformer, Output[1] Shape: torch.Size([64, 1, 384])
2025-01-22 11:01:03,623:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 3136, 64])
2025-01-22 11:01:03,623:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:01:03,623:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:01:03,623:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 3136, 64])
2025-01-22 11:01:03,623:[P:28900]:Rank[0/1] Module: VisionTransformer, Input[0] Shape: torch.Size([64, 3, 224, 224])
2025-01-22 11:01:03,623:[P:28900]:Rank[0/1] Module: VisionTransformer, Output[0] Shape: torch.Size([64, 64, 56, 56])
2025-01-22 11:01:03,623:[P:28900]:Rank[0/1] Module: VisionTransformer, Output[1] is of type <class 'NoneType'>
2025-01-22 11:01:03,626:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 784, 192])
2025-01-22 11:01:03,626:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:01:03,626:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:01:03,627:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 784, 192])
2025-01-22 11:01:03,629:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 784, 192])
2025-01-22 11:01:03,629:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:01:03,629:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:01:03,629:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 784, 192])
2025-01-22 11:01:03,629:[P:28900]:Rank[0/1] Module: VisionTransformer, Input[0] Shape: torch.Size([64, 64, 56, 56])
2025-01-22 11:01:03,630:[P:28900]:Rank[0/1] Module: VisionTransformer, Output[0] Shape: torch.Size([64, 192, 28, 28])
2025-01-22 11:01:03,630:[P:28900]:Rank[0/1] Module: VisionTransformer, Output[1] is of type <class 'NoneType'>
2025-01-22 11:01:03,634:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 11:01:03,634:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:01:03,634:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:01:03,634:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 11:01:03,637:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 11:01:03,637:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:01:03,637:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:01:03,637:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 11:01:03,642:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 11:01:03,642:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:01:03,642:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:01:03,642:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 11:01:03,646:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 11:01:03,647:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:01:03,647:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:01:03,647:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 11:01:03,651:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 11:01:03,651:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:01:03,651:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:01:03,651:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 11:01:03,655:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 11:01:03,655:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:01:03,655:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:01:03,655:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 11:01:03,658:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 11:01:03,658:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:01:03,658:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:01:03,658:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 11:01:03,661:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 11:01:03,661:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:01:03,661:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:01:03,661:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 11:01:03,664:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 11:01:03,664:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:01:03,664:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:01:03,664:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 11:01:03,667:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 11:01:03,667:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:01:03,667:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:01:03,667:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 11:01:03,668:[P:28900]:Rank[0/1] Module: VisionTransformer, Input[0] Shape: torch.Size([64, 192, 28, 28])
2025-01-22 11:01:03,668:[P:28900]:Rank[0/1] Module: VisionTransformer, Output[0] Shape: torch.Size([64, 384, 14, 14])
2025-01-22 11:01:03,668:[P:28900]:Rank[0/1] Module: VisionTransformer, Output[1] Shape: torch.Size([64, 1, 384])
2025-01-22 11:01:10,771:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 3136, 64])
2025-01-22 11:01:10,772:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:01:10,772:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:01:10,772:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 3136, 64])
2025-01-22 11:01:10,772:[P:28900]:Rank[0/1] Module: VisionTransformer, Input[0] Shape: torch.Size([64, 3, 224, 224])
2025-01-22 11:01:10,772:[P:28900]:Rank[0/1] Module: VisionTransformer, Output[0] Shape: torch.Size([64, 64, 56, 56])
2025-01-22 11:01:10,772:[P:28900]:Rank[0/1] Module: VisionTransformer, Output[1] is of type <class 'NoneType'>
2025-01-22 11:01:10,774:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 784, 192])
2025-01-22 11:01:10,775:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:01:10,775:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:01:10,775:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 784, 192])
2025-01-22 11:01:10,777:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 784, 192])
2025-01-22 11:01:10,777:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:01:10,777:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:01:10,777:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 784, 192])
2025-01-22 11:01:10,777:[P:28900]:Rank[0/1] Module: VisionTransformer, Input[0] Shape: torch.Size([64, 64, 56, 56])
2025-01-22 11:01:10,777:[P:28900]:Rank[0/1] Module: VisionTransformer, Output[0] Shape: torch.Size([64, 192, 28, 28])
2025-01-22 11:01:10,777:[P:28900]:Rank[0/1] Module: VisionTransformer, Output[1] is of type <class 'NoneType'>
2025-01-22 11:01:10,780:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 11:01:10,780:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:01:10,780:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:01:10,780:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 11:01:10,783:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 11:01:10,783:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:01:10,783:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:01:10,783:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 11:01:10,787:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 11:01:10,787:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:01:10,787:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:01:10,787:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 11:01:10,790:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 11:01:10,790:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:01:10,790:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:01:10,790:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 11:01:10,793:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 11:01:10,793:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:01:10,793:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:01:10,793:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 11:01:10,796:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 11:01:10,796:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:01:10,796:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:01:10,796:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 11:01:10,798:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 11:01:10,799:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:01:10,799:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:01:10,799:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 11:01:10,802:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 11:01:10,802:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:01:10,802:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:01:10,802:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 11:01:10,805:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 11:01:10,805:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:01:10,805:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:01:10,805:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 11:01:10,807:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 11:01:10,808:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:01:10,808:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:01:10,808:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 11:01:10,808:[P:28900]:Rank[0/1] Module: VisionTransformer, Input[0] Shape: torch.Size([64, 192, 28, 28])
2025-01-22 11:01:10,808:[P:28900]:Rank[0/1] Module: VisionTransformer, Output[0] Shape: torch.Size([64, 384, 14, 14])
2025-01-22 11:01:10,808:[P:28900]:Rank[0/1] Module: VisionTransformer, Output[1] Shape: torch.Size([64, 1, 384])
2025-01-22 11:01:17,855:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 3136, 64])
2025-01-22 11:01:17,856:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:01:17,856:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:01:17,856:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 3136, 64])
2025-01-22 11:01:17,856:[P:28900]:Rank[0/1] Module: VisionTransformer, Input[0] Shape: torch.Size([64, 3, 224, 224])
2025-01-22 11:01:17,856:[P:28900]:Rank[0/1] Module: VisionTransformer, Output[0] Shape: torch.Size([64, 64, 56, 56])
2025-01-22 11:01:17,856:[P:28900]:Rank[0/1] Module: VisionTransformer, Output[1] is of type <class 'NoneType'>
2025-01-22 11:01:17,859:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 784, 192])
2025-01-22 11:01:17,859:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:01:17,859:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:01:17,859:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 784, 192])
2025-01-22 11:01:17,862:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 784, 192])
2025-01-22 11:01:17,862:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:01:17,862:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:01:17,862:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 784, 192])
2025-01-22 11:01:17,862:[P:28900]:Rank[0/1] Module: VisionTransformer, Input[0] Shape: torch.Size([64, 64, 56, 56])
2025-01-22 11:01:17,862:[P:28900]:Rank[0/1] Module: VisionTransformer, Output[0] Shape: torch.Size([64, 192, 28, 28])
2025-01-22 11:01:17,863:[P:28900]:Rank[0/1] Module: VisionTransformer, Output[1] is of type <class 'NoneType'>
2025-01-22 11:01:17,866:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 11:01:17,866:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:01:17,866:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:01:17,866:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 11:01:17,871:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 11:01:17,871:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:01:17,871:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:01:17,871:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 11:01:17,874:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 11:01:17,874:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:01:17,874:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:01:17,874:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 11:01:17,877:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 11:01:17,877:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:01:17,877:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:01:17,877:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 11:01:17,880:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 11:01:17,880:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:01:17,880:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:01:17,881:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 11:01:17,884:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 11:01:17,884:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:01:17,884:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:01:17,884:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 11:01:17,887:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 11:01:17,887:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:01:17,887:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:01:17,887:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 11:01:17,890:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 11:01:17,891:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:01:17,891:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:01:17,891:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 11:01:17,894:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 11:01:17,894:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:01:17,894:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:01:17,894:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 11:01:17,897:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 11:01:17,897:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:01:17,897:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:01:17,897:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 11:01:17,897:[P:28900]:Rank[0/1] Module: VisionTransformer, Input[0] Shape: torch.Size([64, 192, 28, 28])
2025-01-22 11:01:17,898:[P:28900]:Rank[0/1] Module: VisionTransformer, Output[0] Shape: torch.Size([64, 384, 14, 14])
2025-01-22 11:01:17,898:[P:28900]:Rank[0/1] Module: VisionTransformer, Output[1] Shape: torch.Size([64, 1, 384])
2025-01-22 11:01:24,447:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 3136, 64])
2025-01-22 11:01:24,448:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:01:24,448:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:01:24,448:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 3136, 64])
2025-01-22 11:01:24,448:[P:28900]:Rank[0/1] Module: VisionTransformer, Input[0] Shape: torch.Size([64, 3, 224, 224])
2025-01-22 11:01:24,448:[P:28900]:Rank[0/1] Module: VisionTransformer, Output[0] Shape: torch.Size([64, 64, 56, 56])
2025-01-22 11:01:24,448:[P:28900]:Rank[0/1] Module: VisionTransformer, Output[1] is of type <class 'NoneType'>
2025-01-22 11:01:24,451:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 784, 192])
2025-01-22 11:01:24,451:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:01:24,451:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:01:24,451:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 784, 192])
2025-01-22 11:01:24,453:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 784, 192])
2025-01-22 11:01:24,453:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:01:24,454:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:01:24,454:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 784, 192])
2025-01-22 11:01:24,454:[P:28900]:Rank[0/1] Module: VisionTransformer, Input[0] Shape: torch.Size([64, 64, 56, 56])
2025-01-22 11:01:24,454:[P:28900]:Rank[0/1] Module: VisionTransformer, Output[0] Shape: torch.Size([64, 192, 28, 28])
2025-01-22 11:01:24,454:[P:28900]:Rank[0/1] Module: VisionTransformer, Output[1] is of type <class 'NoneType'>
2025-01-22 11:01:24,458:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 11:01:24,458:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:01:24,458:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:01:24,458:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 11:01:24,461:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 11:01:24,461:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:01:24,461:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:01:24,461:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 11:01:24,465:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 11:01:24,465:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:01:24,465:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:01:24,465:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 11:01:24,468:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 11:01:24,468:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:01:24,468:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:01:24,468:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 11:01:24,471:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 11:01:24,471:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:01:24,471:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:01:24,471:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 11:01:24,474:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 11:01:24,474:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:01:24,474:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:01:24,474:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 11:01:24,477:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 11:01:24,477:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:01:24,477:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:01:24,477:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 11:01:24,480:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 11:01:24,480:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:01:24,480:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:01:24,480:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 11:01:24,483:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 11:01:24,483:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:01:24,483:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:01:24,483:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 11:01:24,486:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 11:01:24,486:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:01:24,486:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:01:24,486:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 11:01:24,486:[P:28900]:Rank[0/1] Module: VisionTransformer, Input[0] Shape: torch.Size([64, 192, 28, 28])
2025-01-22 11:01:24,486:[P:28900]:Rank[0/1] Module: VisionTransformer, Output[0] Shape: torch.Size([64, 384, 14, 14])
2025-01-22 11:01:24,486:[P:28900]:Rank[0/1] Module: VisionTransformer, Output[1] Shape: torch.Size([64, 1, 384])
2025-01-22 11:01:31,091:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 3136, 64])
2025-01-22 11:01:31,091:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:01:31,091:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:01:31,091:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 3136, 64])
2025-01-22 11:01:31,091:[P:28900]:Rank[0/1] Module: VisionTransformer, Input[0] Shape: torch.Size([64, 3, 224, 224])
2025-01-22 11:01:31,091:[P:28900]:Rank[0/1] Module: VisionTransformer, Output[0] Shape: torch.Size([64, 64, 56, 56])
2025-01-22 11:01:31,091:[P:28900]:Rank[0/1] Module: VisionTransformer, Output[1] is of type <class 'NoneType'>
2025-01-22 11:01:31,094:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 784, 192])
2025-01-22 11:01:31,094:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:01:31,094:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:01:31,094:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 784, 192])
2025-01-22 11:01:31,096:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 784, 192])
2025-01-22 11:01:31,096:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:01:31,096:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:01:31,096:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 784, 192])
2025-01-22 11:01:31,097:[P:28900]:Rank[0/1] Module: VisionTransformer, Input[0] Shape: torch.Size([64, 64, 56, 56])
2025-01-22 11:01:31,097:[P:28900]:Rank[0/1] Module: VisionTransformer, Output[0] Shape: torch.Size([64, 192, 28, 28])
2025-01-22 11:01:31,097:[P:28900]:Rank[0/1] Module: VisionTransformer, Output[1] is of type <class 'NoneType'>
2025-01-22 11:01:31,100:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 11:01:31,100:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:01:31,100:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:01:31,100:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 11:01:31,103:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 11:01:31,103:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:01:31,103:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:01:31,103:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 11:01:31,106:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 11:01:31,106:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:01:31,106:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:01:31,106:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 11:01:31,109:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 11:01:31,109:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:01:31,109:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:01:31,110:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 11:01:31,112:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 11:01:31,112:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:01:31,112:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:01:31,113:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 11:01:31,115:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 11:01:31,115:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:01:31,116:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:01:31,116:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 11:01:31,118:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 11:01:31,118:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:01:31,119:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:01:31,119:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 11:01:31,121:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 11:01:31,122:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:01:31,122:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:01:31,122:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 11:01:31,125:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 11:01:31,125:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:01:31,125:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:01:31,125:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 11:01:31,127:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 11:01:31,127:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:01:31,128:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:01:31,128:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 11:01:31,128:[P:28900]:Rank[0/1] Module: VisionTransformer, Input[0] Shape: torch.Size([64, 192, 28, 28])
2025-01-22 11:01:31,128:[P:28900]:Rank[0/1] Module: VisionTransformer, Output[0] Shape: torch.Size([64, 384, 14, 14])
2025-01-22 11:01:31,128:[P:28900]:Rank[0/1] Module: VisionTransformer, Output[1] Shape: torch.Size([64, 1, 384])
2025-01-22 11:01:37,637:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 3136, 64])
2025-01-22 11:01:37,638:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:01:37,638:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:01:37,638:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 3136, 64])
2025-01-22 11:01:37,638:[P:28900]:Rank[0/1] Module: VisionTransformer, Input[0] Shape: torch.Size([64, 3, 224, 224])
2025-01-22 11:01:37,638:[P:28900]:Rank[0/1] Module: VisionTransformer, Output[0] Shape: torch.Size([64, 64, 56, 56])
2025-01-22 11:01:37,638:[P:28900]:Rank[0/1] Module: VisionTransformer, Output[1] is of type <class 'NoneType'>
2025-01-22 11:01:37,640:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 784, 192])
2025-01-22 11:01:37,641:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:01:37,641:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:01:37,641:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 784, 192])
2025-01-22 11:01:37,643:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 784, 192])
2025-01-22 11:01:37,643:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:01:37,643:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:01:37,643:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 784, 192])
2025-01-22 11:01:37,643:[P:28900]:Rank[0/1] Module: VisionTransformer, Input[0] Shape: torch.Size([64, 64, 56, 56])
2025-01-22 11:01:37,643:[P:28900]:Rank[0/1] Module: VisionTransformer, Output[0] Shape: torch.Size([64, 192, 28, 28])
2025-01-22 11:01:37,643:[P:28900]:Rank[0/1] Module: VisionTransformer, Output[1] is of type <class 'NoneType'>
2025-01-22 11:01:37,646:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 11:01:37,646:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:01:37,646:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:01:37,646:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 11:01:37,649:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 11:01:37,650:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:01:37,650:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:01:37,650:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 11:01:37,653:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 11:01:37,653:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:01:37,653:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:01:37,653:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 11:01:37,656:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 11:01:37,656:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:01:37,656:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:01:37,656:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 11:01:37,659:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 11:01:37,659:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:01:37,659:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:01:37,659:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 11:01:37,661:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 11:01:37,661:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:01:37,661:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:01:37,662:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 11:01:37,664:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 11:01:37,665:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:01:37,665:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:01:37,665:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 11:01:37,668:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 11:01:37,668:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:01:37,668:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:01:37,668:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 11:01:37,670:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 11:01:37,671:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:01:37,671:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:01:37,671:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 11:01:37,673:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 11:01:37,673:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:01:37,673:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:01:37,674:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 11:01:37,674:[P:28900]:Rank[0/1] Module: VisionTransformer, Input[0] Shape: torch.Size([64, 192, 28, 28])
2025-01-22 11:01:37,674:[P:28900]:Rank[0/1] Module: VisionTransformer, Output[0] Shape: torch.Size([64, 384, 14, 14])
2025-01-22 11:01:37,674:[P:28900]:Rank[0/1] Module: VisionTransformer, Output[1] Shape: torch.Size([64, 1, 384])
2025-01-22 11:01:44,157:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 3136, 64])
2025-01-22 11:01:44,157:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:01:44,157:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:01:44,157:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 3136, 64])
2025-01-22 11:01:44,157:[P:28900]:Rank[0/1] Module: VisionTransformer, Input[0] Shape: torch.Size([64, 3, 224, 224])
2025-01-22 11:01:44,158:[P:28900]:Rank[0/1] Module: VisionTransformer, Output[0] Shape: torch.Size([64, 64, 56, 56])
2025-01-22 11:01:44,158:[P:28900]:Rank[0/1] Module: VisionTransformer, Output[1] is of type <class 'NoneType'>
2025-01-22 11:01:44,160:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 784, 192])
2025-01-22 11:01:44,160:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:01:44,160:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:01:44,160:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 784, 192])
2025-01-22 11:01:44,162:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 784, 192])
2025-01-22 11:01:44,162:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:01:44,162:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:01:44,162:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 784, 192])
2025-01-22 11:01:44,163:[P:28900]:Rank[0/1] Module: VisionTransformer, Input[0] Shape: torch.Size([64, 64, 56, 56])
2025-01-22 11:01:44,163:[P:28900]:Rank[0/1] Module: VisionTransformer, Output[0] Shape: torch.Size([64, 192, 28, 28])
2025-01-22 11:01:44,163:[P:28900]:Rank[0/1] Module: VisionTransformer, Output[1] is of type <class 'NoneType'>
2025-01-22 11:01:44,165:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 11:01:44,166:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:01:44,166:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:01:44,166:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 11:01:44,168:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 11:01:44,169:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:01:44,169:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:01:44,169:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 11:01:44,172:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 11:01:44,172:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:01:44,172:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:01:44,172:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 11:01:44,175:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 11:01:44,175:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:01:44,175:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:01:44,175:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 11:01:44,177:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 11:01:44,178:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:01:44,178:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:01:44,178:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 11:01:44,180:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 11:01:44,180:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:01:44,180:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:01:44,181:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 11:01:44,183:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 11:01:44,183:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:01:44,183:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:01:44,184:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 11:01:44,186:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 11:01:44,186:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:01:44,186:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:01:44,186:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 11:01:44,189:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 11:01:44,189:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:01:44,189:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:01:44,189:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 11:01:44,192:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 11:01:44,192:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:01:44,192:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:01:44,192:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 11:01:44,192:[P:28900]:Rank[0/1] Module: VisionTransformer, Input[0] Shape: torch.Size([64, 192, 28, 28])
2025-01-22 11:01:44,192:[P:28900]:Rank[0/1] Module: VisionTransformer, Output[0] Shape: torch.Size([64, 384, 14, 14])
2025-01-22 11:01:44,192:[P:28900]:Rank[0/1] Module: VisionTransformer, Output[1] Shape: torch.Size([64, 1, 384])
2025-01-22 11:01:50,953:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 3136, 64])
2025-01-22 11:01:50,953:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:01:50,953:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:01:50,953:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 3136, 64])
2025-01-22 11:01:50,953:[P:28900]:Rank[0/1] Module: VisionTransformer, Input[0] Shape: torch.Size([64, 3, 224, 224])
2025-01-22 11:01:50,953:[P:28900]:Rank[0/1] Module: VisionTransformer, Output[0] Shape: torch.Size([64, 64, 56, 56])
2025-01-22 11:01:50,953:[P:28900]:Rank[0/1] Module: VisionTransformer, Output[1] is of type <class 'NoneType'>
2025-01-22 11:01:50,956:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 784, 192])
2025-01-22 11:01:50,956:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:01:50,956:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:01:50,956:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 784, 192])
2025-01-22 11:01:50,959:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 784, 192])
2025-01-22 11:01:50,959:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:01:50,959:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:01:50,959:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 784, 192])
2025-01-22 11:01:50,959:[P:28900]:Rank[0/1] Module: VisionTransformer, Input[0] Shape: torch.Size([64, 64, 56, 56])
2025-01-22 11:01:50,959:[P:28900]:Rank[0/1] Module: VisionTransformer, Output[0] Shape: torch.Size([64, 192, 28, 28])
2025-01-22 11:01:50,959:[P:28900]:Rank[0/1] Module: VisionTransformer, Output[1] is of type <class 'NoneType'>
2025-01-22 11:01:50,962:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 11:01:50,963:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:01:50,963:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:01:50,963:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 11:01:50,966:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 11:01:50,966:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:01:50,966:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:01:50,966:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 11:01:50,969:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 11:01:50,969:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:01:50,969:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:01:50,970:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 11:01:50,972:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 11:01:50,972:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:01:50,972:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:01:50,972:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 11:01:50,975:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 11:01:50,975:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:01:50,975:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:01:50,975:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 11:01:50,978:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 11:01:50,978:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:01:50,978:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:01:50,978:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 11:01:50,981:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 11:01:50,981:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:01:50,981:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:01:50,981:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 11:01:50,984:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 11:01:50,984:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:01:50,985:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:01:50,985:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 11:01:50,987:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 11:01:50,987:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:01:50,987:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:01:50,987:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 11:01:50,990:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 11:01:50,990:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:01:50,990:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:01:50,990:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 11:01:50,990:[P:28900]:Rank[0/1] Module: VisionTransformer, Input[0] Shape: torch.Size([64, 192, 28, 28])
2025-01-22 11:01:50,991:[P:28900]:Rank[0/1] Module: VisionTransformer, Output[0] Shape: torch.Size([64, 384, 14, 14])
2025-01-22 11:01:50,991:[P:28900]:Rank[0/1] Module: VisionTransformer, Output[1] Shape: torch.Size([64, 1, 384])
2025-01-22 11:01:57,799:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 3136, 64])
2025-01-22 11:01:57,799:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:01:57,799:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:01:57,800:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 3136, 64])
2025-01-22 11:01:57,800:[P:28900]:Rank[0/1] Module: VisionTransformer, Input[0] Shape: torch.Size([64, 3, 224, 224])
2025-01-22 11:01:57,800:[P:28900]:Rank[0/1] Module: VisionTransformer, Output[0] Shape: torch.Size([64, 64, 56, 56])
2025-01-22 11:01:57,800:[P:28900]:Rank[0/1] Module: VisionTransformer, Output[1] is of type <class 'NoneType'>
2025-01-22 11:01:57,803:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 784, 192])
2025-01-22 11:01:57,803:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:01:57,803:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:01:57,803:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 784, 192])
2025-01-22 11:01:57,805:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 784, 192])
2025-01-22 11:01:57,805:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:01:57,805:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:01:57,805:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 784, 192])
2025-01-22 11:01:57,805:[P:28900]:Rank[0/1] Module: VisionTransformer, Input[0] Shape: torch.Size([64, 64, 56, 56])
2025-01-22 11:01:57,805:[P:28900]:Rank[0/1] Module: VisionTransformer, Output[0] Shape: torch.Size([64, 192, 28, 28])
2025-01-22 11:01:57,806:[P:28900]:Rank[0/1] Module: VisionTransformer, Output[1] is of type <class 'NoneType'>
2025-01-22 11:01:57,809:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 11:01:57,809:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:01:57,809:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:01:57,809:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 11:01:57,812:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 11:01:57,812:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:01:57,812:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:01:57,812:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 11:01:57,815:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 11:01:57,815:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:01:57,815:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:01:57,816:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 11:01:57,819:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 11:01:57,819:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:01:57,819:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:01:57,819:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 11:01:57,822:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 11:01:57,822:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:01:57,822:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:01:57,822:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 11:01:57,825:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 11:01:57,825:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:01:57,825:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:01:57,825:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 11:01:57,828:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 11:01:57,828:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:01:57,828:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:01:57,828:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 11:01:57,831:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 11:01:57,831:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:01:57,831:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:01:57,831:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 11:01:57,834:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 11:01:57,834:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:01:57,834:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:01:57,834:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 11:01:57,837:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 11:01:57,837:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:01:57,837:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:01:57,837:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 11:01:57,837:[P:28900]:Rank[0/1] Module: VisionTransformer, Input[0] Shape: torch.Size([64, 192, 28, 28])
2025-01-22 11:01:57,837:[P:28900]:Rank[0/1] Module: VisionTransformer, Output[0] Shape: torch.Size([64, 384, 14, 14])
2025-01-22 11:01:57,837:[P:28900]:Rank[0/1] Module: VisionTransformer, Output[1] Shape: torch.Size([64, 1, 384])
2025-01-22 11:02:05,061:[P:28900]:Rank[0/1] => Epoch[0]: train end, duration: 107.19s
2025-01-22 11:02:05,062:[P:28900]:Rank[0/1] => Epoch[0]: validate start
2025-01-22 11:02:05,062:[P:28900]:Rank[0/1] => switch to eval mode
2025-01-22 11:02:06,297:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([32, 3136, 64])
2025-01-22 11:02:06,297:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:02:06,297:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:02:06,297:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([32, 3136, 64])
2025-01-22 11:02:06,297:[P:28900]:Rank[0/1] Module: VisionTransformer, Input[0] Shape: torch.Size([32, 3, 224, 224])
2025-01-22 11:02:06,297:[P:28900]:Rank[0/1] Module: VisionTransformer, Output[0] Shape: torch.Size([32, 64, 56, 56])
2025-01-22 11:02:06,297:[P:28900]:Rank[0/1] Module: VisionTransformer, Output[1] is of type <class 'NoneType'>
2025-01-22 11:02:06,598:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([32, 784, 192])
2025-01-22 11:02:06,598:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:02:06,599:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:02:06,599:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([32, 784, 192])
2025-01-22 11:02:06,600:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([32, 784, 192])
2025-01-22 11:02:06,600:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:02:06,600:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:02:06,600:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([32, 784, 192])
2025-01-22 11:02:06,601:[P:28900]:Rank[0/1] Module: VisionTransformer, Input[0] Shape: torch.Size([32, 64, 56, 56])
2025-01-22 11:02:06,601:[P:28900]:Rank[0/1] Module: VisionTransformer, Output[0] Shape: torch.Size([32, 192, 28, 28])
2025-01-22 11:02:06,601:[P:28900]:Rank[0/1] Module: VisionTransformer, Output[1] is of type <class 'NoneType'>
2025-01-22 11:02:06,936:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([32, 197, 384])
2025-01-22 11:02:06,936:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:02:06,936:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:02:06,936:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([32, 197, 384])
2025-01-22 11:02:06,939:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([32, 197, 384])
2025-01-22 11:02:06,939:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:02:06,939:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:02:06,939:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([32, 197, 384])
2025-01-22 11:02:06,941:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([32, 197, 384])
2025-01-22 11:02:06,941:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:02:06,941:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:02:06,941:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([32, 197, 384])
2025-01-22 11:02:06,943:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([32, 197, 384])
2025-01-22 11:02:06,943:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:02:06,943:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:02:06,943:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([32, 197, 384])
2025-01-22 11:02:06,946:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([32, 197, 384])
2025-01-22 11:02:06,946:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:02:06,946:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:02:06,946:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([32, 197, 384])
2025-01-22 11:02:06,949:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([32, 197, 384])
2025-01-22 11:02:06,949:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:02:06,949:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:02:06,949:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([32, 197, 384])
2025-01-22 11:02:06,951:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([32, 197, 384])
2025-01-22 11:02:06,951:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:02:06,951:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:02:06,952:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([32, 197, 384])
2025-01-22 11:02:06,954:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([32, 197, 384])
2025-01-22 11:02:06,954:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:02:06,955:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:02:06,955:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([32, 197, 384])
2025-01-22 11:02:06,957:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([32, 197, 384])
2025-01-22 11:02:06,957:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:02:06,958:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:02:06,958:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([32, 197, 384])
2025-01-22 11:02:06,961:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([32, 197, 384])
2025-01-22 11:02:06,961:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:02:06,961:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:02:06,961:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([32, 197, 384])
2025-01-22 11:02:06,961:[P:28900]:Rank[0/1] Module: VisionTransformer, Input[0] Shape: torch.Size([32, 192, 28, 28])
2025-01-22 11:02:06,961:[P:28900]:Rank[0/1] Module: VisionTransformer, Output[0] Shape: torch.Size([32, 384, 14, 14])
2025-01-22 11:02:06,961:[P:28900]:Rank[0/1] Module: VisionTransformer, Output[1] Shape: torch.Size([32, 1, 384])
2025-01-22 11:02:08,140:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([32, 3136, 64])
2025-01-22 11:02:08,141:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:02:08,141:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:02:08,141:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([32, 3136, 64])
2025-01-22 11:02:08,141:[P:28900]:Rank[0/1] Module: VisionTransformer, Input[0] Shape: torch.Size([32, 3, 224, 224])
2025-01-22 11:02:08,141:[P:28900]:Rank[0/1] Module: VisionTransformer, Output[0] Shape: torch.Size([32, 64, 56, 56])
2025-01-22 11:02:08,141:[P:28900]:Rank[0/1] Module: VisionTransformer, Output[1] is of type <class 'NoneType'>
2025-01-22 11:02:08,143:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([32, 784, 192])
2025-01-22 11:02:08,143:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:02:08,143:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:02:08,143:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([32, 784, 192])
2025-01-22 11:02:08,144:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([32, 784, 192])
2025-01-22 11:02:08,144:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:02:08,144:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:02:08,145:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([32, 784, 192])
2025-01-22 11:02:08,145:[P:28900]:Rank[0/1] Module: VisionTransformer, Input[0] Shape: torch.Size([32, 64, 56, 56])
2025-01-22 11:02:08,145:[P:28900]:Rank[0/1] Module: VisionTransformer, Output[0] Shape: torch.Size([32, 192, 28, 28])
2025-01-22 11:02:08,145:[P:28900]:Rank[0/1] Module: VisionTransformer, Output[1] is of type <class 'NoneType'>
2025-01-22 11:02:08,147:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([32, 197, 384])
2025-01-22 11:02:08,147:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:02:08,147:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:02:08,147:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([32, 197, 384])
2025-01-22 11:02:08,149:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([32, 197, 384])
2025-01-22 11:02:08,149:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:02:08,149:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:02:08,149:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([32, 197, 384])
2025-01-22 11:02:08,151:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([32, 197, 384])
2025-01-22 11:02:08,151:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:02:08,151:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:02:08,151:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([32, 197, 384])
2025-01-22 11:02:08,153:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([32, 197, 384])
2025-01-22 11:02:08,153:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:02:08,153:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:02:08,153:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([32, 197, 384])
2025-01-22 11:02:08,154:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([32, 197, 384])
2025-01-22 11:02:08,155:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:02:08,155:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:02:08,155:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([32, 197, 384])
2025-01-22 11:02:08,156:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([32, 197, 384])
2025-01-22 11:02:08,156:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:02:08,157:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:02:08,157:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([32, 197, 384])
2025-01-22 11:02:08,158:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([32, 197, 384])
2025-01-22 11:02:08,158:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:02:08,158:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:02:08,158:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([32, 197, 384])
2025-01-22 11:02:08,160:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([32, 197, 384])
2025-01-22 11:02:08,160:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:02:08,160:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:02:08,160:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([32, 197, 384])
2025-01-22 11:02:08,162:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([32, 197, 384])
2025-01-22 11:02:08,162:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:02:08,162:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:02:08,162:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([32, 197, 384])
2025-01-22 11:02:08,164:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([32, 197, 384])
2025-01-22 11:02:08,164:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:02:08,164:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:02:08,164:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([32, 197, 384])
2025-01-22 11:02:08,164:[P:28900]:Rank[0/1] Module: VisionTransformer, Input[0] Shape: torch.Size([32, 192, 28, 28])
2025-01-22 11:02:08,164:[P:28900]:Rank[0/1] Module: VisionTransformer, Output[0] Shape: torch.Size([32, 384, 14, 14])
2025-01-22 11:02:08,164:[P:28900]:Rank[0/1] Module: VisionTransformer, Output[1] Shape: torch.Size([32, 1, 384])
2025-01-22 11:02:09,595:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([29, 3136, 64])
2025-01-22 11:02:09,596:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:02:09,596:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:02:09,596:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([29, 3136, 64])
2025-01-22 11:02:09,596:[P:28900]:Rank[0/1] Module: VisionTransformer, Input[0] Shape: torch.Size([29, 3, 224, 224])
2025-01-22 11:02:09,596:[P:28900]:Rank[0/1] Module: VisionTransformer, Output[0] Shape: torch.Size([29, 64, 56, 56])
2025-01-22 11:02:09,596:[P:28900]:Rank[0/1] Module: VisionTransformer, Output[1] is of type <class 'NoneType'>
2025-01-22 11:02:10,158:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([29, 784, 192])
2025-01-22 11:02:10,158:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:02:10,159:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:02:10,159:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([29, 784, 192])
2025-01-22 11:02:10,160:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([29, 784, 192])
2025-01-22 11:02:10,160:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:02:10,160:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:02:10,160:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([29, 784, 192])
2025-01-22 11:02:10,160:[P:28900]:Rank[0/1] Module: VisionTransformer, Input[0] Shape: torch.Size([29, 64, 56, 56])
2025-01-22 11:02:10,160:[P:28900]:Rank[0/1] Module: VisionTransformer, Output[0] Shape: torch.Size([29, 192, 28, 28])
2025-01-22 11:02:10,161:[P:28900]:Rank[0/1] Module: VisionTransformer, Output[1] is of type <class 'NoneType'>
2025-01-22 11:02:10,408:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([29, 197, 384])
2025-01-22 11:02:10,408:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:02:10,408:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:02:10,408:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([29, 197, 384])
2025-01-22 11:02:10,410:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([29, 197, 384])
2025-01-22 11:02:10,410:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:02:10,410:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:02:10,410:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([29, 197, 384])
2025-01-22 11:02:10,411:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([29, 197, 384])
2025-01-22 11:02:10,412:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:02:10,412:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:02:10,412:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([29, 197, 384])
2025-01-22 11:02:10,413:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([29, 197, 384])
2025-01-22 11:02:10,413:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:02:10,413:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:02:10,413:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([29, 197, 384])
2025-01-22 11:02:10,415:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([29, 197, 384])
2025-01-22 11:02:10,415:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:02:10,415:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:02:10,415:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([29, 197, 384])
2025-01-22 11:02:10,417:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([29, 197, 384])
2025-01-22 11:02:10,417:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:02:10,417:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:02:10,417:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([29, 197, 384])
2025-01-22 11:02:10,419:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([29, 197, 384])
2025-01-22 11:02:10,419:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:02:10,419:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:02:10,419:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([29, 197, 384])
2025-01-22 11:02:10,421:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([29, 197, 384])
2025-01-22 11:02:10,421:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:02:10,421:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:02:10,421:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([29, 197, 384])
2025-01-22 11:02:10,423:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([29, 197, 384])
2025-01-22 11:02:10,423:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:02:10,423:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:02:10,423:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([29, 197, 384])
2025-01-22 11:02:10,425:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([29, 197, 384])
2025-01-22 11:02:10,425:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:02:10,425:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:02:10,425:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([29, 197, 384])
2025-01-22 11:02:10,426:[P:28900]:Rank[0/1] Module: VisionTransformer, Input[0] Shape: torch.Size([29, 192, 28, 28])
2025-01-22 11:02:10,426:[P:28900]:Rank[0/1] Module: VisionTransformer, Output[0] Shape: torch.Size([29, 384, 14, 14])
2025-01-22 11:02:10,426:[P:28900]:Rank[0/1] Module: VisionTransformer, Output[1] Shape: torch.Size([29, 1, 384])
2025-01-22 11:02:11,197:[P:28900]:Rank[0/1] => synchronize...
2025-01-22 11:02:11,197:[P:28900]:Rank[0/1] => TEST:	Loss 6.7672	Error@1 100.000%	Error@5 100.000%	Accuracy@1 0.000%	Accuracy@5 0.000%	
2025-01-22 11:02:11,198:[P:28900]:Rank[0/1] => switch to train mode
2025-01-22 11:02:11,200:[P:28900]:Rank[0/1] => Epoch[0]: validate end, duration: 6.14s
2025-01-22 11:02:11,201:[P:28900]:Rank[0/1] => lr: 5.0799999999999995e-05
2025-01-22 11:02:11,202:[P:28900]:Rank[0/1] => saving checkpoint to OUTPUT/imagenet/cvt-13-224x224
2025-01-22 11:02:11,587:[P:28900]:Rank[0/1] => Epoch[0]: epoch end, duration : 113.72s
2025-01-22 11:02:11,587:[P:28900]:Rank[0/1] => Epoch[1]: epoch start
2025-01-22 11:02:11,587:[P:28900]:Rank[0/1] => Epoch[1]: train start
2025-01-22 11:02:11,587:[P:28900]:Rank[0/1] => switch to train mode
2025-01-22 11:02:11,619:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 3136, 64])
2025-01-22 11:02:11,619:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:02:11,619:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:02:11,619:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 3136, 64])
2025-01-22 11:02:11,619:[P:28900]:Rank[0/1] Module: VisionTransformer, Input[0] Shape: torch.Size([64, 3, 224, 224])
2025-01-22 11:02:11,619:[P:28900]:Rank[0/1] Module: VisionTransformer, Output[0] Shape: torch.Size([64, 64, 56, 56])
2025-01-22 11:02:11,619:[P:28900]:Rank[0/1] Module: VisionTransformer, Output[1] is of type <class 'NoneType'>
2025-01-22 11:02:11,632:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 784, 192])
2025-01-22 11:02:11,633:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:02:11,633:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:02:11,633:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 784, 192])
2025-01-22 11:02:11,647:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 784, 192])
2025-01-22 11:02:11,647:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:02:11,647:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:02:11,647:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 784, 192])
2025-01-22 11:02:11,648:[P:28900]:Rank[0/1] Module: VisionTransformer, Input[0] Shape: torch.Size([64, 64, 56, 56])
2025-01-22 11:02:11,648:[P:28900]:Rank[0/1] Module: VisionTransformer, Output[0] Shape: torch.Size([64, 192, 28, 28])
2025-01-22 11:02:11,648:[P:28900]:Rank[0/1] Module: VisionTransformer, Output[1] is of type <class 'NoneType'>
2025-01-22 11:02:11,656:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 11:02:11,656:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:02:11,656:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:02:11,656:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 11:02:11,667:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 11:02:11,667:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:02:11,667:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:02:11,667:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 11:02:11,696:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 11:02:11,697:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:02:11,697:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:02:11,697:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 11:02:11,726:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 11:02:11,726:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:02:11,726:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:02:11,726:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 11:02:11,743:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 11:02:11,743:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:02:11,743:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:02:11,744:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 11:02:11,765:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 11:02:11,765:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:02:11,765:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:02:11,765:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 11:02:11,790:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 11:02:11,790:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:02:11,791:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:02:11,791:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 11:02:11,813:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 11:02:11,814:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:02:11,814:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:02:11,814:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 11:02:11,833:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 11:02:11,834:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:02:11,834:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:02:11,834:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 11:02:11,855:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 11:02:11,855:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:02:11,855:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:02:11,855:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 11:02:11,855:[P:28900]:Rank[0/1] Module: VisionTransformer, Input[0] Shape: torch.Size([64, 192, 28, 28])
2025-01-22 11:02:11,855:[P:28900]:Rank[0/1] Module: VisionTransformer, Output[0] Shape: torch.Size([64, 384, 14, 14])
2025-01-22 11:02:11,855:[P:28900]:Rank[0/1] Module: VisionTransformer, Output[1] Shape: torch.Size([64, 1, 384])
2025-01-22 11:02:18,548:[P:28900]:Rank[0/1] => Epoch[1][0/13]: Time 6.959s (6.959s)	Speed 9.2 samples/s	Data 0.005s (0.005s)	Loss 6.77491 (6.77491)	Accuracy@1 1.562 (1.562)	Accuracy@5 4.688 (4.688)	
2025-01-22 11:02:18,554:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 3136, 64])
2025-01-22 11:02:18,554:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:02:18,554:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:02:18,554:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 3136, 64])
2025-01-22 11:02:18,554:[P:28900]:Rank[0/1] Module: VisionTransformer, Input[0] Shape: torch.Size([64, 3, 224, 224])
2025-01-22 11:02:18,554:[P:28900]:Rank[0/1] Module: VisionTransformer, Output[0] Shape: torch.Size([64, 64, 56, 56])
2025-01-22 11:02:18,555:[P:28900]:Rank[0/1] Module: VisionTransformer, Output[1] is of type <class 'NoneType'>
2025-01-22 11:02:18,557:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 784, 192])
2025-01-22 11:02:18,557:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:02:18,557:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:02:18,557:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 784, 192])
2025-01-22 11:02:18,560:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 784, 192])
2025-01-22 11:02:18,560:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:02:18,560:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:02:18,560:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 784, 192])
2025-01-22 11:02:18,560:[P:28900]:Rank[0/1] Module: VisionTransformer, Input[0] Shape: torch.Size([64, 64, 56, 56])
2025-01-22 11:02:18,560:[P:28900]:Rank[0/1] Module: VisionTransformer, Output[0] Shape: torch.Size([64, 192, 28, 28])
2025-01-22 11:02:18,560:[P:28900]:Rank[0/1] Module: VisionTransformer, Output[1] is of type <class 'NoneType'>
2025-01-22 11:02:18,563:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 11:02:18,563:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:02:18,563:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:02:18,563:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 11:02:18,568:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 11:02:18,568:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:02:18,568:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:02:18,568:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 11:02:18,572:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 11:02:18,572:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:02:18,572:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:02:18,573:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 11:02:18,576:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 11:02:18,577:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:02:18,577:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:02:18,577:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 11:02:18,579:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 11:02:18,579:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:02:18,579:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:02:18,579:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 11:02:18,582:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 11:02:18,582:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:02:18,583:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:02:18,583:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 11:02:18,585:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 11:02:18,585:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:02:18,585:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:02:18,585:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 11:02:18,588:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 11:02:18,588:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:02:18,588:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:02:18,588:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 11:02:18,591:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 11:02:18,591:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:02:18,591:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:02:18,591:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 11:02:18,594:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 11:02:18,594:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:02:18,594:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:02:18,594:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 11:02:18,594:[P:28900]:Rank[0/1] Module: VisionTransformer, Input[0] Shape: torch.Size([64, 192, 28, 28])
2025-01-22 11:02:18,594:[P:28900]:Rank[0/1] Module: VisionTransformer, Output[0] Shape: torch.Size([64, 384, 14, 14])
2025-01-22 11:02:18,594:[P:28900]:Rank[0/1] Module: VisionTransformer, Output[1] Shape: torch.Size([64, 1, 384])
2025-01-22 11:02:25,555:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 3136, 64])
2025-01-22 11:02:25,555:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:02:25,555:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:02:25,555:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 3136, 64])
2025-01-22 11:02:25,555:[P:28900]:Rank[0/1] Module: VisionTransformer, Input[0] Shape: torch.Size([64, 3, 224, 224])
2025-01-22 11:02:25,556:[P:28900]:Rank[0/1] Module: VisionTransformer, Output[0] Shape: torch.Size([64, 64, 56, 56])
2025-01-22 11:02:25,556:[P:28900]:Rank[0/1] Module: VisionTransformer, Output[1] is of type <class 'NoneType'>
2025-01-22 11:02:25,558:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 784, 192])
2025-01-22 11:02:25,558:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:02:25,558:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:02:25,558:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 784, 192])
2025-01-22 11:02:25,560:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 784, 192])
2025-01-22 11:02:25,560:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:02:25,561:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:02:25,561:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 784, 192])
2025-01-22 11:02:25,561:[P:28900]:Rank[0/1] Module: VisionTransformer, Input[0] Shape: torch.Size([64, 64, 56, 56])
2025-01-22 11:02:25,561:[P:28900]:Rank[0/1] Module: VisionTransformer, Output[0] Shape: torch.Size([64, 192, 28, 28])
2025-01-22 11:02:25,561:[P:28900]:Rank[0/1] Module: VisionTransformer, Output[1] is of type <class 'NoneType'>
2025-01-22 11:02:25,564:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 11:02:25,564:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:02:25,564:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:02:25,564:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 11:02:25,567:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 11:02:25,567:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:02:25,567:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:02:25,567:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 11:02:25,571:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 11:02:25,571:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:02:25,571:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:02:25,571:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 11:02:25,574:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 11:02:25,574:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:02:25,575:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:02:25,575:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 11:02:25,577:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 11:02:25,577:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:02:25,578:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:02:25,578:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 11:02:25,580:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 11:02:25,581:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:02:25,581:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:02:25,581:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 11:02:25,583:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 11:02:25,584:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:02:25,584:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:02:25,584:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 11:02:25,586:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 11:02:25,587:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:02:25,587:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:02:25,587:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 11:02:25,589:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 11:02:25,590:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:02:25,590:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:02:25,590:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 11:02:25,592:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 11:02:25,592:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:02:25,593:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:02:25,593:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 11:02:25,593:[P:28900]:Rank[0/1] Module: VisionTransformer, Input[0] Shape: torch.Size([64, 192, 28, 28])
2025-01-22 11:02:25,593:[P:28900]:Rank[0/1] Module: VisionTransformer, Output[0] Shape: torch.Size([64, 384, 14, 14])
2025-01-22 11:02:25,593:[P:28900]:Rank[0/1] Module: VisionTransformer, Output[1] Shape: torch.Size([64, 1, 384])
2025-01-22 11:02:32,204:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 3136, 64])
2025-01-22 11:02:32,204:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:02:32,204:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:02:32,204:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 3136, 64])
2025-01-22 11:02:32,204:[P:28900]:Rank[0/1] Module: VisionTransformer, Input[0] Shape: torch.Size([64, 3, 224, 224])
2025-01-22 11:02:32,205:[P:28900]:Rank[0/1] Module: VisionTransformer, Output[0] Shape: torch.Size([64, 64, 56, 56])
2025-01-22 11:02:32,205:[P:28900]:Rank[0/1] Module: VisionTransformer, Output[1] is of type <class 'NoneType'>
2025-01-22 11:02:32,207:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 784, 192])
2025-01-22 11:02:32,208:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:02:32,208:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:02:32,208:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 784, 192])
2025-01-22 11:02:32,210:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 784, 192])
2025-01-22 11:02:32,210:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:02:32,210:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:02:32,210:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 784, 192])
2025-01-22 11:02:32,211:[P:28900]:Rank[0/1] Module: VisionTransformer, Input[0] Shape: torch.Size([64, 64, 56, 56])
2025-01-22 11:02:32,211:[P:28900]:Rank[0/1] Module: VisionTransformer, Output[0] Shape: torch.Size([64, 192, 28, 28])
2025-01-22 11:02:32,211:[P:28900]:Rank[0/1] Module: VisionTransformer, Output[1] is of type <class 'NoneType'>
2025-01-22 11:02:32,214:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 11:02:32,214:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:02:32,214:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:02:32,214:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 11:02:32,217:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 11:02:32,218:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:02:32,218:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:02:32,218:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 11:02:32,221:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 11:02:32,221:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:02:32,221:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:02:32,221:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 11:02:32,224:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 11:02:32,224:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:02:32,224:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:02:32,224:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 11:02:32,227:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 11:02:32,227:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:02:32,227:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:02:32,227:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 11:02:32,230:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 11:02:32,230:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:02:32,230:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:02:32,230:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 11:02:32,233:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 11:02:32,233:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:02:32,233:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:02:32,233:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 11:02:32,236:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 11:02:32,236:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:02:32,236:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:02:32,236:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 11:02:32,239:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 11:02:32,239:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:02:32,239:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:02:32,239:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 11:02:32,242:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 11:02:32,242:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:02:32,242:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:02:32,242:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 11:02:32,242:[P:28900]:Rank[0/1] Module: VisionTransformer, Input[0] Shape: torch.Size([64, 192, 28, 28])
2025-01-22 11:02:32,242:[P:28900]:Rank[0/1] Module: VisionTransformer, Output[0] Shape: torch.Size([64, 384, 14, 14])
2025-01-22 11:02:32,242:[P:28900]:Rank[0/1] Module: VisionTransformer, Output[1] Shape: torch.Size([64, 1, 384])
2025-01-22 11:02:39,114:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 3136, 64])
2025-01-22 11:02:39,115:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:02:39,115:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:02:39,115:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 3136, 64])
2025-01-22 11:02:39,115:[P:28900]:Rank[0/1] Module: VisionTransformer, Input[0] Shape: torch.Size([64, 3, 224, 224])
2025-01-22 11:02:39,115:[P:28900]:Rank[0/1] Module: VisionTransformer, Output[0] Shape: torch.Size([64, 64, 56, 56])
2025-01-22 11:02:39,115:[P:28900]:Rank[0/1] Module: VisionTransformer, Output[1] is of type <class 'NoneType'>
2025-01-22 11:02:39,118:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 784, 192])
2025-01-22 11:02:39,118:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:02:39,118:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:02:39,118:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 784, 192])
2025-01-22 11:02:39,120:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 784, 192])
2025-01-22 11:02:39,120:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:02:39,120:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:02:39,120:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 784, 192])
2025-01-22 11:02:39,120:[P:28900]:Rank[0/1] Module: VisionTransformer, Input[0] Shape: torch.Size([64, 64, 56, 56])
2025-01-22 11:02:39,120:[P:28900]:Rank[0/1] Module: VisionTransformer, Output[0] Shape: torch.Size([64, 192, 28, 28])
2025-01-22 11:02:39,121:[P:28900]:Rank[0/1] Module: VisionTransformer, Output[1] is of type <class 'NoneType'>
2025-01-22 11:02:39,124:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 11:02:39,124:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:02:39,124:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:02:39,124:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 11:02:39,127:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 11:02:39,127:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:02:39,127:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:02:39,127:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 11:02:39,130:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 11:02:39,130:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:02:39,130:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:02:39,130:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 11:02:39,133:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 11:02:39,133:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:02:39,133:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:02:39,134:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 11:02:39,137:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 11:02:39,137:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:02:39,137:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:02:39,137:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 11:02:39,140:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 11:02:39,140:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:02:39,140:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:02:39,140:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 11:02:39,143:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 11:02:39,143:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:02:39,144:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:02:39,144:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 11:02:39,146:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 11:02:39,146:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:02:39,146:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:02:39,147:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 11:02:39,149:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 11:02:39,150:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:02:39,150:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:02:39,150:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 11:02:39,152:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 11:02:39,152:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:02:39,153:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:02:39,153:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 11:02:39,153:[P:28900]:Rank[0/1] Module: VisionTransformer, Input[0] Shape: torch.Size([64, 192, 28, 28])
2025-01-22 11:02:39,153:[P:28900]:Rank[0/1] Module: VisionTransformer, Output[0] Shape: torch.Size([64, 384, 14, 14])
2025-01-22 11:02:39,153:[P:28900]:Rank[0/1] Module: VisionTransformer, Output[1] Shape: torch.Size([64, 1, 384])
2025-01-22 11:02:45,755:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 3136, 64])
2025-01-22 11:02:45,756:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:02:45,756:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:02:45,756:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 3136, 64])
2025-01-22 11:02:45,756:[P:28900]:Rank[0/1] Module: VisionTransformer, Input[0] Shape: torch.Size([64, 3, 224, 224])
2025-01-22 11:02:45,756:[P:28900]:Rank[0/1] Module: VisionTransformer, Output[0] Shape: torch.Size([64, 64, 56, 56])
2025-01-22 11:02:45,756:[P:28900]:Rank[0/1] Module: VisionTransformer, Output[1] is of type <class 'NoneType'>
2025-01-22 11:02:45,759:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 784, 192])
2025-01-22 11:02:45,759:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:02:45,759:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:02:45,759:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 784, 192])
2025-01-22 11:02:45,762:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 784, 192])
2025-01-22 11:02:45,762:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:02:45,762:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:02:45,762:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 784, 192])
2025-01-22 11:02:45,763:[P:28900]:Rank[0/1] Module: VisionTransformer, Input[0] Shape: torch.Size([64, 64, 56, 56])
2025-01-22 11:02:45,763:[P:28900]:Rank[0/1] Module: VisionTransformer, Output[0] Shape: torch.Size([64, 192, 28, 28])
2025-01-22 11:02:45,763:[P:28900]:Rank[0/1] Module: VisionTransformer, Output[1] is of type <class 'NoneType'>
2025-01-22 11:02:45,766:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 11:02:45,767:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:02:45,767:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:02:45,767:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 11:02:45,770:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 11:02:45,771:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:02:45,771:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:02:45,771:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 11:02:45,774:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 11:02:45,774:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:02:45,774:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:02:45,774:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 11:02:45,777:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 11:02:45,777:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:02:45,777:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:02:45,777:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 11:02:45,781:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 11:02:45,782:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:02:45,782:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:02:45,782:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 11:02:45,786:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 11:02:45,786:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:02:45,786:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:02:45,786:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 11:02:45,791:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 11:02:45,791:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:02:45,791:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:02:45,791:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 11:02:45,794:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 11:02:45,794:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:02:45,794:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:02:45,794:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 11:02:45,797:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 11:02:45,797:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:02:45,797:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:02:45,797:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 11:02:45,800:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 11:02:45,801:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:02:45,801:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:02:45,801:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 11:02:45,801:[P:28900]:Rank[0/1] Module: VisionTransformer, Input[0] Shape: torch.Size([64, 192, 28, 28])
2025-01-22 11:02:45,801:[P:28900]:Rank[0/1] Module: VisionTransformer, Output[0] Shape: torch.Size([64, 384, 14, 14])
2025-01-22 11:02:45,801:[P:28900]:Rank[0/1] Module: VisionTransformer, Output[1] Shape: torch.Size([64, 1, 384])
2025-01-22 11:02:52,662:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 3136, 64])
2025-01-22 11:02:52,663:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:02:52,663:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:02:52,663:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 3136, 64])
2025-01-22 11:02:52,663:[P:28900]:Rank[0/1] Module: VisionTransformer, Input[0] Shape: torch.Size([64, 3, 224, 224])
2025-01-22 11:02:52,663:[P:28900]:Rank[0/1] Module: VisionTransformer, Output[0] Shape: torch.Size([64, 64, 56, 56])
2025-01-22 11:02:52,663:[P:28900]:Rank[0/1] Module: VisionTransformer, Output[1] is of type <class 'NoneType'>
2025-01-22 11:02:52,666:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 784, 192])
2025-01-22 11:02:52,666:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:02:52,666:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:02:52,666:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 784, 192])
2025-01-22 11:02:52,668:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 784, 192])
2025-01-22 11:02:52,668:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:02:52,668:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:02:52,668:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 784, 192])
2025-01-22 11:02:52,668:[P:28900]:Rank[0/1] Module: VisionTransformer, Input[0] Shape: torch.Size([64, 64, 56, 56])
2025-01-22 11:02:52,668:[P:28900]:Rank[0/1] Module: VisionTransformer, Output[0] Shape: torch.Size([64, 192, 28, 28])
2025-01-22 11:02:52,668:[P:28900]:Rank[0/1] Module: VisionTransformer, Output[1] is of type <class 'NoneType'>
2025-01-22 11:02:52,671:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 11:02:52,672:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:02:52,672:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:02:52,672:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 11:02:52,675:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 11:02:52,675:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:02:52,675:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:02:52,675:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 11:02:52,678:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 11:02:52,678:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:02:52,678:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:02:52,678:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 11:02:52,681:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 11:02:52,681:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:02:52,681:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:02:52,681:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 11:02:52,684:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 11:02:52,684:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:02:52,684:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:02:52,684:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 11:02:52,686:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 11:02:52,686:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:02:52,686:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:02:52,687:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 11:02:52,689:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 11:02:52,689:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:02:52,689:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:02:52,689:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 11:02:52,692:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 11:02:52,693:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:02:52,693:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:02:52,693:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 11:02:52,695:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 11:02:52,696:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:02:52,696:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:02:52,696:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 11:02:52,699:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 11:02:52,699:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:02:52,699:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:02:52,699:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 11:02:52,699:[P:28900]:Rank[0/1] Module: VisionTransformer, Input[0] Shape: torch.Size([64, 192, 28, 28])
2025-01-22 11:02:52,699:[P:28900]:Rank[0/1] Module: VisionTransformer, Output[0] Shape: torch.Size([64, 384, 14, 14])
2025-01-22 11:02:52,699:[P:28900]:Rank[0/1] Module: VisionTransformer, Output[1] Shape: torch.Size([64, 1, 384])
2025-01-22 11:02:59,068:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 3136, 64])
2025-01-22 11:02:59,069:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:02:59,069:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:02:59,069:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 3136, 64])
2025-01-22 11:02:59,069:[P:28900]:Rank[0/1] Module: VisionTransformer, Input[0] Shape: torch.Size([64, 3, 224, 224])
2025-01-22 11:02:59,069:[P:28900]:Rank[0/1] Module: VisionTransformer, Output[0] Shape: torch.Size([64, 64, 56, 56])
2025-01-22 11:02:59,069:[P:28900]:Rank[0/1] Module: VisionTransformer, Output[1] is of type <class 'NoneType'>
2025-01-22 11:02:59,072:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 784, 192])
2025-01-22 11:02:59,072:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:02:59,072:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:02:59,072:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 784, 192])
2025-01-22 11:02:59,074:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 784, 192])
2025-01-22 11:02:59,075:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:02:59,075:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:02:59,075:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 784, 192])
2025-01-22 11:02:59,075:[P:28900]:Rank[0/1] Module: VisionTransformer, Input[0] Shape: torch.Size([64, 64, 56, 56])
2025-01-22 11:02:59,075:[P:28900]:Rank[0/1] Module: VisionTransformer, Output[0] Shape: torch.Size([64, 192, 28, 28])
2025-01-22 11:02:59,075:[P:28900]:Rank[0/1] Module: VisionTransformer, Output[1] is of type <class 'NoneType'>
2025-01-22 11:02:59,078:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 11:02:59,078:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:02:59,078:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:02:59,078:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 11:02:59,082:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 11:02:59,082:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:02:59,082:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:02:59,082:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 11:02:59,085:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 11:02:59,086:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:02:59,086:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:02:59,086:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 11:02:59,089:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 11:02:59,090:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:02:59,090:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:02:59,090:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 11:02:59,093:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 11:02:59,093:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:02:59,093:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:02:59,093:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 11:02:59,097:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 11:02:59,097:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:02:59,097:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:02:59,097:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 11:02:59,101:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 11:02:59,101:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:02:59,101:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:02:59,101:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 11:02:59,104:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 11:02:59,104:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:02:59,104:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:02:59,105:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 11:02:59,108:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 11:02:59,108:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:02:59,108:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:02:59,108:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 11:02:59,111:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 11:02:59,111:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:02:59,111:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:02:59,111:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 11:02:59,112:[P:28900]:Rank[0/1] Module: VisionTransformer, Input[0] Shape: torch.Size([64, 192, 28, 28])
2025-01-22 11:02:59,112:[P:28900]:Rank[0/1] Module: VisionTransformer, Output[0] Shape: torch.Size([64, 384, 14, 14])
2025-01-22 11:02:59,112:[P:28900]:Rank[0/1] Module: VisionTransformer, Output[1] Shape: torch.Size([64, 1, 384])
2025-01-22 11:03:05,773:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 3136, 64])
2025-01-22 11:03:05,773:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:03:05,773:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:03:05,773:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 3136, 64])
2025-01-22 11:03:05,773:[P:28900]:Rank[0/1] Module: VisionTransformer, Input[0] Shape: torch.Size([64, 3, 224, 224])
2025-01-22 11:03:05,773:[P:28900]:Rank[0/1] Module: VisionTransformer, Output[0] Shape: torch.Size([64, 64, 56, 56])
2025-01-22 11:03:05,773:[P:28900]:Rank[0/1] Module: VisionTransformer, Output[1] is of type <class 'NoneType'>
2025-01-22 11:03:05,776:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 784, 192])
2025-01-22 11:03:05,776:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:03:05,776:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:03:05,776:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 784, 192])
2025-01-22 11:03:05,778:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 784, 192])
2025-01-22 11:03:05,779:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:03:05,779:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:03:05,779:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 784, 192])
2025-01-22 11:03:05,779:[P:28900]:Rank[0/1] Module: VisionTransformer, Input[0] Shape: torch.Size([64, 64, 56, 56])
2025-01-22 11:03:05,779:[P:28900]:Rank[0/1] Module: VisionTransformer, Output[0] Shape: torch.Size([64, 192, 28, 28])
2025-01-22 11:03:05,779:[P:28900]:Rank[0/1] Module: VisionTransformer, Output[1] is of type <class 'NoneType'>
2025-01-22 11:03:05,782:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 11:03:05,782:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:03:05,782:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:03:05,782:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 11:03:05,785:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 11:03:05,785:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:03:05,785:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:03:05,785:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 11:03:05,789:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 11:03:05,789:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:03:05,789:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:03:05,789:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 11:03:05,793:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 11:03:05,793:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:03:05,793:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:03:05,793:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 11:03:05,797:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 11:03:05,797:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:03:05,797:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:03:05,797:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 11:03:05,800:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 11:03:05,800:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:03:05,800:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:03:05,801:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 11:03:05,804:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 11:03:05,804:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:03:05,804:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:03:05,804:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 11:03:05,807:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 11:03:05,807:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:03:05,807:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:03:05,807:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 11:03:05,811:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 11:03:05,811:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:03:05,811:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:03:05,811:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 11:03:05,814:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 11:03:05,814:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:03:05,814:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:03:05,814:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 11:03:05,814:[P:28900]:Rank[0/1] Module: VisionTransformer, Input[0] Shape: torch.Size([64, 192, 28, 28])
2025-01-22 11:03:05,814:[P:28900]:Rank[0/1] Module: VisionTransformer, Output[0] Shape: torch.Size([64, 384, 14, 14])
2025-01-22 11:03:05,814:[P:28900]:Rank[0/1] Module: VisionTransformer, Output[1] Shape: torch.Size([64, 1, 384])
2025-01-22 11:03:12,785:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 3136, 64])
2025-01-22 11:03:12,785:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:03:12,785:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:03:12,785:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 3136, 64])
2025-01-22 11:03:12,785:[P:28900]:Rank[0/1] Module: VisionTransformer, Input[0] Shape: torch.Size([64, 3, 224, 224])
2025-01-22 11:03:12,785:[P:28900]:Rank[0/1] Module: VisionTransformer, Output[0] Shape: torch.Size([64, 64, 56, 56])
2025-01-22 11:03:12,785:[P:28900]:Rank[0/1] Module: VisionTransformer, Output[1] is of type <class 'NoneType'>
2025-01-22 11:03:12,788:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 784, 192])
2025-01-22 11:03:12,788:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:03:12,788:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:03:12,788:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 784, 192])
2025-01-22 11:03:12,790:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 784, 192])
2025-01-22 11:03:12,790:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:03:12,790:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:03:12,790:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 784, 192])
2025-01-22 11:03:12,790:[P:28900]:Rank[0/1] Module: VisionTransformer, Input[0] Shape: torch.Size([64, 64, 56, 56])
2025-01-22 11:03:12,790:[P:28900]:Rank[0/1] Module: VisionTransformer, Output[0] Shape: torch.Size([64, 192, 28, 28])
2025-01-22 11:03:12,790:[P:28900]:Rank[0/1] Module: VisionTransformer, Output[1] is of type <class 'NoneType'>
2025-01-22 11:03:12,794:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 11:03:12,794:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:03:12,794:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:03:12,794:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 11:03:12,797:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 11:03:12,797:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:03:12,798:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:03:12,798:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 11:03:12,800:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 11:03:12,800:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:03:12,800:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:03:12,800:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 11:03:12,803:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 11:03:12,803:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:03:12,803:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:03:12,803:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 11:03:12,806:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 11:03:12,806:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:03:12,806:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:03:12,806:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 11:03:12,810:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 11:03:12,811:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:03:12,811:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:03:12,811:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 11:03:12,814:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 11:03:12,814:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:03:12,814:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:03:12,814:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 11:03:12,817:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 11:03:12,817:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:03:12,817:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:03:12,817:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 11:03:12,820:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 11:03:12,820:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:03:12,820:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:03:12,820:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 11:03:12,823:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 11:03:12,823:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:03:12,823:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:03:12,823:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 11:03:12,823:[P:28900]:Rank[0/1] Module: VisionTransformer, Input[0] Shape: torch.Size([64, 192, 28, 28])
2025-01-22 11:03:12,823:[P:28900]:Rank[0/1] Module: VisionTransformer, Output[0] Shape: torch.Size([64, 384, 14, 14])
2025-01-22 11:03:12,823:[P:28900]:Rank[0/1] Module: VisionTransformer, Output[1] Shape: torch.Size([64, 1, 384])
2025-01-22 11:03:19,723:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 3136, 64])
2025-01-22 11:03:19,723:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:03:19,723:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:03:19,723:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 3136, 64])
2025-01-22 11:03:19,723:[P:28900]:Rank[0/1] Module: VisionTransformer, Input[0] Shape: torch.Size([64, 3, 224, 224])
2025-01-22 11:03:19,723:[P:28900]:Rank[0/1] Module: VisionTransformer, Output[0] Shape: torch.Size([64, 64, 56, 56])
2025-01-22 11:03:19,724:[P:28900]:Rank[0/1] Module: VisionTransformer, Output[1] is of type <class 'NoneType'>
2025-01-22 11:03:19,726:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 784, 192])
2025-01-22 11:03:19,727:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:03:19,727:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:03:19,727:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 784, 192])
2025-01-22 11:03:19,729:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 784, 192])
2025-01-22 11:03:19,729:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:03:19,729:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:03:19,729:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 784, 192])
2025-01-22 11:03:19,729:[P:28900]:Rank[0/1] Module: VisionTransformer, Input[0] Shape: torch.Size([64, 64, 56, 56])
2025-01-22 11:03:19,729:[P:28900]:Rank[0/1] Module: VisionTransformer, Output[0] Shape: torch.Size([64, 192, 28, 28])
2025-01-22 11:03:19,730:[P:28900]:Rank[0/1] Module: VisionTransformer, Output[1] is of type <class 'NoneType'>
2025-01-22 11:03:19,733:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 11:03:19,733:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:03:19,733:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:03:19,733:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 11:03:19,736:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 11:03:19,737:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:03:19,737:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:03:19,737:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 11:03:19,740:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 11:03:19,740:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:03:19,740:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:03:19,741:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 11:03:19,743:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 11:03:19,743:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:03:19,743:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:03:19,744:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 11:03:19,746:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 11:03:19,747:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:03:19,747:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:03:19,747:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 11:03:19,749:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 11:03:19,749:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:03:19,750:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:03:19,750:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 11:03:19,753:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 11:03:19,753:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:03:19,753:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:03:19,753:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 11:03:19,756:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 11:03:19,756:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:03:19,756:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:03:19,756:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 11:03:19,759:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 11:03:19,759:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:03:19,759:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:03:19,759:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 11:03:19,762:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 11:03:19,762:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:03:19,762:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:03:19,762:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 11:03:19,762:[P:28900]:Rank[0/1] Module: VisionTransformer, Input[0] Shape: torch.Size([64, 192, 28, 28])
2025-01-22 11:03:19,762:[P:28900]:Rank[0/1] Module: VisionTransformer, Output[0] Shape: torch.Size([64, 384, 14, 14])
2025-01-22 11:03:19,762:[P:28900]:Rank[0/1] Module: VisionTransformer, Output[1] Shape: torch.Size([64, 1, 384])
2025-01-22 11:03:26,847:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 3136, 64])
2025-01-22 11:03:26,848:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:03:26,848:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:03:26,848:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 3136, 64])
2025-01-22 11:03:26,848:[P:28900]:Rank[0/1] Module: VisionTransformer, Input[0] Shape: torch.Size([64, 3, 224, 224])
2025-01-22 11:03:26,848:[P:28900]:Rank[0/1] Module: VisionTransformer, Output[0] Shape: torch.Size([64, 64, 56, 56])
2025-01-22 11:03:26,848:[P:28900]:Rank[0/1] Module: VisionTransformer, Output[1] is of type <class 'NoneType'>
2025-01-22 11:03:26,851:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 784, 192])
2025-01-22 11:03:26,851:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:03:26,851:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:03:26,851:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 784, 192])
2025-01-22 11:03:26,853:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 784, 192])
2025-01-22 11:03:26,853:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:03:26,853:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:03:26,853:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 784, 192])
2025-01-22 11:03:26,853:[P:28900]:Rank[0/1] Module: VisionTransformer, Input[0] Shape: torch.Size([64, 64, 56, 56])
2025-01-22 11:03:26,854:[P:28900]:Rank[0/1] Module: VisionTransformer, Output[0] Shape: torch.Size([64, 192, 28, 28])
2025-01-22 11:03:26,854:[P:28900]:Rank[0/1] Module: VisionTransformer, Output[1] is of type <class 'NoneType'>
2025-01-22 11:03:26,858:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 11:03:26,858:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:03:26,858:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:03:26,858:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 11:03:26,862:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 11:03:26,862:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:03:26,862:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:03:26,862:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 11:03:26,867:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 11:03:26,867:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:03:26,867:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:03:26,867:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 11:03:26,870:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 11:03:26,870:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:03:26,870:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:03:26,870:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 11:03:26,873:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 11:03:26,874:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:03:26,874:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:03:26,874:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 11:03:26,877:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 11:03:26,877:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:03:26,877:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:03:26,877:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 11:03:26,880:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 11:03:26,880:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:03:26,880:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:03:26,880:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 11:03:26,883:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 11:03:26,883:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:03:26,884:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:03:26,884:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 11:03:26,887:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 11:03:26,887:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:03:26,887:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:03:26,887:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 11:03:26,890:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 11:03:26,890:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:03:26,890:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:03:26,890:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 11:03:26,890:[P:28900]:Rank[0/1] Module: VisionTransformer, Input[0] Shape: torch.Size([64, 192, 28, 28])
2025-01-22 11:03:26,890:[P:28900]:Rank[0/1] Module: VisionTransformer, Output[0] Shape: torch.Size([64, 384, 14, 14])
2025-01-22 11:03:26,890:[P:28900]:Rank[0/1] Module: VisionTransformer, Output[1] Shape: torch.Size([64, 1, 384])
2025-01-22 11:03:33,696:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 3136, 64])
2025-01-22 11:03:33,696:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:03:33,696:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:03:33,696:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 3136, 64])
2025-01-22 11:03:33,696:[P:28900]:Rank[0/1] Module: VisionTransformer, Input[0] Shape: torch.Size([64, 3, 224, 224])
2025-01-22 11:03:33,696:[P:28900]:Rank[0/1] Module: VisionTransformer, Output[0] Shape: torch.Size([64, 64, 56, 56])
2025-01-22 11:03:33,696:[P:28900]:Rank[0/1] Module: VisionTransformer, Output[1] is of type <class 'NoneType'>
2025-01-22 11:03:33,699:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 784, 192])
2025-01-22 11:03:33,699:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:03:33,699:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:03:33,699:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 784, 192])
2025-01-22 11:03:33,701:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 784, 192])
2025-01-22 11:03:33,701:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:03:33,701:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:03:33,702:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 784, 192])
2025-01-22 11:03:33,702:[P:28900]:Rank[0/1] Module: VisionTransformer, Input[0] Shape: torch.Size([64, 64, 56, 56])
2025-01-22 11:03:33,702:[P:28900]:Rank[0/1] Module: VisionTransformer, Output[0] Shape: torch.Size([64, 192, 28, 28])
2025-01-22 11:03:33,702:[P:28900]:Rank[0/1] Module: VisionTransformer, Output[1] is of type <class 'NoneType'>
2025-01-22 11:03:33,705:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 11:03:33,705:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:03:33,705:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:03:33,705:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 11:03:33,708:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 11:03:33,708:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:03:33,708:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:03:33,708:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 11:03:33,711:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 11:03:33,711:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:03:33,711:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:03:33,711:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 11:03:33,714:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 11:03:33,714:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:03:33,714:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:03:33,714:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 11:03:33,717:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 11:03:33,717:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:03:33,717:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:03:33,717:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 11:03:33,720:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 11:03:33,720:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:03:33,720:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:03:33,720:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 11:03:33,723:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 11:03:33,723:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:03:33,723:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:03:33,723:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 11:03:33,726:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 11:03:33,726:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:03:33,726:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:03:33,726:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 11:03:33,729:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 11:03:33,729:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:03:33,729:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:03:33,729:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 11:03:33,731:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([64, 197, 384])
2025-01-22 11:03:33,731:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:03:33,731:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:03:33,731:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([64, 197, 384])
2025-01-22 11:03:33,732:[P:28900]:Rank[0/1] Module: VisionTransformer, Input[0] Shape: torch.Size([64, 192, 28, 28])
2025-01-22 11:03:33,732:[P:28900]:Rank[0/1] Module: VisionTransformer, Output[0] Shape: torch.Size([64, 384, 14, 14])
2025-01-22 11:03:33,732:[P:28900]:Rank[0/1] Module: VisionTransformer, Output[1] Shape: torch.Size([64, 1, 384])
2025-01-22 11:03:40,584:[P:28900]:Rank[0/1] => Epoch[1]: train end, duration: 89.00s
2025-01-22 11:03:40,585:[P:28900]:Rank[0/1] => Epoch[1]: validate start
2025-01-22 11:03:40,585:[P:28900]:Rank[0/1] => switch to eval mode
2025-01-22 11:03:40,902:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([32, 3136, 64])
2025-01-22 11:03:40,903:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:03:40,903:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:03:40,903:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([32, 3136, 64])
2025-01-22 11:03:40,903:[P:28900]:Rank[0/1] Module: VisionTransformer, Input[0] Shape: torch.Size([32, 3, 224, 224])
2025-01-22 11:03:40,903:[P:28900]:Rank[0/1] Module: VisionTransformer, Output[0] Shape: torch.Size([32, 64, 56, 56])
2025-01-22 11:03:40,905:[P:28900]:Rank[0/1] Module: VisionTransformer, Output[1] is of type <class 'NoneType'>
2025-01-22 11:03:40,908:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([32, 784, 192])
2025-01-22 11:03:40,908:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:03:40,908:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:03:40,908:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([32, 784, 192])
2025-01-22 11:03:40,910:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([32, 784, 192])
2025-01-22 11:03:40,910:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:03:40,910:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:03:40,910:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([32, 784, 192])
2025-01-22 11:03:40,911:[P:28900]:Rank[0/1] Module: VisionTransformer, Input[0] Shape: torch.Size([32, 64, 56, 56])
2025-01-22 11:03:40,911:[P:28900]:Rank[0/1] Module: VisionTransformer, Output[0] Shape: torch.Size([32, 192, 28, 28])
2025-01-22 11:03:40,911:[P:28900]:Rank[0/1] Module: VisionTransformer, Output[1] is of type <class 'NoneType'>
2025-01-22 11:03:40,914:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([32, 197, 384])
2025-01-22 11:03:40,914:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:03:40,914:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:03:40,914:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([32, 197, 384])
2025-01-22 11:03:40,916:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([32, 197, 384])
2025-01-22 11:03:40,917:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:03:40,917:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:03:40,917:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([32, 197, 384])
2025-01-22 11:03:40,919:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([32, 197, 384])
2025-01-22 11:03:40,919:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:03:40,919:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:03:40,919:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([32, 197, 384])
2025-01-22 11:03:40,921:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([32, 197, 384])
2025-01-22 11:03:40,921:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:03:40,921:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:03:40,921:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([32, 197, 384])
2025-01-22 11:03:40,923:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([32, 197, 384])
2025-01-22 11:03:40,923:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:03:40,923:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:03:40,924:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([32, 197, 384])
2025-01-22 11:03:40,925:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([32, 197, 384])
2025-01-22 11:03:40,926:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:03:40,926:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:03:40,926:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([32, 197, 384])
2025-01-22 11:03:40,928:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([32, 197, 384])
2025-01-22 11:03:40,928:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:03:40,928:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:03:40,928:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([32, 197, 384])
2025-01-22 11:03:40,930:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([32, 197, 384])
2025-01-22 11:03:40,930:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:03:40,930:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:03:40,930:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([32, 197, 384])
2025-01-22 11:03:40,932:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([32, 197, 384])
2025-01-22 11:03:40,933:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:03:40,933:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:03:40,933:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([32, 197, 384])
2025-01-22 11:03:40,935:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([32, 197, 384])
2025-01-22 11:03:40,935:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:03:40,935:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:03:40,935:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([32, 197, 384])
2025-01-22 11:03:40,935:[P:28900]:Rank[0/1] Module: VisionTransformer, Input[0] Shape: torch.Size([32, 192, 28, 28])
2025-01-22 11:03:40,935:[P:28900]:Rank[0/1] Module: VisionTransformer, Output[0] Shape: torch.Size([32, 384, 14, 14])
2025-01-22 11:03:40,935:[P:28900]:Rank[0/1] Module: VisionTransformer, Output[1] Shape: torch.Size([32, 1, 384])
2025-01-22 11:03:42,560:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([32, 3136, 64])
2025-01-22 11:03:42,560:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:03:42,561:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:03:42,561:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([32, 3136, 64])
2025-01-22 11:03:42,561:[P:28900]:Rank[0/1] Module: VisionTransformer, Input[0] Shape: torch.Size([32, 3, 224, 224])
2025-01-22 11:03:42,561:[P:28900]:Rank[0/1] Module: VisionTransformer, Output[0] Shape: torch.Size([32, 64, 56, 56])
2025-01-22 11:03:42,561:[P:28900]:Rank[0/1] Module: VisionTransformer, Output[1] is of type <class 'NoneType'>
2025-01-22 11:03:42,563:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([32, 784, 192])
2025-01-22 11:03:42,563:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:03:42,563:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:03:42,563:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([32, 784, 192])
2025-01-22 11:03:42,564:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([32, 784, 192])
2025-01-22 11:03:42,564:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:03:42,565:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:03:42,565:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([32, 784, 192])
2025-01-22 11:03:42,565:[P:28900]:Rank[0/1] Module: VisionTransformer, Input[0] Shape: torch.Size([32, 64, 56, 56])
2025-01-22 11:03:42,565:[P:28900]:Rank[0/1] Module: VisionTransformer, Output[0] Shape: torch.Size([32, 192, 28, 28])
2025-01-22 11:03:42,565:[P:28900]:Rank[0/1] Module: VisionTransformer, Output[1] is of type <class 'NoneType'>
2025-01-22 11:03:42,567:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([32, 197, 384])
2025-01-22 11:03:42,567:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:03:42,567:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:03:42,567:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([32, 197, 384])
2025-01-22 11:03:42,569:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([32, 197, 384])
2025-01-22 11:03:42,569:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:03:42,569:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:03:42,569:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([32, 197, 384])
2025-01-22 11:03:42,571:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([32, 197, 384])
2025-01-22 11:03:42,571:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:03:42,571:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:03:42,571:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([32, 197, 384])
2025-01-22 11:03:42,573:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([32, 197, 384])
2025-01-22 11:03:42,574:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:03:42,574:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:03:42,574:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([32, 197, 384])
2025-01-22 11:03:42,576:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([32, 197, 384])
2025-01-22 11:03:42,576:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:03:42,576:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:03:42,576:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([32, 197, 384])
2025-01-22 11:03:42,578:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([32, 197, 384])
2025-01-22 11:03:42,578:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:03:42,578:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:03:42,578:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([32, 197, 384])
2025-01-22 11:03:42,579:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([32, 197, 384])
2025-01-22 11:03:42,580:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:03:42,580:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:03:42,580:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([32, 197, 384])
2025-01-22 11:03:42,581:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([32, 197, 384])
2025-01-22 11:03:42,582:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:03:42,582:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:03:42,582:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([32, 197, 384])
2025-01-22 11:03:42,584:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([32, 197, 384])
2025-01-22 11:03:42,584:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:03:42,584:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:03:42,584:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([32, 197, 384])
2025-01-22 11:03:42,586:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([32, 197, 384])
2025-01-22 11:03:42,586:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:03:42,586:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:03:42,586:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([32, 197, 384])
2025-01-22 11:03:42,586:[P:28900]:Rank[0/1] Module: VisionTransformer, Input[0] Shape: torch.Size([32, 192, 28, 28])
2025-01-22 11:03:42,586:[P:28900]:Rank[0/1] Module: VisionTransformer, Output[0] Shape: torch.Size([32, 384, 14, 14])
2025-01-22 11:03:42,586:[P:28900]:Rank[0/1] Module: VisionTransformer, Output[1] Shape: torch.Size([32, 1, 384])
2025-01-22 11:03:44,153:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([29, 3136, 64])
2025-01-22 11:03:44,153:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:03:44,153:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:03:44,153:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([29, 3136, 64])
2025-01-22 11:03:44,153:[P:28900]:Rank[0/1] Module: VisionTransformer, Input[0] Shape: torch.Size([29, 3, 224, 224])
2025-01-22 11:03:44,153:[P:28900]:Rank[0/1] Module: VisionTransformer, Output[0] Shape: torch.Size([29, 64, 56, 56])
2025-01-22 11:03:44,153:[P:28900]:Rank[0/1] Module: VisionTransformer, Output[1] is of type <class 'NoneType'>
2025-01-22 11:03:44,155:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([29, 784, 192])
2025-01-22 11:03:44,155:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:03:44,155:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:03:44,155:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([29, 784, 192])
2025-01-22 11:03:44,157:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([29, 784, 192])
2025-01-22 11:03:44,157:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:03:44,157:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:03:44,157:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([29, 784, 192])
2025-01-22 11:03:44,157:[P:28900]:Rank[0/1] Module: VisionTransformer, Input[0] Shape: torch.Size([29, 64, 56, 56])
2025-01-22 11:03:44,157:[P:28900]:Rank[0/1] Module: VisionTransformer, Output[0] Shape: torch.Size([29, 192, 28, 28])
2025-01-22 11:03:44,157:[P:28900]:Rank[0/1] Module: VisionTransformer, Output[1] is of type <class 'NoneType'>
2025-01-22 11:03:44,159:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([29, 197, 384])
2025-01-22 11:03:44,159:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:03:44,159:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:03:44,159:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([29, 197, 384])
2025-01-22 11:03:44,161:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([29, 197, 384])
2025-01-22 11:03:44,161:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:03:44,161:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:03:44,161:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([29, 197, 384])
2025-01-22 11:03:44,163:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([29, 197, 384])
2025-01-22 11:03:44,163:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:03:44,163:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:03:44,163:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([29, 197, 384])
2025-01-22 11:03:44,164:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([29, 197, 384])
2025-01-22 11:03:44,164:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:03:44,164:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:03:44,164:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([29, 197, 384])
2025-01-22 11:03:44,166:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([29, 197, 384])
2025-01-22 11:03:44,166:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:03:44,166:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:03:44,166:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([29, 197, 384])
2025-01-22 11:03:44,168:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([29, 197, 384])
2025-01-22 11:03:44,168:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:03:44,168:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:03:44,168:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([29, 197, 384])
2025-01-22 11:03:44,170:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([29, 197, 384])
2025-01-22 11:03:44,170:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:03:44,170:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:03:44,171:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([29, 197, 384])
2025-01-22 11:03:44,172:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([29, 197, 384])
2025-01-22 11:03:44,173:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:03:44,173:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:03:44,173:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([29, 197, 384])
2025-01-22 11:03:44,175:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([29, 197, 384])
2025-01-22 11:03:44,175:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:03:44,175:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:03:44,175:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([29, 197, 384])
2025-01-22 11:03:44,177:[P:28900]:Rank[0/1] Module: Block, Input[0] Shape: torch.Size([29, 197, 384])
2025-01-22 11:03:44,177:[P:28900]:Rank[0/1] Module: Block, Input[1] is of type <class 'int'>
2025-01-22 11:03:44,177:[P:28900]:Rank[0/1] Module: Block, Input[2] is of type <class 'int'>
2025-01-22 11:03:44,177:[P:28900]:Rank[0/1] Module: Block, Output Shape: torch.Size([29, 197, 384])
2025-01-22 11:03:44,178:[P:28900]:Rank[0/1] Module: VisionTransformer, Input[0] Shape: torch.Size([29, 192, 28, 28])
2025-01-22 11:03:44,178:[P:28900]:Rank[0/1] Module: VisionTransformer, Output[0] Shape: torch.Size([29, 384, 14, 14])
2025-01-22 11:03:44,178:[P:28900]:Rank[0/1] Module: VisionTransformer, Output[1] Shape: torch.Size([29, 1, 384])
2025-01-22 11:03:45,526:[P:28900]:Rank[0/1] => synchronize...
2025-01-22 11:03:45,527:[P:28900]:Rank[0/1] => TEST:	Loss 3.7174	Error@1 73.118%	Error@5 0.000%	Accuracy@1 26.882%	Accuracy@5 100.000%	
2025-01-22 11:03:45,527:[P:28900]:Rank[0/1] => switch to train mode
2025-01-22 11:03:45,528:[P:28900]:Rank[0/1] => Epoch[1]: validate end, duration: 4.94s
2025-01-22 11:03:45,528:[P:28900]:Rank[0/1] => lr: 0.00010059999999999999
2025-01-22 11:03:45,530:[P:28900]:Rank[0/1] => saving checkpoint to OUTPUT/imagenet/cvt-13-224x224
2025-01-22 11:03:45,959:[P:28900]:Rank[0/1] => save model to OUTPUT/imagenet/cvt-13-224x224/model_best.pth
2025-01-22 11:03:46,088:[P:28900]:Rank[0/1] => Epoch[1]: epoch end, duration : 94.50s
2025-01-22 11:03:46,088:[P:28900]:Rank[0/1] => save model to OUTPUT/imagenet/cvt-13-224x224/final_state.pth
2025-01-22 11:03:46,224:[P:28900]:Rank[0/1] => finish training
