2025-01-22 13:13:01,029:[P:14008]:Rank[0/1] => collecting env info (might take some time)
2025-01-22 13:13:05,716:[P:14008]:Rank[0/1] 
PyTorch version: 1.7.1+cu110
Is debug build: False
CUDA used to build PyTorch: 11.0
ROCM used to build PyTorch: N/A

OS: Ubuntu 20.04.6 LTS (x86_64)
GCC version: (Ubuntu 9.4.0-1ubuntu1~20.04.1) 9.4.0
Clang version: Could not collect
CMake version: Could not collect

Python version: 3.9 (64-bit runtime)
Is CUDA available: True
CUDA runtime version: 10.1.243
GPU models and configuration: GPU 0: NVIDIA GeForce RTX 2070
Nvidia driver version: 536.23
cuDNN version: Could not collect
HIP runtime version: N/A
MIOpen runtime version: N/A

Versions of relevant libraries:
[pip3] numpy==1.19.3
[pip3] torch==1.7.1+cu110
[pip3] torchinfo==1.8.0
[pip3] torchsummary==1.5.1
[pip3] torchvision==0.8.2+cu110
[conda] _pytorch_select           0.1                       cpu_0  
[conda] blas                      1.0                         mkl  
[conda] cpuonly                   2.0                           0    pytorch
[conda] libmklml                  2019.0.5             h06a4308_0  
[conda] mkl                       2020.2                      256  
[conda] mkl-service               2.3.0            py39he8ac12f_0  
[conda] mkl_fft                   1.3.0            py39h54f3939_0  
[conda] mkl_random                1.0.2            py39h63df603_0  
[conda] numpy                     1.19.3                   pypi_0    pypi
[conda] pytorch-mutex             1.0                         cpu    pytorch
[conda] torch                     1.7.1+cu110              pypi_0    pypi
[conda] torchinfo                 1.8.0                    pypi_0    pypi
[conda] torchsummary              1.5.1                    pypi_0    pypi
[conda] torchvision               0.8.2+cu110              pypi_0    pypi
2025-01-22 13:13:05,717:[P:14008]:Rank[0/1] Namespace(cfg='experiments/imagenet/cvt/cvt-13-224x224.yaml', local_rank=0, port=9000, opts=[], num_gpus=1, distributed=False)
2025-01-22 13:13:05,717:[P:14008]:Rank[0/1] AMP:
  ENABLED: True
  MEMORY_FORMAT: nchw
AUG:
  COLOR_JITTER: [0.4, 0.4, 0.4, 0.1, 0.0]
  DROPBLOCK_BLOCK_SIZE: 7
  DROPBLOCK_KEEP_PROB: 1.0
  DROPBLOCK_LAYERS: [3, 4]
  GAUSSIAN_BLUR: 0.0
  GRAY_SCALE: 0.0
  INTERPOLATION: 2
  MIXCUT: 1.0
  MIXCUT_AND_MIXUP: False
  MIXCUT_MINMAX: []
  MIXUP: 0.8
  MIXUP_MODE: batch
  MIXUP_PROB: 1.0
  MIXUP_SWITCH_PROB: 0.5
  RATIO: (0.75, 1.3333333333333333)
  SCALE: (0.08, 1.0)
  TIMM_AUG:
    AUTO_AUGMENT: rand-m9-mstd0.5-inc1
    COLOR_JITTER: 0.4
    HFLIP: 0.5
    INTERPOLATION: bicubic
    RE_COUNT: 1
    RE_MODE: pixel
    RE_PROB: 0.25
    RE_SPLIT: False
    USE_LOADER: True
    USE_TRANSFORM: False
    VFLIP: 0.0
BASE: ['']
CUDNN:
  BENCHMARK: True
  DETERMINISTIC: False
  ENABLED: True
DATASET:
  DATASET: imagenet
  DATA_FORMAT: jpg
  LABELMAP: 
  ROOT: DATASET/imagenet/
  SAMPLER: default
  TARGET_SIZE: -1
  TEST_SET: val
  TEST_TSV_LIST: []
  TRAIN_SET: train
  TRAIN_TSV_LIST: []
DATA_DIR: 
DEBUG:
  DEBUG: False
DIST_BACKEND: nccl
FINETUNE:
  BASE_LR: 0.003
  BATCH_SIZE: 512
  EVAL_EVERY: 3000
  FINETUNE: False
  FROZEN_LAYERS: []
  LR_SCHEDULER:
    DECAY_TYPE: step
  TRAIN_MODE: True
  USE_TRAIN_AUG: False
GPUS: (0,)
INPUT:
  MEAN: [0.485, 0.456, 0.406]
  STD: [0.229, 0.224, 0.225]
LOSS:
  LABEL_SMOOTHING: 0.1
  LOSS: softmax
MODEL:
  INIT_WEIGHTS: True
  NAME: cls_cvt
  NUM_CLASSES: 1000
  PRETRAINED: 
  PRETRAINED_LAYERS: ['*']
  SPEC:
    ATTN_DROP_RATE: [0.0, 0.0, 0.0]
    CLS_TOKEN: [False, False, True]
    DEPTH: [1, 2, 10]
    DIM_EMBED: [64, 192, 384]
    DROP_PATH_RATE: [0.0, 0.0, 0.1]
    DROP_RATE: [0.0, 0.0, 0.0]
    INIT: trunc_norm
    KERNEL_QKV: [3, 3, 3]
    MLP_RATIO: [4.0, 4.0, 4.0]
    NUM_HEADS: [1, 3, 6]
    NUM_STAGES: 3
    PADDING_KV: [1, 1, 1]
    PADDING_Q: [1, 1, 1]
    PATCH_PADDING: [2, 1, 1]
    PATCH_SIZE: [7, 3, 3]
    PATCH_STRIDE: [4, 2, 2]
    POS_EMBED: [False, False, False]
    QKV_BIAS: [True, True, True]
    QKV_PROJ_METHOD: ['dw_bn', 'dw_bn', 'dw_bn']
    STRIDE_KV: [2, 2, 2]
    STRIDE_Q: [1, 1, 1]
MODEL_SUMMARY: False
MULTIPROCESSING_DISTRIBUTED: True
NAME: cvt-13-224x224
OUTPUT_DIR: OUTPUT/
PIN_MEMORY: True
PRINT_FREQ: 500
RANK: 0
TEST:
  BATCH_SIZE_PER_GPU: 32
  CENTER_CROP: True
  IMAGE_SIZE: [224, 224]
  INTERPOLATION: 3
  MODEL_FILE: 
  REAL_LABELS: False
  VALID_LABELS: 
TRAIN:
  AUTO_RESUME: True
  BATCH_SIZE_PER_GPU: 64
  BEGIN_EPOCH: 0
  CHECKPOINT: 
  CLIP_GRAD_NORM: 0.0
  DETECT_ANOMALY: False
  END_EPOCH: 2
  EVAL_BEGIN_EPOCH: 0
  GAMMA1: 0.99
  GAMMA2: 0.0
  IMAGE_SIZE: [224, 224]
  LR: 0.00025
  LR_SCHEDULER:
    ARGS:
      cooldown_epochs: 10
      decay_rate: 0.1
      epochs: 2
      min_lr: 1e-05
      sched: cosine
      warmup_epochs: 5
      warmup_lr: 1e-06
    METHOD: timm
  MOMENTUM: 0.9
  NESTEROV: True
  OPTIMIZER: adamW
  OPTIMIZER_ARGS:
    
  SAVE_ALL_MODELS: False
  SCALE_LR: True
  SHUFFLE: True
  WD: 0.05
  WITHOUT_WD_LIST: ['bn', 'bias', 'ln']
VERBOSE: True
WORKERS: 6
2025-01-22 13:13:05,717:[P:14008]:Rank[0/1] => using 1 GPUs
2025-01-22 13:13:05,717:[P:14008]:Rank[0/1] => saving config into: OUTPUT/imagenet/cvt-13-224x224/config.yaml
2025-01-22 13:13:05,729:[P:14008]:Rank[0/1] => init weight of Linear from trunc norm
2025-01-22 13:13:05,729:[P:14008]:Rank[0/1] => init bias of Linear to zeros
2025-01-22 13:13:05,729:[P:14008]:Rank[0/1] => init weight of Linear from trunc norm
2025-01-22 13:13:05,729:[P:14008]:Rank[0/1] => init bias of Linear to zeros
2025-01-22 13:13:05,730:[P:14008]:Rank[0/1] => init weight of Linear from trunc norm
2025-01-22 13:13:05,730:[P:14008]:Rank[0/1] => init bias of Linear to zeros
2025-01-22 13:13:05,730:[P:14008]:Rank[0/1] => init weight of Linear from trunc norm
2025-01-22 13:13:05,730:[P:14008]:Rank[0/1] => init bias of Linear to zeros
2025-01-22 13:13:05,730:[P:14008]:Rank[0/1] => init weight of Linear from trunc norm
2025-01-22 13:13:05,730:[P:14008]:Rank[0/1] => init bias of Linear to zeros
2025-01-22 13:13:05,730:[P:14008]:Rank[0/1] => init weight of Linear from trunc norm
2025-01-22 13:13:05,730:[P:14008]:Rank[0/1] => init bias of Linear to zeros
2025-01-22 13:13:05,740:[P:14008]:Rank[0/1] => init weight of Linear from trunc norm
2025-01-22 13:13:05,741:[P:14008]:Rank[0/1] => init bias of Linear to zeros
2025-01-22 13:13:05,741:[P:14008]:Rank[0/1] => init weight of Linear from trunc norm
2025-01-22 13:13:05,741:[P:14008]:Rank[0/1] => init bias of Linear to zeros
2025-01-22 13:13:05,742:[P:14008]:Rank[0/1] => init weight of Linear from trunc norm
2025-01-22 13:13:05,742:[P:14008]:Rank[0/1] => init bias of Linear to zeros
2025-01-22 13:13:05,742:[P:14008]:Rank[0/1] => init weight of Linear from trunc norm
2025-01-22 13:13:05,743:[P:14008]:Rank[0/1] => init bias of Linear to zeros
2025-01-22 13:13:05,743:[P:14008]:Rank[0/1] => init weight of Linear from trunc norm
2025-01-22 13:13:05,744:[P:14008]:Rank[0/1] => init bias of Linear to zeros
2025-01-22 13:13:05,744:[P:14008]:Rank[0/1] => init weight of Linear from trunc norm
2025-01-22 13:13:05,746:[P:14008]:Rank[0/1] => init bias of Linear to zeros
2025-01-22 13:13:05,746:[P:14008]:Rank[0/1] => init weight of Linear from trunc norm
2025-01-22 13:13:05,747:[P:14008]:Rank[0/1] => init bias of Linear to zeros
2025-01-22 13:13:05,747:[P:14008]:Rank[0/1] => init weight of Linear from trunc norm
2025-01-22 13:13:05,747:[P:14008]:Rank[0/1] => init bias of Linear to zeros
2025-01-22 13:13:05,747:[P:14008]:Rank[0/1] => init weight of Linear from trunc norm
2025-01-22 13:13:05,748:[P:14008]:Rank[0/1] => init bias of Linear to zeros
2025-01-22 13:13:05,748:[P:14008]:Rank[0/1] => init weight of Linear from trunc norm
2025-01-22 13:13:05,749:[P:14008]:Rank[0/1] => init bias of Linear to zeros
2025-01-22 13:13:05,749:[P:14008]:Rank[0/1] => init weight of Linear from trunc norm
2025-01-22 13:13:05,750:[P:14008]:Rank[0/1] => init bias of Linear to zeros
2025-01-22 13:13:05,750:[P:14008]:Rank[0/1] => init weight of Linear from trunc norm
2025-01-22 13:13:05,752:[P:14008]:Rank[0/1] => init bias of Linear to zeros
2025-01-22 13:13:05,865:[P:14008]:Rank[0/1] => init weight of Linear from trunc norm
2025-01-22 13:13:05,866:[P:14008]:Rank[0/1] => init bias of Linear to zeros
2025-01-22 13:13:05,866:[P:14008]:Rank[0/1] => init weight of Linear from trunc norm
2025-01-22 13:13:05,867:[P:14008]:Rank[0/1] => init bias of Linear to zeros
2025-01-22 13:13:05,867:[P:14008]:Rank[0/1] => init weight of Linear from trunc norm
2025-01-22 13:13:05,868:[P:14008]:Rank[0/1] => init bias of Linear to zeros
2025-01-22 13:13:05,868:[P:14008]:Rank[0/1] => init weight of Linear from trunc norm
2025-01-22 13:13:05,869:[P:14008]:Rank[0/1] => init bias of Linear to zeros
2025-01-22 13:13:05,869:[P:14008]:Rank[0/1] => init weight of Linear from trunc norm
2025-01-22 13:13:05,872:[P:14008]:Rank[0/1] => init bias of Linear to zeros
2025-01-22 13:13:05,872:[P:14008]:Rank[0/1] => init weight of Linear from trunc norm
2025-01-22 13:13:05,875:[P:14008]:Rank[0/1] => init bias of Linear to zeros
2025-01-22 13:13:05,876:[P:14008]:Rank[0/1] => init weight of Linear from trunc norm
2025-01-22 13:13:05,877:[P:14008]:Rank[0/1] => init bias of Linear to zeros
2025-01-22 13:13:05,878:[P:14008]:Rank[0/1] => init weight of Linear from trunc norm
2025-01-22 13:13:05,879:[P:14008]:Rank[0/1] => init bias of Linear to zeros
2025-01-22 13:13:05,879:[P:14008]:Rank[0/1] => init weight of Linear from trunc norm
2025-01-22 13:13:05,880:[P:14008]:Rank[0/1] => init bias of Linear to zeros
2025-01-22 13:13:05,880:[P:14008]:Rank[0/1] => init weight of Linear from trunc norm
2025-01-22 13:13:05,881:[P:14008]:Rank[0/1] => init bias of Linear to zeros
2025-01-22 13:13:05,882:[P:14008]:Rank[0/1] => init weight of Linear from trunc norm
2025-01-22 13:13:05,886:[P:14008]:Rank[0/1] => init bias of Linear to zeros
2025-01-22 13:13:05,886:[P:14008]:Rank[0/1] => init weight of Linear from trunc norm
2025-01-22 13:13:05,889:[P:14008]:Rank[0/1] => init bias of Linear to zeros
2025-01-22 13:13:05,889:[P:14008]:Rank[0/1] => init weight of Linear from trunc norm
2025-01-22 13:13:05,890:[P:14008]:Rank[0/1] => init bias of Linear to zeros
2025-01-22 13:13:05,890:[P:14008]:Rank[0/1] => init weight of Linear from trunc norm
2025-01-22 13:13:05,891:[P:14008]:Rank[0/1] => init bias of Linear to zeros
2025-01-22 13:13:05,891:[P:14008]:Rank[0/1] => init weight of Linear from trunc norm
2025-01-22 13:13:05,892:[P:14008]:Rank[0/1] => init bias of Linear to zeros
2025-01-22 13:13:05,892:[P:14008]:Rank[0/1] => init weight of Linear from trunc norm
2025-01-22 13:13:05,893:[P:14008]:Rank[0/1] => init bias of Linear to zeros
2025-01-22 13:13:05,893:[P:14008]:Rank[0/1] => init weight of Linear from trunc norm
2025-01-22 13:13:05,896:[P:14008]:Rank[0/1] => init bias of Linear to zeros
2025-01-22 13:13:05,897:[P:14008]:Rank[0/1] => init weight of Linear from trunc norm
2025-01-22 13:13:05,900:[P:14008]:Rank[0/1] => init bias of Linear to zeros
2025-01-22 13:13:05,901:[P:14008]:Rank[0/1] => init weight of Linear from trunc norm
2025-01-22 13:13:05,902:[P:14008]:Rank[0/1] => init bias of Linear to zeros
2025-01-22 13:13:05,902:[P:14008]:Rank[0/1] => init weight of Linear from trunc norm
2025-01-22 13:13:05,903:[P:14008]:Rank[0/1] => init bias of Linear to zeros
2025-01-22 13:13:05,903:[P:14008]:Rank[0/1] => init weight of Linear from trunc norm
2025-01-22 13:13:05,904:[P:14008]:Rank[0/1] => init bias of Linear to zeros
2025-01-22 13:13:05,904:[P:14008]:Rank[0/1] => init weight of Linear from trunc norm
2025-01-22 13:13:05,905:[P:14008]:Rank[0/1] => init bias of Linear to zeros
2025-01-22 13:13:05,905:[P:14008]:Rank[0/1] => init weight of Linear from trunc norm
2025-01-22 13:13:05,908:[P:14008]:Rank[0/1] => init bias of Linear to zeros
2025-01-22 13:13:05,908:[P:14008]:Rank[0/1] => init weight of Linear from trunc norm
2025-01-22 13:13:05,912:[P:14008]:Rank[0/1] => init bias of Linear to zeros
2025-01-22 13:13:05,913:[P:14008]:Rank[0/1] => init weight of Linear from trunc norm
2025-01-22 13:13:05,914:[P:14008]:Rank[0/1] => init bias of Linear to zeros
2025-01-22 13:13:05,914:[P:14008]:Rank[0/1] => init weight of Linear from trunc norm
2025-01-22 13:13:05,915:[P:14008]:Rank[0/1] => init bias of Linear to zeros
2025-01-22 13:13:05,915:[P:14008]:Rank[0/1] => init weight of Linear from trunc norm
2025-01-22 13:13:05,917:[P:14008]:Rank[0/1] => init bias of Linear to zeros
2025-01-22 13:13:05,917:[P:14008]:Rank[0/1] => init weight of Linear from trunc norm
2025-01-22 13:13:05,918:[P:14008]:Rank[0/1] => init bias of Linear to zeros
2025-01-22 13:13:05,918:[P:14008]:Rank[0/1] => init weight of Linear from trunc norm
2025-01-22 13:13:05,921:[P:14008]:Rank[0/1] => init bias of Linear to zeros
2025-01-22 13:13:05,922:[P:14008]:Rank[0/1] => init weight of Linear from trunc norm
2025-01-22 13:13:05,925:[P:14008]:Rank[0/1] => init bias of Linear to zeros
2025-01-22 13:13:05,926:[P:14008]:Rank[0/1] => init weight of Linear from trunc norm
2025-01-22 13:13:05,927:[P:14008]:Rank[0/1] => init bias of Linear to zeros
2025-01-22 13:13:05,927:[P:14008]:Rank[0/1] => init weight of Linear from trunc norm
2025-01-22 13:13:05,928:[P:14008]:Rank[0/1] => init bias of Linear to zeros
2025-01-22 13:13:05,928:[P:14008]:Rank[0/1] => init weight of Linear from trunc norm
2025-01-22 13:13:05,928:[P:14008]:Rank[0/1] => init bias of Linear to zeros
2025-01-22 13:13:05,929:[P:14008]:Rank[0/1] => init weight of Linear from trunc norm
2025-01-22 13:13:05,930:[P:14008]:Rank[0/1] => init bias of Linear to zeros
2025-01-22 13:13:05,930:[P:14008]:Rank[0/1] => init weight of Linear from trunc norm
2025-01-22 13:13:05,933:[P:14008]:Rank[0/1] => init bias of Linear to zeros
2025-01-22 13:13:05,933:[P:14008]:Rank[0/1] => init weight of Linear from trunc norm
2025-01-22 13:13:05,936:[P:14008]:Rank[0/1] => init bias of Linear to zeros
2025-01-22 13:13:05,936:[P:14008]:Rank[0/1] => init weight of Linear from trunc norm
2025-01-22 13:13:05,937:[P:14008]:Rank[0/1] => init bias of Linear to zeros
2025-01-22 13:13:05,938:[P:14008]:Rank[0/1] => init weight of Linear from trunc norm
2025-01-22 13:13:05,939:[P:14008]:Rank[0/1] => init bias of Linear to zeros
2025-01-22 13:13:05,939:[P:14008]:Rank[0/1] => init weight of Linear from trunc norm
2025-01-22 13:13:05,940:[P:14008]:Rank[0/1] => init bias of Linear to zeros
2025-01-22 13:13:05,940:[P:14008]:Rank[0/1] => init weight of Linear from trunc norm
2025-01-22 13:13:05,941:[P:14008]:Rank[0/1] => init bias of Linear to zeros
2025-01-22 13:13:05,941:[P:14008]:Rank[0/1] => init weight of Linear from trunc norm
2025-01-22 13:13:05,944:[P:14008]:Rank[0/1] => init bias of Linear to zeros
2025-01-22 13:13:05,944:[P:14008]:Rank[0/1] => init weight of Linear from trunc norm
2025-01-22 13:13:05,948:[P:14008]:Rank[0/1] => init bias of Linear to zeros
2025-01-22 13:13:05,948:[P:14008]:Rank[0/1] => init weight of Linear from trunc norm
2025-01-22 13:13:05,949:[P:14008]:Rank[0/1] => init bias of Linear to zeros
2025-01-22 13:13:05,949:[P:14008]:Rank[0/1] => init weight of Linear from trunc norm
2025-01-22 13:13:05,950:[P:14008]:Rank[0/1] => init bias of Linear to zeros
2025-01-22 13:13:05,950:[P:14008]:Rank[0/1] => init weight of Linear from trunc norm
2025-01-22 13:13:05,952:[P:14008]:Rank[0/1] => init bias of Linear to zeros
2025-01-22 13:13:05,952:[P:14008]:Rank[0/1] => init weight of Linear from trunc norm
2025-01-22 13:13:05,953:[P:14008]:Rank[0/1] => init bias of Linear to zeros
2025-01-22 13:13:05,953:[P:14008]:Rank[0/1] => init weight of Linear from trunc norm
2025-01-22 13:13:05,956:[P:14008]:Rank[0/1] => init bias of Linear to zeros
2025-01-22 13:13:05,956:[P:14008]:Rank[0/1] => init weight of Linear from trunc norm
2025-01-22 13:13:05,960:[P:14008]:Rank[0/1] => init bias of Linear to zeros
2025-01-22 13:13:05,960:[P:14008]:Rank[0/1] => init weight of Linear from trunc norm
2025-01-22 13:13:05,961:[P:14008]:Rank[0/1] => init bias of Linear to zeros
2025-01-22 13:13:05,961:[P:14008]:Rank[0/1] => init weight of Linear from trunc norm
2025-01-22 13:13:05,963:[P:14008]:Rank[0/1] => init bias of Linear to zeros
2025-01-22 13:13:05,963:[P:14008]:Rank[0/1] => init weight of Linear from trunc norm
2025-01-22 13:13:05,964:[P:14008]:Rank[0/1] => init bias of Linear to zeros
2025-01-22 13:13:05,964:[P:14008]:Rank[0/1] => init weight of Linear from trunc norm
2025-01-22 13:13:05,965:[P:14008]:Rank[0/1] => init bias of Linear to zeros
2025-01-22 13:13:05,966:[P:14008]:Rank[0/1] => init weight of Linear from trunc norm
2025-01-22 13:13:05,968:[P:14008]:Rank[0/1] => init bias of Linear to zeros
2025-01-22 13:13:05,969:[P:14008]:Rank[0/1] => init weight of Linear from trunc norm
2025-01-22 13:13:05,972:[P:14008]:Rank[0/1] => init bias of Linear to zeros
2025-01-22 13:13:05,972:[P:14008]:Rank[0/1] => init weight of Linear from trunc norm
2025-01-22 13:13:05,973:[P:14008]:Rank[0/1] => init bias of Linear to zeros
2025-01-22 13:13:05,973:[P:14008]:Rank[0/1] => init weight of Linear from trunc norm
2025-01-22 13:13:05,975:[P:14008]:Rank[0/1] => init bias of Linear to zeros
2025-01-22 13:13:05,975:[P:14008]:Rank[0/1] => init weight of Linear from trunc norm
2025-01-22 13:13:05,976:[P:14008]:Rank[0/1] => init bias of Linear to zeros
2025-01-22 13:13:05,976:[P:14008]:Rank[0/1] => init weight of Linear from trunc norm
2025-01-22 13:13:05,977:[P:14008]:Rank[0/1] => init bias of Linear to zeros
2025-01-22 13:13:05,978:[P:14008]:Rank[0/1] => init weight of Linear from trunc norm
2025-01-22 13:13:05,980:[P:14008]:Rank[0/1] => init bias of Linear to zeros
2025-01-22 13:13:05,981:[P:14008]:Rank[0/1] => init weight of Linear from trunc norm
2025-01-22 13:13:05,984:[P:14008]:Rank[0/1] => init bias of Linear to zeros
2025-01-22 13:13:35,109:[P:14008]:Rank[0/1] => ConvolutionalVisionTransformer(
  (stage0): VisionTransformer(
    (patch_embed): ConvEmbed(
      (proj): Conv2d(3, 64, kernel_size=(7, 7), stride=(4, 4), padding=(2, 2))
      (norm): LayerNorm((64,), eps=1e-05, elementwise_affine=True)
    )
    (pos_drop): Dropout(p=0.0, inplace=False)
    (blocks): ModuleList(
      (0): Block(
        (norm1): LayerNorm((64,), eps=1e-05, elementwise_affine=True)
        (attn): Attention(
          (conv_proj_q): Sequential(
            (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64, bias=False)
            (bn): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (rearrage): Rearrange('b c h w -> b (h w) c')
          )
          (conv_proj_k): Sequential(
            (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=64, bias=False)
            (bn): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (rearrage): Rearrange('b c h w -> b (h w) c')
          )
          (conv_proj_v): Sequential(
            (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=64, bias=False)
            (bn): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (rearrage): Rearrange('b c h w -> b (h w) c')
          )
          (proj_q): Linear(in_features=64, out_features=64, bias=True)
          (proj_k): Linear(in_features=64, out_features=64, bias=True)
          (proj_v): Linear(in_features=64, out_features=64, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=64, out_features=64, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
        )
        (drop_path): Identity()
        (norm2): LayerNorm((64,), eps=1e-05, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=64, out_features=256, bias=True)
          (act): QuickGELU()
          (fc2): Linear(in_features=256, out_features=64, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
        )
      )
    )
  )
  (stage1): VisionTransformer(
    (patch_embed): ConvEmbed(
      (proj): Conv2d(64, 192, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
      (norm): LayerNorm((192,), eps=1e-05, elementwise_affine=True)
    )
    (pos_drop): Dropout(p=0.0, inplace=False)
    (blocks): ModuleList(
      (0): Block(
        (norm1): LayerNorm((192,), eps=1e-05, elementwise_affine=True)
        (attn): Attention(
          (conv_proj_q): Sequential(
            (conv): Conv2d(192, 192, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=192, bias=False)
            (bn): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (rearrage): Rearrange('b c h w -> b (h w) c')
          )
          (conv_proj_k): Sequential(
            (conv): Conv2d(192, 192, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=192, bias=False)
            (bn): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (rearrage): Rearrange('b c h w -> b (h w) c')
          )
          (conv_proj_v): Sequential(
            (conv): Conv2d(192, 192, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=192, bias=False)
            (bn): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (rearrage): Rearrange('b c h w -> b (h w) c')
          )
          (proj_q): Linear(in_features=192, out_features=192, bias=True)
          (proj_k): Linear(in_features=192, out_features=192, bias=True)
          (proj_v): Linear(in_features=192, out_features=192, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=192, out_features=192, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
        )
        (drop_path): Identity()
        (norm2): LayerNorm((192,), eps=1e-05, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=192, out_features=768, bias=True)
          (act): QuickGELU()
          (fc2): Linear(in_features=768, out_features=192, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
        )
      )
      (1): Block(
        (norm1): LayerNorm((192,), eps=1e-05, elementwise_affine=True)
        (attn): Attention(
          (conv_proj_q): Sequential(
            (conv): Conv2d(192, 192, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=192, bias=False)
            (bn): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (rearrage): Rearrange('b c h w -> b (h w) c')
          )
          (conv_proj_k): Sequential(
            (conv): Conv2d(192, 192, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=192, bias=False)
            (bn): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (rearrage): Rearrange('b c h w -> b (h w) c')
          )
          (conv_proj_v): Sequential(
            (conv): Conv2d(192, 192, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=192, bias=False)
            (bn): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (rearrage): Rearrange('b c h w -> b (h w) c')
          )
          (proj_q): Linear(in_features=192, out_features=192, bias=True)
          (proj_k): Linear(in_features=192, out_features=192, bias=True)
          (proj_v): Linear(in_features=192, out_features=192, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=192, out_features=192, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
        )
        (drop_path): Identity()
        (norm2): LayerNorm((192,), eps=1e-05, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=192, out_features=768, bias=True)
          (act): QuickGELU()
          (fc2): Linear(in_features=768, out_features=192, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
        )
      )
    )
  )
  (stage2): VisionTransformer(
    (patch_embed): ConvEmbed(
      (proj): Conv2d(192, 384, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
      (norm): LayerNorm((384,), eps=1e-05, elementwise_affine=True)
    )
    (pos_drop): Dropout(p=0.0, inplace=False)
    (blocks): ModuleList(
      (0): Block(
        (norm1): LayerNorm((384,), eps=1e-05, elementwise_affine=True)
        (attn): Attention(
          (conv_proj_q): Sequential(
            (conv): Conv2d(384, 384, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=384, bias=False)
            (bn): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (rearrage): Rearrange('b c h w -> b (h w) c')
          )
          (conv_proj_k): Sequential(
            (conv): Conv2d(384, 384, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=384, bias=False)
            (bn): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (rearrage): Rearrange('b c h w -> b (h w) c')
          )
          (conv_proj_v): Sequential(
            (conv): Conv2d(384, 384, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=384, bias=False)
            (bn): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (rearrage): Rearrange('b c h w -> b (h w) c')
          )
          (proj_q): Linear(in_features=384, out_features=384, bias=True)
          (proj_k): Linear(in_features=384, out_features=384, bias=True)
          (proj_v): Linear(in_features=384, out_features=384, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=384, out_features=384, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
        )
        (drop_path): Identity()
        (norm2): LayerNorm((384,), eps=1e-05, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=384, out_features=1536, bias=True)
          (act): QuickGELU()
          (fc2): Linear(in_features=1536, out_features=384, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
        )
      )
      (1): Block(
        (norm1): LayerNorm((384,), eps=1e-05, elementwise_affine=True)
        (attn): Attention(
          (conv_proj_q): Sequential(
            (conv): Conv2d(384, 384, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=384, bias=False)
            (bn): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (rearrage): Rearrange('b c h w -> b (h w) c')
          )
          (conv_proj_k): Sequential(
            (conv): Conv2d(384, 384, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=384, bias=False)
            (bn): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (rearrage): Rearrange('b c h w -> b (h w) c')
          )
          (conv_proj_v): Sequential(
            (conv): Conv2d(384, 384, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=384, bias=False)
            (bn): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (rearrage): Rearrange('b c h w -> b (h w) c')
          )
          (proj_q): Linear(in_features=384, out_features=384, bias=True)
          (proj_k): Linear(in_features=384, out_features=384, bias=True)
          (proj_v): Linear(in_features=384, out_features=384, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=384, out_features=384, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
        )
        (drop_path): DropPath()
        (norm2): LayerNorm((384,), eps=1e-05, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=384, out_features=1536, bias=True)
          (act): QuickGELU()
          (fc2): Linear(in_features=1536, out_features=384, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
        )
      )
      (2): Block(
        (norm1): LayerNorm((384,), eps=1e-05, elementwise_affine=True)
        (attn): Attention(
          (conv_proj_q): Sequential(
            (conv): Conv2d(384, 384, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=384, bias=False)
            (bn): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (rearrage): Rearrange('b c h w -> b (h w) c')
          )
          (conv_proj_k): Sequential(
            (conv): Conv2d(384, 384, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=384, bias=False)
            (bn): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (rearrage): Rearrange('b c h w -> b (h w) c')
          )
          (conv_proj_v): Sequential(
            (conv): Conv2d(384, 384, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=384, bias=False)
            (bn): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (rearrage): Rearrange('b c h w -> b (h w) c')
          )
          (proj_q): Linear(in_features=384, out_features=384, bias=True)
          (proj_k): Linear(in_features=384, out_features=384, bias=True)
          (proj_v): Linear(in_features=384, out_features=384, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=384, out_features=384, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
        )
        (drop_path): DropPath()
        (norm2): LayerNorm((384,), eps=1e-05, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=384, out_features=1536, bias=True)
          (act): QuickGELU()
          (fc2): Linear(in_features=1536, out_features=384, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
        )
      )
      (3): Block(
        (norm1): LayerNorm((384,), eps=1e-05, elementwise_affine=True)
        (attn): Attention(
          (conv_proj_q): Sequential(
            (conv): Conv2d(384, 384, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=384, bias=False)
            (bn): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (rearrage): Rearrange('b c h w -> b (h w) c')
          )
          (conv_proj_k): Sequential(
            (conv): Conv2d(384, 384, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=384, bias=False)
            (bn): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (rearrage): Rearrange('b c h w -> b (h w) c')
          )
          (conv_proj_v): Sequential(
            (conv): Conv2d(384, 384, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=384, bias=False)
            (bn): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (rearrage): Rearrange('b c h w -> b (h w) c')
          )
          (proj_q): Linear(in_features=384, out_features=384, bias=True)
          (proj_k): Linear(in_features=384, out_features=384, bias=True)
          (proj_v): Linear(in_features=384, out_features=384, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=384, out_features=384, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
        )
        (drop_path): DropPath()
        (norm2): LayerNorm((384,), eps=1e-05, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=384, out_features=1536, bias=True)
          (act): QuickGELU()
          (fc2): Linear(in_features=1536, out_features=384, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
        )
      )
      (4): Block(
        (norm1): LayerNorm((384,), eps=1e-05, elementwise_affine=True)
        (attn): Attention(
          (conv_proj_q): Sequential(
            (conv): Conv2d(384, 384, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=384, bias=False)
            (bn): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (rearrage): Rearrange('b c h w -> b (h w) c')
          )
          (conv_proj_k): Sequential(
            (conv): Conv2d(384, 384, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=384, bias=False)
            (bn): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (rearrage): Rearrange('b c h w -> b (h w) c')
          )
          (conv_proj_v): Sequential(
            (conv): Conv2d(384, 384, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=384, bias=False)
            (bn): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (rearrage): Rearrange('b c h w -> b (h w) c')
          )
          (proj_q): Linear(in_features=384, out_features=384, bias=True)
          (proj_k): Linear(in_features=384, out_features=384, bias=True)
          (proj_v): Linear(in_features=384, out_features=384, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=384, out_features=384, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
        )
        (drop_path): DropPath()
        (norm2): LayerNorm((384,), eps=1e-05, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=384, out_features=1536, bias=True)
          (act): QuickGELU()
          (fc2): Linear(in_features=1536, out_features=384, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
        )
      )
      (5): Block(
        (norm1): LayerNorm((384,), eps=1e-05, elementwise_affine=True)
        (attn): Attention(
          (conv_proj_q): Sequential(
            (conv): Conv2d(384, 384, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=384, bias=False)
            (bn): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (rearrage): Rearrange('b c h w -> b (h w) c')
          )
          (conv_proj_k): Sequential(
            (conv): Conv2d(384, 384, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=384, bias=False)
            (bn): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (rearrage): Rearrange('b c h w -> b (h w) c')
          )
          (conv_proj_v): Sequential(
            (conv): Conv2d(384, 384, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=384, bias=False)
            (bn): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (rearrage): Rearrange('b c h w -> b (h w) c')
          )
          (proj_q): Linear(in_features=384, out_features=384, bias=True)
          (proj_k): Linear(in_features=384, out_features=384, bias=True)
          (proj_v): Linear(in_features=384, out_features=384, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=384, out_features=384, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
        )
        (drop_path): DropPath()
        (norm2): LayerNorm((384,), eps=1e-05, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=384, out_features=1536, bias=True)
          (act): QuickGELU()
          (fc2): Linear(in_features=1536, out_features=384, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
        )
      )
      (6): Block(
        (norm1): LayerNorm((384,), eps=1e-05, elementwise_affine=True)
        (attn): Attention(
          (conv_proj_q): Sequential(
            (conv): Conv2d(384, 384, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=384, bias=False)
            (bn): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (rearrage): Rearrange('b c h w -> b (h w) c')
          )
          (conv_proj_k): Sequential(
            (conv): Conv2d(384, 384, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=384, bias=False)
            (bn): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (rearrage): Rearrange('b c h w -> b (h w) c')
          )
          (conv_proj_v): Sequential(
            (conv): Conv2d(384, 384, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=384, bias=False)
            (bn): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (rearrage): Rearrange('b c h w -> b (h w) c')
          )
          (proj_q): Linear(in_features=384, out_features=384, bias=True)
          (proj_k): Linear(in_features=384, out_features=384, bias=True)
          (proj_v): Linear(in_features=384, out_features=384, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=384, out_features=384, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
        )
        (drop_path): DropPath()
        (norm2): LayerNorm((384,), eps=1e-05, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=384, out_features=1536, bias=True)
          (act): QuickGELU()
          (fc2): Linear(in_features=1536, out_features=384, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
        )
      )
      (7): Block(
        (norm1): LayerNorm((384,), eps=1e-05, elementwise_affine=True)
        (attn): Attention(
          (conv_proj_q): Sequential(
            (conv): Conv2d(384, 384, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=384, bias=False)
            (bn): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (rearrage): Rearrange('b c h w -> b (h w) c')
          )
          (conv_proj_k): Sequential(
            (conv): Conv2d(384, 384, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=384, bias=False)
            (bn): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (rearrage): Rearrange('b c h w -> b (h w) c')
          )
          (conv_proj_v): Sequential(
            (conv): Conv2d(384, 384, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=384, bias=False)
            (bn): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (rearrage): Rearrange('b c h w -> b (h w) c')
          )
          (proj_q): Linear(in_features=384, out_features=384, bias=True)
          (proj_k): Linear(in_features=384, out_features=384, bias=True)
          (proj_v): Linear(in_features=384, out_features=384, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=384, out_features=384, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
        )
        (drop_path): DropPath()
        (norm2): LayerNorm((384,), eps=1e-05, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=384, out_features=1536, bias=True)
          (act): QuickGELU()
          (fc2): Linear(in_features=1536, out_features=384, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
        )
      )
      (8): Block(
        (norm1): LayerNorm((384,), eps=1e-05, elementwise_affine=True)
        (attn): Attention(
          (conv_proj_q): Sequential(
            (conv): Conv2d(384, 384, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=384, bias=False)
            (bn): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (rearrage): Rearrange('b c h w -> b (h w) c')
          )
          (conv_proj_k): Sequential(
            (conv): Conv2d(384, 384, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=384, bias=False)
            (bn): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (rearrage): Rearrange('b c h w -> b (h w) c')
          )
          (conv_proj_v): Sequential(
            (conv): Conv2d(384, 384, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=384, bias=False)
            (bn): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (rearrage): Rearrange('b c h w -> b (h w) c')
          )
          (proj_q): Linear(in_features=384, out_features=384, bias=True)
          (proj_k): Linear(in_features=384, out_features=384, bias=True)
          (proj_v): Linear(in_features=384, out_features=384, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=384, out_features=384, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
        )
        (drop_path): DropPath()
        (norm2): LayerNorm((384,), eps=1e-05, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=384, out_features=1536, bias=True)
          (act): QuickGELU()
          (fc2): Linear(in_features=1536, out_features=384, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
        )
      )
      (9): Block(
        (norm1): LayerNorm((384,), eps=1e-05, elementwise_affine=True)
        (attn): Attention(
          (conv_proj_q): Sequential(
            (conv): Conv2d(384, 384, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=384, bias=False)
            (bn): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (rearrage): Rearrange('b c h w -> b (h w) c')
          )
          (conv_proj_k): Sequential(
            (conv): Conv2d(384, 384, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=384, bias=False)
            (bn): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (rearrage): Rearrange('b c h w -> b (h w) c')
          )
          (conv_proj_v): Sequential(
            (conv): Conv2d(384, 384, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=384, bias=False)
            (bn): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (rearrage): Rearrange('b c h w -> b (h w) c')
          )
          (proj_q): Linear(in_features=384, out_features=384, bias=True)
          (proj_k): Linear(in_features=384, out_features=384, bias=True)
          (proj_v): Linear(in_features=384, out_features=384, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=384, out_features=384, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
        )
        (drop_path): DropPath()
        (norm2): LayerNorm((384,), eps=1e-05, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=384, out_features=1536, bias=True)
          (act): QuickGELU()
          (fc2): Linear(in_features=1536, out_features=384, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
        )
      )
    )
  )
  (norm): LayerNorm((384,), eps=1e-05, elementwise_affine=True)
  (head): Linear(in_features=384, out_features=1000, bias=True)
)
2025-01-22 13:13:35,111:[P:14008]:Rank[0/1] Trainable Model Total Parameter: 	20.0M
2025-01-22 13:13:35,122:[P:14008]:Rank[0/1] => loading checkpoint 'OUTPUT/imagenet/cvt-13-224x224/checkpoint.pth'
2025-01-22 13:13:48,909:[P:14008]:Rank[0/1] => Rank[0/1]: loaded checkpoint 'OUTPUT/imagenet/cvt-13-224x224/checkpoint.pth' (epoch: 1)
2025-01-22 13:13:48,920:[P:14008]:Rank[0/1] => use timm loader for training
2025-01-22 13:13:49,031:[P:14008]:Rank[0/1] => start training
2025-01-22 13:13:49,031:[P:14008]:Rank[0/1] => Epoch[1]: epoch start
2025-01-22 13:13:49,031:[P:14008]:Rank[0/1] => Epoch[1]: train start
2025-01-22 13:13:49,031:[P:14008]:Rank[0/1] => switch to train mode
2025-01-22 13:14:06,654:[P:14008]:Rank[0/1] => Epoch[1][0/13]: Time 17.621s (17.621s)	Speed 3.6 samples/s	Data 0.412s (0.412s)	Loss 6.70571 (6.70571)	Accuracy@1 3.125 (3.125)	Accuracy@5 6.250 (6.250)	
2025-01-22 13:15:24,977:[P:14008]:Rank[0/1] => Epoch[1]: train end, duration: 95.95s
2025-01-22 13:15:24,978:[P:14008]:Rank[0/1] => Epoch[1]: validate start
2025-01-22 13:15:24,978:[P:14008]:Rank[0/1] => switch to eval mode
2025-01-22 13:15:31,335:[P:14008]:Rank[0/1] => synchronize...
2025-01-22 13:15:31,336:[P:14008]:Rank[0/1] => TEST:	Loss 3.5902	Error@1 69.892%	Error@5 0.000%	Accuracy@1 30.108%	Accuracy@5 100.000%	
2025-01-22 13:15:31,336:[P:14008]:Rank[0/1] => switch to train mode
2025-01-22 13:15:31,337:[P:14008]:Rank[0/1] => Epoch[1]: validate end, duration: 6.36s
2025-01-22 13:15:31,337:[P:14008]:Rank[0/1] => lr: 0.00010059999999999999
2025-01-22 13:15:31,340:[P:14008]:Rank[0/1] => saving checkpoint to OUTPUT/imagenet/cvt-13-224x224
2025-01-22 13:15:31,761:[P:14008]:Rank[0/1] => save model to OUTPUT/imagenet/cvt-13-224x224/model_best.pth
2025-01-22 13:15:31,892:[P:14008]:Rank[0/1] => Epoch[1]: epoch end, duration : 102.86s
2025-01-22 13:15:31,892:[P:14008]:Rank[0/1] => save model to OUTPUT/imagenet/cvt-13-224x224/final_state.pth
2025-01-22 13:15:32,019:[P:14008]:Rank[0/1] => finish training
